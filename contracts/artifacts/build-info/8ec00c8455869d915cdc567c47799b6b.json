{
	"id": "8ec00c8455869d915cdc567c47799b6b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Stake.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.9;\n\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"./interfae/IConstant.sol\";\nimport \"./Auth.sol\";\n\ncontract Stake is Admin {\n    using SafeERC20 for IERC20;\n\n    IERC20 private token =\n        IERC20(address(0x816AC81F0B32453153721a4ED8D223D6D560643b));\n\n    IConstant private cons =\n        IConstant(address(0x0582955206bFAA4ee8AbbeE39d2F6a7F4Dc6C365));\n\n    event InitTokenEvent(address token, address cons);\n\n    event WithdrawalEvent(uint amount, uint when);\n\n    event StakeEvent(address from, address to, uint256 amount);\n\n    event UnStakeEvent(address from, address to, uint256 amount);\n\n    function _initToken(\n        address tokenAddress,\n        address consAddress\n    ) external onlyAdmin {\n        emit InitTokenEvent(tokenAddress, consAddress);\n        token = IERC20(tokenAddress);\n        cons = IConstant(consAddress);\n    }\n\n    // 质押\n    function _stake(address acc, uint256 _amount) external onlyAdmin {\n        token.safeTransferFrom(acc, address(this), _amount);\n        emit StakeEvent(acc, address(this), _amount);\n    }\n\n    // 解除质押\n    function _unStake(address acc, uint256 amount) external onlyAdmin {\n        token.safeTransferFrom(address(this), acc, amount);\n        emit UnStakeEvent(address(this), acc, amount);\n    }\n\n    // 提现奖励\n    function _withdraw(address acc, uint256 _amount) external onlyAdmin {\n        token.safeTransferFrom(address(this), acc, _amount);\n        emit WithdrawalEvent(address(this).balance, block.timestamp);\n    }\n\n    function _balanceOf(address msgSender) external view returns (uint256) {\n        return token.balanceOf(msgSender);\n    }\n\n    function _approve() external onlyAdmin {\n        token.safeApprove(address(this), cons.getTotalTokenIssuance());\n    }\n\n    function _increaseAllowance() external onlyAdmin {\n        token.safeIncreaseAllowance(\n            address(this),\n            cons.getTotalTokenIssuance()\n        );\n    }\n\n    function getValue()public view returns(uint256){\n       return cons.getTotalTokenIssuance();\n    }\n   \n}\n"
			},
			"contracts/Auth.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.9;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract Admin is Ownable {\n    mapping(address => bool) private _admins;\n\n    modifier onlyAdmin() {\n        require(_admins[msg.sender], \"Only admin can call it\");\n        _;\n    }\n\n    function addAdmin(address _admin) public onlyOwner {\n        _admins[_admin] = true;\n    }\n\n    function delAdmin(address _admin) public onlyOwner {\n        _admins[_admin] = false;\n    }\n\n    function isAdmin(address _addr) public view returns (bool) {\n        return _admins[_addr];\n    }\n}\n\ncontract Server is Admin {\n    mapping(address => bool) private _servers;\n\n    modifier onlyServer() {\n        require(_servers[msg.sender], \"Only server can call it\");\n        _;\n    }\n\n    function addServer(address _server) public onlyOwner {\n        _servers[_server] = true;\n    }\n\n    function delServer(address _server) public onlyOwner {\n        _servers[_server] = false;\n    }\n\n    function isServer(address _server) public view returns (bool) {\n        return _servers[_server];\n    }\n}\n"
			},
			"contracts/interfae/IConstant.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.9;\n\ninterface IConstant {\n    function getAllCons()\n        external\n        view\n        returns (\n            uint16,\n            uint16,\n            uint16,\n            uint16,\n            uint16,\n            uint16,\n            uint16,\n            uint16,\n            uint16,\n            uint16,\n            uint16,\n            uint16\n        );\n\n    function getOnline() external view returns (uint16);\n\n    function getRendering() external view returns (uint16);\n\n    function getOffline() external view returns (uint16);\n\n    function getCpu() external view returns (uint16);\n\n    function getMemory() external view returns (uint16);\n\n    function getGraphicsCard() external view returns (uint16);\n\n    function getHardDisk() external view returns (uint16);\n\n    function getIP() external view returns (uint16);\n\n    function getCpuWeights() external view returns (uint16);\n\n    function getMemWeights() external view returns (uint16);\n\n    function getGraphicsCardWeights() external view returns (uint16);\n\n    function getHardDiskWeights() external view returns (uint16);\n\n    function getTotalTokenIssuance() external view returns (uint256);\n\n    function getStakeAmountLimit() external view returns (uint256);\n\n    function setStakeAmountLimit(uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206cf88f5263029175b3545a48eae10b12554cc86876c6445b3e4e83cc514c8f4264736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206cf88f5263029175b3545a48eae10b12554cc86876c6445b3e4e83cc514c8f4264736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0xF88F5263029175B3545A48EAE1 SIGNEXTEND SLT SSTORE 0x4C 0xC8 PUSH9 0x76C6445B3E4E83CC51 0x4C DUP16 TIMESTAMP PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "707:3748:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206cf88f5263029175b3545a48eae10b12554cc86876c6445b3e4e83cc514c8f4264736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0xF88F5263029175B3545A48EAE1 SIGNEXTEND SLT SSTORE 0x4C 0xC8 PUSH9 0x76C6445B3E4E83CC51 0x4C DUP16 TIMESTAMP PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "707:3748:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206cf88f5263029175b3545a48eae10b12554cc86876c6445b3e4e83cc514c8f4264736f6c63430008110033",
									".code": [
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Auth.sol",
								"contracts/Stake.sol",
								"contracts/interfae/IConstant.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201456f7767f46f239da11f81368573b480f6d8de2e2a321dadf5bcd65d1c39d7564736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201456f7767f46f239da11f81368573b480f6d8de2e2a321dadf5bcd65d1c39d7564736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ JUMP 0xF7 PUSH23 0x7F46F239DA11F81368573B480F6D8DE2E2A321DADF5BCD PUSH6 0xD1C39D756473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "194:8964:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201456f7767f46f239da11f81368573b480f6d8de2e2a321dadf5bcd65d1c39d7564736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ JUMP 0xF7 PUSH23 0x7F46F239DA11F81368573B480F6D8DE2E2A321DADF5BCD PUSH6 0xD1C39D756473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "194:8964:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201456f7767f46f239da11f81368573b480f6d8de2e2a321dadf5bcd65d1c39d7564736f6c63430008110033",
									".code": [
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Auth.sol",
								"contracts/Stake.sol",
								"contracts/interfae/IConstant.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Auth.sol": {
				"Admin": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								}
							],
							"name": "addAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								}
							],
							"name": "delAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "isAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Auth.sol\":118:598  contract Admin is Ownable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_6)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"contracts/Auth.sol\":118:598  contract Admin is Ownable {... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/Auth.sol\":118:598  contract Admin is Ownable {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Auth.sol\":118:598  contract Admin is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x24d7806c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x62d91855\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x70480275\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Auth.sol\":499:596  function isAdmin(address _addr) public view returns (bool) {... */\n    tag_3:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Auth.sol\":402:493  function delAdmin(address _admin) public onlyOwner {... */\n    tag_4:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_16:\n      tag_17\n      jump\t// in\n    tag_15:\n      stop\n        /* \"contracts/Auth.sol\":306:396  function addAdmin(address _admin) public onlyOwner {... */\n    tag_5:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_19:\n      tag_20\n      jump\t// in\n    tag_18:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_7:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_8:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_28:\n      tag_29\n      jump\t// in\n    tag_27:\n      stop\n        /* \"contracts/Auth.sol\":499:596  function isAdmin(address _addr) public view returns (bool) {... */\n    tag_12:\n        /* \"contracts/Auth.sol\":552:556  bool */\n      0x00\n        /* \"contracts/Auth.sol\":575:582  _admins */\n      0x01\n        /* \"contracts/Auth.sol\":575:589  _admins[_addr] */\n      0x00\n        /* \"contracts/Auth.sol\":583:588  _addr */\n      dup4\n        /* \"contracts/Auth.sol\":575:589  _admins[_addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Auth.sol\":568:589  return _admins[_addr] */\n      swap1\n      pop\n        /* \"contracts/Auth.sol\":499:596  function isAdmin(address _addr) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Auth.sol\":402:493  function delAdmin(address _admin) public onlyOwner {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_32\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_33\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_32:\n        /* \"contracts/Auth.sol\":481:486  false */\n      0x00\n        /* \"contracts/Auth.sol\":463:470  _admins */\n      0x01\n        /* \"contracts/Auth.sol\":463:478  _admins[_admin] */\n      0x00\n        /* \"contracts/Auth.sol\":471:477  _admin */\n      dup4\n        /* \"contracts/Auth.sol\":463:478  _admins[_admin] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Auth.sol\":463:486  _admins[_admin] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Auth.sol\":402:493  function delAdmin(address _admin) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Auth.sol\":306:396  function addAdmin(address _admin) public onlyOwner {... */\n    tag_20:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_36\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_33\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_36:\n        /* \"contracts/Auth.sol\":385:389  true */\n      0x01\n        /* \"contracts/Auth.sol\":367:374  _admins */\n      dup1\n        /* \"contracts/Auth.sol\":367:382  _admins[_admin] */\n      0x00\n        /* \"contracts/Auth.sol\":375:381  _admin */\n      dup4\n        /* \"contracts/Auth.sol\":367:382  _admins[_admin] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Auth.sol\":367:389  _admins[_admin] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Auth.sol\":306:396  function addAdmin(address _admin) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_39\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_33\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_39:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_45\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_33\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_47\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_47:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_50\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_53\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_54\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_24\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_55\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_55:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_61:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_63:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_64:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_81\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_63\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_65:\n        /* \"#utility.yul\":641:665   */\n      tag_83\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_64\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_84\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_84:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_66:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_86\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_65\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_11:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_88\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_89\n      tag_61\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":917:1036   */\n    tag_88:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_90\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_66\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1266   */\n    tag_67:\n        /* \"#utility.yul\":1210:1217   */\n      0x00\n        /* \"#utility.yul\":1253:1258   */\n      dup2\n        /* \"#utility.yul\":1246:1259   */\n      iszero\n        /* \"#utility.yul\":1239:1260   */\n      iszero\n        /* \"#utility.yul\":1228:1260   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1272:1381   */\n    tag_68:\n        /* \"#utility.yul\":1353:1374   */\n      tag_93\n        /* \"#utility.yul\":1368:1373   */\n      dup2\n        /* \"#utility.yul\":1353:1374   */\n      tag_67\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":1348:1351   */\n      dup3\n        /* \"#utility.yul\":1341:1375   */\n      mstore\n        /* \"#utility.yul\":1272:1381   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1597   */\n    tag_14:\n        /* \"#utility.yul\":1474:1478   */\n      0x00\n        /* \"#utility.yul\":1512:1514   */\n      0x20\n        /* \"#utility.yul\":1501:1510   */\n      dup3\n        /* \"#utility.yul\":1497:1515   */\n      add\n        /* \"#utility.yul\":1489:1515   */\n      swap1\n      pop\n        /* \"#utility.yul\":1525:1590   */\n      tag_95\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1576:1585   */\n      dup4\n        /* \"#utility.yul\":1572:1589   */\n      add\n        /* \"#utility.yul\":1563:1569   */\n      dup5\n        /* \"#utility.yul\":1525:1590   */\n      tag_68\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":1387:1597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1603:1721   */\n    tag_69:\n        /* \"#utility.yul\":1690:1714   */\n      tag_97\n        /* \"#utility.yul\":1708:1713   */\n      dup2\n        /* \"#utility.yul\":1690:1714   */\n      tag_64\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":1685:1688   */\n      dup3\n        /* \"#utility.yul\":1678:1715   */\n      mstore\n        /* \"#utility.yul\":1603:1721   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1727:1949   */\n    tag_26:\n        /* \"#utility.yul\":1820:1824   */\n      0x00\n        /* \"#utility.yul\":1858:1860   */\n      0x20\n        /* \"#utility.yul\":1847:1856   */\n      dup3\n        /* \"#utility.yul\":1843:1861   */\n      add\n        /* \"#utility.yul\":1835:1861   */\n      swap1\n      pop\n        /* \"#utility.yul\":1871:1942   */\n      tag_99\n        /* \"#utility.yul\":1939:1940   */\n      0x00\n        /* \"#utility.yul\":1928:1937   */\n      dup4\n        /* \"#utility.yul\":1924:1941   */\n      add\n        /* \"#utility.yul\":1915:1921   */\n      dup5\n        /* \"#utility.yul\":1871:1942   */\n      tag_69\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":1727:1949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1955:2124   */\n    tag_70:\n        /* \"#utility.yul\":2039:2050   */\n      0x00\n        /* \"#utility.yul\":2073:2079   */\n      dup3\n        /* \"#utility.yul\":2068:2071   */\n      dup3\n        /* \"#utility.yul\":2061:2080   */\n      mstore\n        /* \"#utility.yul\":2113:2117   */\n      0x20\n        /* \"#utility.yul\":2108:2111   */\n      dup3\n        /* \"#utility.yul\":2104:2118   */\n      add\n        /* \"#utility.yul\":2089:2118   */\n      swap1\n      pop\n        /* \"#utility.yul\":1955:2124   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2130:2355   */\n    tag_71:\n        /* \"#utility.yul\":2270:2304   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":2266:2267   */\n      0x00\n        /* \"#utility.yul\":2258:2264   */\n      dup3\n        /* \"#utility.yul\":2254:2268   */\n      add\n        /* \"#utility.yul\":2247:2305   */\n      mstore\n        /* \"#utility.yul\":2339:2347   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2334:2336   */\n      0x20\n        /* \"#utility.yul\":2326:2332   */\n      dup3\n        /* \"#utility.yul\":2322:2337   */\n      add\n        /* \"#utility.yul\":2315:2348   */\n      mstore\n        /* \"#utility.yul\":2130:2355   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2361:2727   */\n    tag_72:\n        /* \"#utility.yul\":2503:2506   */\n      0x00\n        /* \"#utility.yul\":2524:2591   */\n      tag_103\n        /* \"#utility.yul\":2588:2590   */\n      0x26\n        /* \"#utility.yul\":2583:2586   */\n      dup4\n        /* \"#utility.yul\":2524:2591   */\n      tag_70\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":2517:2591   */\n      swap2\n      pop\n        /* \"#utility.yul\":2600:2693   */\n      tag_104\n        /* \"#utility.yul\":2689:2692   */\n      dup3\n        /* \"#utility.yul\":2600:2693   */\n      tag_71\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":2718:2720   */\n      0x40\n        /* \"#utility.yul\":2713:2716   */\n      dup3\n        /* \"#utility.yul\":2709:2721   */\n      add\n        /* \"#utility.yul\":2702:2721   */\n      swap1\n      pop\n        /* \"#utility.yul\":2361:2727   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2733:3152   */\n    tag_49:\n        /* \"#utility.yul\":2899:2903   */\n      0x00\n        /* \"#utility.yul\":2937:2939   */\n      0x20\n        /* \"#utility.yul\":2926:2935   */\n      dup3\n        /* \"#utility.yul\":2922:2940   */\n      add\n        /* \"#utility.yul\":2914:2940   */\n      swap1\n      pop\n        /* \"#utility.yul\":2986:2995   */\n      dup2\n        /* \"#utility.yul\":2980:2984   */\n      dup2\n        /* \"#utility.yul\":2976:2996   */\n      sub\n        /* \"#utility.yul\":2972:2973   */\n      0x00\n        /* \"#utility.yul\":2961:2970   */\n      dup4\n        /* \"#utility.yul\":2957:2974   */\n      add\n        /* \"#utility.yul\":2950:2997   */\n      mstore\n        /* \"#utility.yul\":3014:3145   */\n      tag_106\n        /* \"#utility.yul\":3140:3144   */\n      dup2\n        /* \"#utility.yul\":3014:3145   */\n      tag_72\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":3006:3145   */\n      swap1\n      pop\n        /* \"#utility.yul\":2733:3152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3158:3340   */\n    tag_73:\n        /* \"#utility.yul\":3298:3332   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":3294:3295   */\n      0x00\n        /* \"#utility.yul\":3286:3292   */\n      dup3\n        /* \"#utility.yul\":3282:3296   */\n      add\n        /* \"#utility.yul\":3275:3333   */\n      mstore\n        /* \"#utility.yul\":3158:3340   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3346:3712   */\n    tag_74:\n        /* \"#utility.yul\":3488:3491   */\n      0x00\n        /* \"#utility.yul\":3509:3576   */\n      tag_109\n        /* \"#utility.yul\":3573:3575   */\n      0x20\n        /* \"#utility.yul\":3568:3571   */\n      dup4\n        /* \"#utility.yul\":3509:3576   */\n      tag_70\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":3502:3576   */\n      swap2\n      pop\n        /* \"#utility.yul\":3585:3678   */\n      tag_110\n        /* \"#utility.yul\":3674:3677   */\n      dup3\n        /* \"#utility.yul\":3585:3678   */\n      tag_73\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":3703:3705   */\n      0x20\n        /* \"#utility.yul\":3698:3701   */\n      dup3\n        /* \"#utility.yul\":3694:3706   */\n      add\n        /* \"#utility.yul\":3687:3706   */\n      swap1\n      pop\n        /* \"#utility.yul\":3346:3712   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3718:4137   */\n    tag_57:\n        /* \"#utility.yul\":3884:3888   */\n      0x00\n        /* \"#utility.yul\":3922:3924   */\n      0x20\n        /* \"#utility.yul\":3911:3920   */\n      dup3\n        /* \"#utility.yul\":3907:3925   */\n      add\n        /* \"#utility.yul\":3899:3925   */\n      swap1\n      pop\n        /* \"#utility.yul\":3971:3980   */\n      dup2\n        /* \"#utility.yul\":3965:3969   */\n      dup2\n        /* \"#utility.yul\":3961:3981   */\n      sub\n        /* \"#utility.yul\":3957:3958   */\n      0x00\n        /* \"#utility.yul\":3946:3955   */\n      dup4\n        /* \"#utility.yul\":3942:3959   */\n      add\n        /* \"#utility.yul\":3935:3982   */\n      mstore\n        /* \"#utility.yul\":3999:4130   */\n      tag_112\n        /* \"#utility.yul\":4125:4129   */\n      dup2\n        /* \"#utility.yul\":3999:4130   */\n      tag_74\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":3991:4130   */\n      swap1\n      pop\n        /* \"#utility.yul\":3718:4137   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122050bb71d38169e40fb52964302e3528c4afcf96a12234cc9caae8be5d484560e364736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_849": {
									"entryPoint": 50,
									"id": 849,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 58,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61066d8061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806324d7806c1461006757806362d918551461009757806370480275146100b3578063715018a6146100cf5780638da5cb5b146100d9578063f2fde38b146100f7575b600080fd5b610081600480360381019061007c919061049b565b610113565b60405161008e91906104e3565b60405180910390f35b6100b160048036038101906100ac919061049b565b610169565b005b6100cd60048036038101906100c8919061049b565b6101cc565b005b6100d761022e565b005b6100e1610242565b6040516100ee919061050d565b60405180910390f35b610111600480360381019061010c919061049b565b61026b565b005b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6101716102ee565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6101d46102ee565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6102366102ee565b610240600061036c565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102736102ee565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d9906105ab565b60405180910390fd5b6102eb8161036c565b50565b6102f6610430565b73ffffffffffffffffffffffffffffffffffffffff16610314610242565b73ffffffffffffffffffffffffffffffffffffffff161461036a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036190610617565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104688261043d565b9050919050565b6104788161045d565b811461048357600080fd5b50565b6000813590506104958161046f565b92915050565b6000602082840312156104b1576104b0610438565b5b60006104bf84828501610486565b91505092915050565b60008115159050919050565b6104dd816104c8565b82525050565b60006020820190506104f860008301846104d4565b92915050565b6105078161045d565b82525050565b600060208201905061052260008301846104fe565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610595602683610528565b91506105a082610539565b604082019050919050565b600060208201905081810360008301526105c481610588565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610601602083610528565b915061060c826105cb565b602082019050919050565b60006020820190508181036000830152610630816105f4565b905091905056fea264697066735822122050bb71d38169e40fb52964302e3528c4afcf96a12234cc9caae8be5d484560e364736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x32 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x66D DUP1 PUSH2 0x10D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x24D7806C EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x62D91855 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x70480275 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xF7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x49B JUMP JUMPDEST PUSH2 0x113 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x49B JUMP JUMPDEST PUSH2 0x169 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x49B JUMP JUMPDEST PUSH2 0x1CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD7 PUSH2 0x22E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH2 0x242 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEE SWAP2 SWAP1 PUSH2 0x50D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x49B JUMP JUMPDEST PUSH2 0x26B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x171 PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1D4 PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x236 PUSH2 0x2EE JUMP JUMPDEST PUSH2 0x240 PUSH1 0x0 PUSH2 0x36C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x273 PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D9 SWAP1 PUSH2 0x5AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2EB DUP2 PUSH2 0x36C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2F6 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x314 PUSH2 0x242 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x36A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x361 SWAP1 PUSH2 0x617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x468 DUP3 PUSH2 0x43D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x478 DUP2 PUSH2 0x45D JUMP JUMPDEST DUP2 EQ PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x495 DUP2 PUSH2 0x46F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4B1 JUMPI PUSH2 0x4B0 PUSH2 0x438 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4BF DUP5 DUP3 DUP6 ADD PUSH2 0x486 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4DD DUP2 PUSH2 0x4C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4F8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x507 DUP2 PUSH2 0x45D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x522 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x595 PUSH1 0x26 DUP4 PUSH2 0x528 JUMP JUMPDEST SWAP2 POP PUSH2 0x5A0 DUP3 PUSH2 0x539 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5C4 DUP2 PUSH2 0x588 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x601 PUSH1 0x20 DUP4 PUSH2 0x528 JUMP JUMPDEST SWAP2 POP PUSH2 0x60C DUP3 PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x630 DUP2 PUSH2 0x5F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP 0xBB PUSH18 0xD38169E40FB52964302E3528C4AFCF96A122 CALLVALUE 0xCC SWAP13 0xAA 0xE8 0xBE 0x5D BASEFEE GASLIMIT PUSH1 0xE3 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "118:480:6:-:0;;;;;;;;;;;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;118:480:6;;640:96:5;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;118:480:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_54": {
									"entryPoint": 750,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_849": {
									"entryPoint": 1072,
									"id": 849,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 876,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addAdmin_894": {
									"entryPoint": 460,
									"id": 894,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@delAdmin_908": {
									"entryPoint": 361,
									"id": 908,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isAdmin_920": {
									"entryPoint": 275,
									"id": 920,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": 578,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 558,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 619,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1278,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1236,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1320,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1080,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 1337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 1483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4140:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:9",
														"type": ""
													}
												],
												"src": "466:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:9"
															},
															"nodeType": "YulIf",
															"src": "621:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:9",
														"type": ""
													}
												],
												"src": "568:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:9",
														"type": ""
													}
												],
												"src": "696:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:9"
															},
															"nodeType": "YulIf",
															"src": "917:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:9",
														"type": ""
													}
												],
												"src": "841:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1218:48:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1228:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1253:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1246:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1246:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1228:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1200:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1210:7:9",
														"type": ""
													}
												],
												"src": "1176:90:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1331:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1348:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1368:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1353:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1353:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1341:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1341:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1341:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1319:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1326:3:9",
														"type": ""
													}
												],
												"src": "1272:109:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1479:118:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1489:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1501:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1512:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1497:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1497:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1489:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1563:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1576:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1587:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1572:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1572:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1525:37:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1525:65:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1525:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1451:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1463:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1474:4:9",
														"type": ""
													}
												],
												"src": "1387:210:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1668:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1685:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1708:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1690:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1690:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1678:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1678:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1678:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1656:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1663:3:9",
														"type": ""
													}
												],
												"src": "1603:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1825:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1835:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1847:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1858:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1843:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1843:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1835:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1915:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1928:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1939:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1924:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1924:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1871:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1871:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1871:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1797:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1809:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1820:4:9",
														"type": ""
													}
												],
												"src": "1727:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2051:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2068:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2073:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2061:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2061:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2061:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2089:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2108:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2113:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2104:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2089:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2023:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2028:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2039:11:9",
														"type": ""
													}
												],
												"src": "1955:169:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2236:119:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2258:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2266:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2254:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2254:14:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2270:34:9",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2247:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2247:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2247:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2326:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2334:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2322:15:9"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2339:8:9",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2315:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2315:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2315:33:9"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2228:6:9",
														"type": ""
													}
												],
												"src": "2130:225:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2507:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2517:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2583:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2588:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2524:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2524:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2517:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2689:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "2600:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2600:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2600:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2702:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2713:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2718:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2709:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2709:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2702:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2495:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2503:3:9",
														"type": ""
													}
												],
												"src": "2361:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2904:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2914:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2926:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2937:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2922:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2922:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2914:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2961:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2972:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2957:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2957:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2980:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2986:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2976:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2976:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2950:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2950:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2950:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3006:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3140:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3014:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3014:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3006:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2884:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2899:4:9",
														"type": ""
													}
												],
												"src": "2733:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3264:76:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3286:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3294:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3282:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3282:14:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3298:34:9",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3275:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3275:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3275:58:9"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3256:6:9",
														"type": ""
													}
												],
												"src": "3158:182:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3492:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3502:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3568:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3573:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3509:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3509:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3502:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3674:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "3585:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3585:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3585:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3687:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3698:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3703:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3694:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3694:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3687:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3480:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3488:3:9",
														"type": ""
													}
												],
												"src": "3346:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3889:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3899:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3911:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3922:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3907:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3907:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3899:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3946:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3957:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3942:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3942:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3965:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3971:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3961:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3961:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3935:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3935:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3935:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3991:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4125:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3999:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3999:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3991:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3869:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3884:4:9",
														"type": ""
													}
												],
												"src": "3718:419:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c806324d7806c1461006757806362d918551461009757806370480275146100b3578063715018a6146100cf5780638da5cb5b146100d9578063f2fde38b146100f7575b600080fd5b610081600480360381019061007c919061049b565b610113565b60405161008e91906104e3565b60405180910390f35b6100b160048036038101906100ac919061049b565b610169565b005b6100cd60048036038101906100c8919061049b565b6101cc565b005b6100d761022e565b005b6100e1610242565b6040516100ee919061050d565b60405180910390f35b610111600480360381019061010c919061049b565b61026b565b005b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6101716102ee565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6101d46102ee565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6102366102ee565b610240600061036c565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102736102ee565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d9906105ab565b60405180910390fd5b6102eb8161036c565b50565b6102f6610430565b73ffffffffffffffffffffffffffffffffffffffff16610314610242565b73ffffffffffffffffffffffffffffffffffffffff161461036a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036190610617565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104688261043d565b9050919050565b6104788161045d565b811461048357600080fd5b50565b6000813590506104958161046f565b92915050565b6000602082840312156104b1576104b0610438565b5b60006104bf84828501610486565b91505092915050565b60008115159050919050565b6104dd816104c8565b82525050565b60006020820190506104f860008301846104d4565b92915050565b6105078161045d565b82525050565b600060208201905061052260008301846104fe565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610595602683610528565b91506105a082610539565b604082019050919050565b600060208201905081810360008301526105c481610588565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610601602083610528565b915061060c826105cb565b602082019050919050565b60006020820190508181036000830152610630816105f4565b905091905056fea264697066735822122050bb71d38169e40fb52964302e3528c4afcf96a12234cc9caae8be5d484560e364736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x24D7806C EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x62D91855 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x70480275 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xF7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x49B JUMP JUMPDEST PUSH2 0x113 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x49B JUMP JUMPDEST PUSH2 0x169 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x49B JUMP JUMPDEST PUSH2 0x1CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD7 PUSH2 0x22E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH2 0x242 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEE SWAP2 SWAP1 PUSH2 0x50D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x49B JUMP JUMPDEST PUSH2 0x26B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x171 PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1D4 PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x236 PUSH2 0x2EE JUMP JUMPDEST PUSH2 0x240 PUSH1 0x0 PUSH2 0x36C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x273 PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D9 SWAP1 PUSH2 0x5AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2EB DUP2 PUSH2 0x36C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2F6 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x314 PUSH2 0x242 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x36A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x361 SWAP1 PUSH2 0x617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x468 DUP3 PUSH2 0x43D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x478 DUP2 PUSH2 0x45D JUMP JUMPDEST DUP2 EQ PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x495 DUP2 PUSH2 0x46F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4B1 JUMPI PUSH2 0x4B0 PUSH2 0x438 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4BF DUP5 DUP3 DUP6 ADD PUSH2 0x486 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4DD DUP2 PUSH2 0x4C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4F8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x507 DUP2 PUSH2 0x45D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x522 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x595 PUSH1 0x26 DUP4 PUSH2 0x528 JUMP JUMPDEST SWAP2 POP PUSH2 0x5A0 DUP3 PUSH2 0x539 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5C4 DUP2 PUSH2 0x588 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x601 PUSH1 0x20 DUP4 PUSH2 0x528 JUMP JUMPDEST SWAP2 POP PUSH2 0x60C DUP3 PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x630 DUP2 PUSH2 0x5F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP 0xBB PUSH18 0xD38169E40FB52964302E3528C4AFCF96A122 CALLVALUE 0xCC SWAP13 0xAA 0xE8 0xBE 0x5D BASEFEE GASLIMIT PUSH1 0xE3 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "118:480:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;499:97;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;402:91;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;306:90;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1831:101:0;;;:::i;:::-;;1201:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;499:97:6;552:4;575:7;:14;583:5;575:14;;;;;;;;;;;;;;;;;;;;;;;;;568:21;;499:97;;;:::o;402:91::-;1094:13:0;:11;:13::i;:::-;481:5:6::1;463:7;:15;471:6;463:15;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;402:91:::0;:::o;306:90::-;1094:13:0;:11;:13::i;:::-;385:4:6::1;367:7:::0;:15:::1;375:6;367:15;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;306:90:::0;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2081:198::-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;88:117:9:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:90::-;1210:7;1253:5;1246:13;1239:21;1228:32;;1176:90;;;:::o;1272:109::-;1353:21;1368:5;1353:21;:::i;:::-;1348:3;1341:34;1272:109;;:::o;1387:210::-;1474:4;1512:2;1501:9;1497:18;1489:26;;1525:65;1587:1;1576:9;1572:17;1563:6;1525:65;:::i;:::-;1387:210;;;;:::o;1603:118::-;1690:24;1708:5;1690:24;:::i;:::-;1685:3;1678:37;1603:118;;:::o;1727:222::-;1820:4;1858:2;1847:9;1843:18;1835:26;;1871:71;1939:1;1928:9;1924:17;1915:6;1871:71;:::i;:::-;1727:222;;;;:::o;1955:169::-;2039:11;2073:6;2068:3;2061:19;2113:4;2108:3;2104:14;2089:29;;1955:169;;;;:::o;2130:225::-;2270:34;2266:1;2258:6;2254:14;2247:58;2339:8;2334:2;2326:6;2322:15;2315:33;2130:225;:::o;2361:366::-;2503:3;2524:67;2588:2;2583:3;2524:67;:::i;:::-;2517:74;;2600:93;2689:3;2600:93;:::i;:::-;2718:2;2713:3;2709:12;2702:19;;2361:366;;;:::o;2733:419::-;2899:4;2937:2;2926:9;2922:18;2914:26;;2986:9;2980:4;2976:20;2972:1;2961:9;2957:17;2950:47;3014:131;3140:4;3014:131;:::i;:::-;3006:139;;2733:419;;;:::o;3158:182::-;3298:34;3294:1;3286:6;3282:14;3275:58;3158:182;:::o;3346:366::-;3488:3;3509:67;3573:2;3568:3;3509:67;:::i;:::-;3502:74;;3585:93;3674:3;3585:93;:::i;:::-;3703:2;3698:3;3694:12;3687:19;;3346:366;;;:::o;3718:419::-;3884:4;3922:2;3911:9;3907:18;3899:26;;3971:9;3965:4;3961:20;3957:1;3946:9;3942:17;3935:47;3999:131;4125:4;3999:131;:::i;:::-;3991:139;;3718:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "329000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addAdmin(address)": "27098",
								"delAdmin(address)": "27076",
								"isAdmin(address)": "2861",
								"owner()": "2588",
								"renounceOwnership()": "30442",
								"transferOwnership(address)": "30832"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 118,
									"end": 598,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 118,
									"end": 598,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 118,
									"end": 598,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 118,
									"end": 598,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 118,
									"end": 598,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 118,
									"end": 598,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 118,
									"end": 598,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 118,
									"end": 598,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 118,
									"end": 598,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 118,
									"end": 598,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 118,
									"end": 598,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 118,
									"end": 598,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 118,
									"end": 598,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 118,
									"end": 598,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 118,
									"end": 598,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 118,
									"end": 598,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 118,
									"end": 598,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 118,
									"end": 598,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 118,
									"end": 598,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 118,
									"end": 598,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 118,
									"end": 598,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 118,
									"end": 598,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 118,
									"end": 598,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 118,
									"end": 598,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 118,
									"end": 598,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122050bb71d38169e40fb52964302e3528c4afcf96a12234cc9caae8be5d484560e364736f6c63430008110033",
									".code": [
										{
											"begin": 118,
											"end": 598,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 118,
											"end": 598,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 118,
											"end": 598,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 118,
											"end": 598,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 118,
											"end": 598,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 118,
											"end": 598,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 118,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 118,
											"end": 598,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 118,
											"end": 598,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 118,
											"end": 598,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 118,
											"end": 598,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 118,
											"end": 598,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 118,
											"end": 598,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 118,
											"end": 598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 118,
											"end": 598,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 118,
											"end": 598,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 118,
											"end": 598,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 118,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 118,
											"end": 598,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 118,
											"end": 598,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 118,
											"end": 598,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 118,
											"end": 598,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 118,
											"end": 598,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 118,
											"end": 598,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 118,
											"end": 598,
											"name": "PUSH",
											"source": 6,
											"value": "24D7806C"
										},
										{
											"begin": 118,
											"end": 598,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 118,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 118,
											"end": 598,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 118,
											"end": 598,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 118,
											"end": 598,
											"name": "PUSH",
											"source": 6,
											"value": "62D91855"
										},
										{
											"begin": 118,
											"end": 598,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 118,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 118,
											"end": 598,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 118,
											"end": 598,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 118,
											"end": 598,
											"name": "PUSH",
											"source": 6,
											"value": "70480275"
										},
										{
											"begin": 118,
											"end": 598,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 118,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 118,
											"end": 598,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 118,
											"end": 598,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 118,
											"end": 598,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 118,
											"end": 598,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 118,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 118,
											"end": 598,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 118,
											"end": 598,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 118,
											"end": 598,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 118,
											"end": 598,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 118,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 118,
											"end": 598,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 118,
											"end": 598,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 118,
											"end": 598,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 118,
											"end": 598,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 118,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 118,
											"end": 598,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 118,
											"end": 598,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 118,
											"end": 598,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 118,
											"end": 598,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 118,
											"end": 598,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 118,
											"end": 598,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 499,
											"end": 596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 499,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 499,
											"end": 596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 499,
											"end": 596,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 499,
											"end": 596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 499,
											"end": 596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 499,
											"end": 596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 499,
											"end": 596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 596,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 499,
											"end": 596,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 499,
											"end": 596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 499,
											"end": 596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 596,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 402,
											"end": 493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 402,
											"end": 493,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 402,
											"end": 493,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 402,
											"end": 493,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 402,
											"end": 493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 402,
											"end": 493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 402,
											"end": 493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 402,
											"end": 493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 306,
											"end": 396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 306,
											"end": 396,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 306,
											"end": 396,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 306,
											"end": 396,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 306,
											"end": 396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 306,
											"end": 396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 306,
											"end": 396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 306,
											"end": 396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 499,
											"end": 596,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 499,
											"end": 596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 552,
											"end": 556,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 575,
											"end": 582,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 575,
											"end": 589,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 588,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 575,
											"end": 589,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 575,
											"end": 589,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 575,
											"end": 589,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 575,
											"end": 589,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 575,
											"end": 589,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 575,
											"end": 589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 575,
											"end": 589,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 575,
											"end": 589,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 568,
											"end": 589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 568,
											"end": 589,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 402,
											"end": 493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 481,
											"end": 486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 463,
											"end": 470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 471,
											"end": 477,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 306,
											"end": 396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 385,
											"end": 389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 367,
											"end": 374,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 375,
											"end": 381,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2161,
											"end": 2234,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1217,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1258,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1246,
											"end": 1259,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1239,
											"end": 1260,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1176,
											"end": 1266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 1368,
											"end": 1373,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 1353,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1348,
											"end": 1351,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1375,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1272,
											"end": 1381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1474,
											"end": 1478,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1514,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1515,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1585,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1572,
											"end": 1589,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1569,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 1525,
											"end": 1590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 1708,
											"end": 1713,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1690,
											"end": 1714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1685,
											"end": 1688,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1678,
											"end": 1715,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1603,
											"end": 1721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1824,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1860,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1843,
											"end": 1861,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1835,
											"end": 1861,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1835,
											"end": 1861,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 1939,
											"end": 1940,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1937,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1924,
											"end": 1941,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1915,
											"end": 1921,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 1871,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1727,
											"end": 1949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2039,
											"end": 2050,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2073,
											"end": 2079,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2068,
											"end": 2071,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2061,
											"end": 2080,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2113,
											"end": 2117,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2108,
											"end": 2111,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2104,
											"end": 2118,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2089,
											"end": 2118,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2089,
											"end": 2118,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1955,
											"end": 2124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2130,
											"end": 2355,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 2130,
											"end": 2355,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2270,
											"end": 2304,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 2266,
											"end": 2267,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2264,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2254,
											"end": 2268,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2247,
											"end": 2305,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2339,
											"end": 2347,
											"name": "PUSH",
											"source": 9,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2334,
											"end": 2336,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2326,
											"end": 2332,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2322,
											"end": 2337,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2315,
											"end": 2348,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2130,
											"end": 2355,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2130,
											"end": 2355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2361,
											"end": 2727,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 2361,
											"end": 2727,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2503,
											"end": 2506,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2524,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 2588,
											"end": 2590,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 2583,
											"end": 2586,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2524,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 2524,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2524,
											"end": 2591,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 2524,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2517,
											"end": 2591,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2517,
											"end": 2591,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2600,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 2689,
											"end": 2692,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2600,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 2600,
											"end": 2693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2600,
											"end": 2693,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 2600,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2718,
											"end": 2720,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2713,
											"end": 2716,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2709,
											"end": 2721,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2702,
											"end": 2721,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2702,
											"end": 2721,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2361,
											"end": 2727,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2361,
											"end": 2727,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2361,
											"end": 2727,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2361,
											"end": 2727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 3152,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 2733,
											"end": 3152,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2903,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2939,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2926,
											"end": 2935,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2940,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2914,
											"end": 2940,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2914,
											"end": 2940,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2986,
											"end": 2995,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2980,
											"end": 2984,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2976,
											"end": 2996,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2972,
											"end": 2973,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2970,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2957,
											"end": 2974,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2950,
											"end": 2997,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3014,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 3140,
											"end": 3144,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3014,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 3014,
											"end": 3145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3014,
											"end": 3145,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 3014,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3145,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3145,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 3152,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 3152,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 3152,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 3152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3158,
											"end": 3340,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 3158,
											"end": 3340,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3332,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 3294,
											"end": 3295,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3286,
											"end": 3292,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3282,
											"end": 3296,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3275,
											"end": 3333,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3158,
											"end": 3340,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3158,
											"end": 3340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3346,
											"end": 3712,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 3346,
											"end": 3712,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3488,
											"end": 3491,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3509,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 3573,
											"end": 3575,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3568,
											"end": 3571,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3509,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 3509,
											"end": 3576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3509,
											"end": 3576,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 3509,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3502,
											"end": 3576,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3502,
											"end": 3576,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3585,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 3674,
											"end": 3677,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3585,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 3585,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3585,
											"end": 3678,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 3585,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3703,
											"end": 3705,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3698,
											"end": 3701,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3694,
											"end": 3706,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3687,
											"end": 3706,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3687,
											"end": 3706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3346,
											"end": 3712,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3346,
											"end": 3712,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3346,
											"end": 3712,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3346,
											"end": 3712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3718,
											"end": 4137,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 3718,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3884,
											"end": 3888,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3922,
											"end": 3924,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3911,
											"end": 3920,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 3925,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3899,
											"end": 3925,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3899,
											"end": 3925,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3971,
											"end": 3980,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3965,
											"end": 3969,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3961,
											"end": 3981,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3957,
											"end": 3958,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3946,
											"end": 3955,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3942,
											"end": 3959,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3935,
											"end": 3982,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 4125,
											"end": 4129,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 3999,
											"end": 4130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4130,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 3999,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3991,
											"end": 4130,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3991,
											"end": 4130,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3718,
											"end": 4137,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3718,
											"end": 4137,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3718,
											"end": 4137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3718,
											"end": 4137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Auth.sol",
								"contracts/Stake.sol",
								"contracts/interfae/IConstant.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addAdmin(address)": "70480275",
							"delAdmin(address)": "62d91855",
							"isAdmin(address)": "24d7806c",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"delAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Auth.sol\":\"Admin\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/Auth.sol\":{\"keccak256\":\"0x11fb0d14797e98848ce8c68672bbd10797995cb67ab6bdfec6d23b2da01c9ad5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://1fd71bbdc0fdcec6c4e866faec2aa107b392970711c68c8573df1c97c15a377f\",\"dweb:/ipfs/QmeHLWEGWuF29RCSuBLu3xmJ8cHzk7SVbV3fpYtvRrVRkW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/Auth.sol:Admin",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 868,
								"contract": "contracts/Auth.sol:Admin",
								"label": "_admins",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Server": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								}
							],
							"name": "addAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_server",
									"type": "address"
								}
							],
							"name": "addServer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								}
							],
							"name": "delAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_server",
									"type": "address"
								}
							],
							"name": "delServer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "isAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_server",
									"type": "address"
								}
							],
							"name": "isServer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Auth.sol\":600:1097  contract Server is Admin {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_6)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"contracts/Auth.sol\":600:1097  contract Server is Admin {... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/Auth.sol\":600:1097  contract Server is Admin {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Auth.sol\":600:1097  contract Server is Admin {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70480275\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x70480275\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xfda08958\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x24d7806c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3a4159fa\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5cbd99d4\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x62d91855\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Auth.sol\":499:596  function isAdmin(address _addr) public view returns (bool) {... */\n    tag_3:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Auth.sol\":891:986  function delServer(address _server) public onlyOwner {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_20:\n      tag_21\n      jump\t// in\n    tag_19:\n      stop\n        /* \"contracts/Auth.sol\":791:885  function addServer(address _server) public onlyOwner {... */\n    tag_5:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_23:\n      tag_24\n      jump\t// in\n    tag_22:\n      stop\n        /* \"contracts/Auth.sol\":402:493  function delAdmin(address _admin) public onlyOwner {... */\n    tag_6:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_26:\n      tag_27\n      jump\t// in\n    tag_25:\n      stop\n        /* \"contracts/Auth.sol\":306:396  function addAdmin(address _admin) public onlyOwner {... */\n    tag_7:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_29:\n      tag_30\n      jump\t// in\n    tag_28:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_9:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_10:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n    tag_37:\n      stop\n        /* \"contracts/Auth.sol\":992:1095  function isServer(address _server) public view returns (bool) {... */\n    tag_11:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Auth.sol\":499:596  function isAdmin(address _addr) public view returns (bool) {... */\n    tag_16:\n        /* \"contracts/Auth.sol\":552:556  bool */\n      0x00\n        /* \"contracts/Auth.sol\":575:582  _admins */\n      0x01\n        /* \"contracts/Auth.sol\":575:589  _admins[_addr] */\n      0x00\n        /* \"contracts/Auth.sol\":583:588  _addr */\n      dup4\n        /* \"contracts/Auth.sol\":575:589  _admins[_addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Auth.sol\":568:589  return _admins[_addr] */\n      swap1\n      pop\n        /* \"contracts/Auth.sol\":499:596  function isAdmin(address _addr) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Auth.sol\":891:986  function delServer(address _server) public onlyOwner {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_46\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_47\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_46:\n        /* \"contracts/Auth.sol\":974:979  false */\n      0x00\n        /* \"contracts/Auth.sol\":954:962  _servers */\n      0x02\n        /* \"contracts/Auth.sol\":954:971  _servers[_server] */\n      0x00\n        /* \"contracts/Auth.sol\":963:970  _server */\n      dup4\n        /* \"contracts/Auth.sol\":954:971  _servers[_server] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Auth.sol\":954:979  _servers[_server] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Auth.sol\":891:986  function delServer(address _server) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Auth.sol\":791:885  function addServer(address _server) public onlyOwner {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_50\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_47\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_50:\n        /* \"contracts/Auth.sol\":874:878  true */\n      0x01\n        /* \"contracts/Auth.sol\":854:862  _servers */\n      0x02\n        /* \"contracts/Auth.sol\":854:871  _servers[_server] */\n      0x00\n        /* \"contracts/Auth.sol\":863:870  _server */\n      dup4\n        /* \"contracts/Auth.sol\":854:871  _servers[_server] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Auth.sol\":854:878  _servers[_server] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Auth.sol\":791:885  function addServer(address _server) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Auth.sol\":402:493  function delAdmin(address _admin) public onlyOwner {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_53\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_47\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_53:\n        /* \"contracts/Auth.sol\":481:486  false */\n      0x00\n        /* \"contracts/Auth.sol\":463:470  _admins */\n      0x01\n        /* \"contracts/Auth.sol\":463:478  _admins[_admin] */\n      0x00\n        /* \"contracts/Auth.sol\":471:477  _admin */\n      dup4\n        /* \"contracts/Auth.sol\":463:478  _admins[_admin] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Auth.sol\":463:486  _admins[_admin] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Auth.sol\":402:493  function delAdmin(address _admin) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Auth.sol\":306:396  function addAdmin(address _admin) public onlyOwner {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_47\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_56:\n        /* \"contracts/Auth.sol\":385:389  true */\n      0x01\n        /* \"contracts/Auth.sol\":367:374  _admins */\n      dup1\n        /* \"contracts/Auth.sol\":367:382  _admins[_admin] */\n      0x00\n        /* \"contracts/Auth.sol\":375:381  _admin */\n      dup4\n        /* \"contracts/Auth.sol\":367:382  _admins[_admin] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Auth.sol\":367:389  _admins[_admin] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Auth.sol\":306:396  function addAdmin(address _admin) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_59\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_47\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_61\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_62\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_47\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_70\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_62\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Auth.sol\":992:1095  function isServer(address _server) public view returns (bool) {... */\n    tag_42:\n        /* \"contracts/Auth.sol\":1048:1052  bool */\n      0x00\n        /* \"contracts/Auth.sol\":1071:1079  _servers */\n      0x02\n        /* \"contracts/Auth.sol\":1071:1088  _servers[_server] */\n      0x00\n        /* \"contracts/Auth.sol\":1080:1087  _server */\n      dup4\n        /* \"contracts/Auth.sol\":1071:1088  _servers[_server] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Auth.sol\":1064:1088  return _servers[_server] */\n      swap1\n      pop\n        /* \"contracts/Auth.sol\":992:1095  function isServer(address _server) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_34\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_82:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_84:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_85:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_102\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_84\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_86:\n        /* \"#utility.yul\":641:665   */\n      tag_104\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_85\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_105\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_105:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_87:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_107\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_86\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_15:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_109\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_110\n      tag_82\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":917:1036   */\n    tag_109:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_111\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_87\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1266   */\n    tag_88:\n        /* \"#utility.yul\":1210:1217   */\n      0x00\n        /* \"#utility.yul\":1253:1258   */\n      dup2\n        /* \"#utility.yul\":1246:1259   */\n      iszero\n        /* \"#utility.yul\":1239:1260   */\n      iszero\n        /* \"#utility.yul\":1228:1260   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1272:1381   */\n    tag_89:\n        /* \"#utility.yul\":1353:1374   */\n      tag_114\n        /* \"#utility.yul\":1368:1373   */\n      dup2\n        /* \"#utility.yul\":1353:1374   */\n      tag_88\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":1348:1351   */\n      dup3\n        /* \"#utility.yul\":1341:1375   */\n      mstore\n        /* \"#utility.yul\":1272:1381   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1597   */\n    tag_18:\n        /* \"#utility.yul\":1474:1478   */\n      0x00\n        /* \"#utility.yul\":1512:1514   */\n      0x20\n        /* \"#utility.yul\":1501:1510   */\n      dup3\n        /* \"#utility.yul\":1497:1515   */\n      add\n        /* \"#utility.yul\":1489:1515   */\n      swap1\n      pop\n        /* \"#utility.yul\":1525:1590   */\n      tag_116\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1576:1585   */\n      dup4\n        /* \"#utility.yul\":1572:1589   */\n      add\n        /* \"#utility.yul\":1563:1569   */\n      dup5\n        /* \"#utility.yul\":1525:1590   */\n      tag_89\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":1387:1597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1603:1721   */\n    tag_90:\n        /* \"#utility.yul\":1690:1714   */\n      tag_118\n        /* \"#utility.yul\":1708:1713   */\n      dup2\n        /* \"#utility.yul\":1690:1714   */\n      tag_85\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":1685:1688   */\n      dup3\n        /* \"#utility.yul\":1678:1715   */\n      mstore\n        /* \"#utility.yul\":1603:1721   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1727:1949   */\n    tag_36:\n        /* \"#utility.yul\":1820:1824   */\n      0x00\n        /* \"#utility.yul\":1858:1860   */\n      0x20\n        /* \"#utility.yul\":1847:1856   */\n      dup3\n        /* \"#utility.yul\":1843:1861   */\n      add\n        /* \"#utility.yul\":1835:1861   */\n      swap1\n      pop\n        /* \"#utility.yul\":1871:1942   */\n      tag_120\n        /* \"#utility.yul\":1939:1940   */\n      0x00\n        /* \"#utility.yul\":1928:1937   */\n      dup4\n        /* \"#utility.yul\":1924:1941   */\n      add\n        /* \"#utility.yul\":1915:1921   */\n      dup5\n        /* \"#utility.yul\":1871:1942   */\n      tag_90\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":1727:1949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1955:2124   */\n    tag_91:\n        /* \"#utility.yul\":2039:2050   */\n      0x00\n        /* \"#utility.yul\":2073:2079   */\n      dup3\n        /* \"#utility.yul\":2068:2071   */\n      dup3\n        /* \"#utility.yul\":2061:2080   */\n      mstore\n        /* \"#utility.yul\":2113:2117   */\n      0x20\n        /* \"#utility.yul\":2108:2111   */\n      dup3\n        /* \"#utility.yul\":2104:2118   */\n      add\n        /* \"#utility.yul\":2089:2118   */\n      swap1\n      pop\n        /* \"#utility.yul\":1955:2124   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2130:2355   */\n    tag_92:\n        /* \"#utility.yul\":2270:2304   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":2266:2267   */\n      0x00\n        /* \"#utility.yul\":2258:2264   */\n      dup3\n        /* \"#utility.yul\":2254:2268   */\n      add\n        /* \"#utility.yul\":2247:2305   */\n      mstore\n        /* \"#utility.yul\":2339:2347   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2334:2336   */\n      0x20\n        /* \"#utility.yul\":2326:2332   */\n      dup3\n        /* \"#utility.yul\":2322:2337   */\n      add\n        /* \"#utility.yul\":2315:2348   */\n      mstore\n        /* \"#utility.yul\":2130:2355   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2361:2727   */\n    tag_93:\n        /* \"#utility.yul\":2503:2506   */\n      0x00\n        /* \"#utility.yul\":2524:2591   */\n      tag_124\n        /* \"#utility.yul\":2588:2590   */\n      0x26\n        /* \"#utility.yul\":2583:2586   */\n      dup4\n        /* \"#utility.yul\":2524:2591   */\n      tag_91\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":2517:2591   */\n      swap2\n      pop\n        /* \"#utility.yul\":2600:2693   */\n      tag_125\n        /* \"#utility.yul\":2689:2692   */\n      dup3\n        /* \"#utility.yul\":2600:2693   */\n      tag_92\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":2718:2720   */\n      0x40\n        /* \"#utility.yul\":2713:2716   */\n      dup3\n        /* \"#utility.yul\":2709:2721   */\n      add\n        /* \"#utility.yul\":2702:2721   */\n      swap1\n      pop\n        /* \"#utility.yul\":2361:2727   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2733:3152   */\n    tag_69:\n        /* \"#utility.yul\":2899:2903   */\n      0x00\n        /* \"#utility.yul\":2937:2939   */\n      0x20\n        /* \"#utility.yul\":2926:2935   */\n      dup3\n        /* \"#utility.yul\":2922:2940   */\n      add\n        /* \"#utility.yul\":2914:2940   */\n      swap1\n      pop\n        /* \"#utility.yul\":2986:2995   */\n      dup2\n        /* \"#utility.yul\":2980:2984   */\n      dup2\n        /* \"#utility.yul\":2976:2996   */\n      sub\n        /* \"#utility.yul\":2972:2973   */\n      0x00\n        /* \"#utility.yul\":2961:2970   */\n      dup4\n        /* \"#utility.yul\":2957:2974   */\n      add\n        /* \"#utility.yul\":2950:2997   */\n      mstore\n        /* \"#utility.yul\":3014:3145   */\n      tag_127\n        /* \"#utility.yul\":3140:3144   */\n      dup2\n        /* \"#utility.yul\":3014:3145   */\n      tag_93\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":3006:3145   */\n      swap1\n      pop\n        /* \"#utility.yul\":2733:3152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3158:3340   */\n    tag_94:\n        /* \"#utility.yul\":3298:3332   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":3294:3295   */\n      0x00\n        /* \"#utility.yul\":3286:3292   */\n      dup3\n        /* \"#utility.yul\":3282:3296   */\n      add\n        /* \"#utility.yul\":3275:3333   */\n      mstore\n        /* \"#utility.yul\":3158:3340   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3346:3712   */\n    tag_95:\n        /* \"#utility.yul\":3488:3491   */\n      0x00\n        /* \"#utility.yul\":3509:3576   */\n      tag_130\n        /* \"#utility.yul\":3573:3575   */\n      0x20\n        /* \"#utility.yul\":3568:3571   */\n      dup4\n        /* \"#utility.yul\":3509:3576   */\n      tag_91\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":3502:3576   */\n      swap2\n      pop\n        /* \"#utility.yul\":3585:3678   */\n      tag_131\n        /* \"#utility.yul\":3674:3677   */\n      dup3\n        /* \"#utility.yul\":3585:3678   */\n      tag_94\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":3703:3705   */\n      0x20\n        /* \"#utility.yul\":3698:3701   */\n      dup3\n        /* \"#utility.yul\":3694:3706   */\n      add\n        /* \"#utility.yul\":3687:3706   */\n      swap1\n      pop\n        /* \"#utility.yul\":3346:3712   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3718:4137   */\n    tag_78:\n        /* \"#utility.yul\":3884:3888   */\n      0x00\n        /* \"#utility.yul\":3922:3924   */\n      0x20\n        /* \"#utility.yul\":3911:3920   */\n      dup3\n        /* \"#utility.yul\":3907:3925   */\n      add\n        /* \"#utility.yul\":3899:3925   */\n      swap1\n      pop\n        /* \"#utility.yul\":3971:3980   */\n      dup2\n        /* \"#utility.yul\":3965:3969   */\n      dup2\n        /* \"#utility.yul\":3961:3981   */\n      sub\n        /* \"#utility.yul\":3957:3958   */\n      0x00\n        /* \"#utility.yul\":3946:3955   */\n      dup4\n        /* \"#utility.yul\":3942:3959   */\n      add\n        /* \"#utility.yul\":3935:3982   */\n      mstore\n        /* \"#utility.yul\":3999:4130   */\n      tag_133\n        /* \"#utility.yul\":4125:4129   */\n      dup2\n        /* \"#utility.yul\":3999:4130   */\n      tag_95\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":3991:4130   */\n      swap1\n      pop\n        /* \"#utility.yul\":3718:4137   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122096c501e1f0d1f84f543c82b4450960f5284d7f046b15325ca8900a7accccb77864736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_849": {
									"entryPoint": 50,
									"id": 849,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 58,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6108228061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80637048027511610066578063704802751461011c578063715018a6146101385780638da5cb5b14610142578063f2fde38b14610160578063fda089581461017c57610093565b806324d7806c146100985780633a4159fa146100c85780635cbd99d4146100e457806362d9185514610100575b600080fd5b6100b260048036038101906100ad9190610650565b6101ac565b6040516100bf9190610698565b60405180910390f35b6100e260048036038101906100dd9190610650565b610202565b005b6100fe60048036038101906100f99190610650565b610265565b005b61011a60048036038101906101159190610650565b6102c8565b005b61013660048036038101906101319190610650565b61032b565b005b61014061038d565b005b61014a6103a1565b60405161015791906106c2565b60405180910390f35b61017a60048036038101906101759190610650565b6103ca565b005b61019660048036038101906101919190610650565b61044d565b6040516101a39190610698565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b61020a6104a3565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b61026d6104a3565b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6102d06104a3565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6103336104a3565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6103956104a3565b61039f6000610521565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6103d26104a3565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610441576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043890610760565b60405180910390fd5b61044a81610521565b50565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6104ab6105e5565b73ffffffffffffffffffffffffffffffffffffffff166104c96103a1565b73ffffffffffffffffffffffffffffffffffffffff161461051f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610516906107cc565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061061d826105f2565b9050919050565b61062d81610612565b811461063857600080fd5b50565b60008135905061064a81610624565b92915050565b600060208284031215610666576106656105ed565b5b60006106748482850161063b565b91505092915050565b60008115159050919050565b6106928161067d565b82525050565b60006020820190506106ad6000830184610689565b92915050565b6106bc81610612565b82525050565b60006020820190506106d760008301846106b3565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061074a6026836106dd565b9150610755826106ee565b604082019050919050565b600060208201905081810360008301526107798161073d565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006107b66020836106dd565b91506107c182610780565b602082019050919050565b600060208201905081810360008301526107e5816107a9565b905091905056fea264697066735822122096c501e1f0d1f84f543c82b4450960f5284d7f046b15325ca8900a7accccb77864736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x32 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x822 DUP1 PUSH2 0x10D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70480275 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x70480275 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0xFDA08958 EQ PUSH2 0x17C JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x24D7806C EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x3A4159FA EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x5CBD99D4 EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x62D91855 EQ PUSH2 0x100 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x650 JUMP JUMPDEST PUSH2 0x1AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x698 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x650 JUMP JUMPDEST PUSH2 0x202 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x650 JUMP JUMPDEST PUSH2 0x265 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x115 SWAP2 SWAP1 PUSH2 0x650 JUMP JUMPDEST PUSH2 0x2C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x650 JUMP JUMPDEST PUSH2 0x32B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x140 PUSH2 0x38D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14A PUSH2 0x3A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x157 SWAP2 SWAP1 PUSH2 0x6C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x650 JUMP JUMPDEST PUSH2 0x3CA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x650 JUMP JUMPDEST PUSH2 0x44D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x698 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20A PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x26D PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x2D0 PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x333 PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x395 PUSH2 0x4A3 JUMP JUMPDEST PUSH2 0x39F PUSH1 0x0 PUSH2 0x521 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x441 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x438 SWAP1 PUSH2 0x760 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x44A DUP2 PUSH2 0x521 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4AB PUSH2 0x5E5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4C9 PUSH2 0x3A1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x51F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x516 SWAP1 PUSH2 0x7CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x61D DUP3 PUSH2 0x5F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x62D DUP2 PUSH2 0x612 JUMP JUMPDEST DUP2 EQ PUSH2 0x638 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x64A DUP2 PUSH2 0x624 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x666 JUMPI PUSH2 0x665 PUSH2 0x5ED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x674 DUP5 DUP3 DUP6 ADD PUSH2 0x63B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x692 DUP2 PUSH2 0x67D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6AD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x689 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6BC DUP2 PUSH2 0x612 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6D7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74A PUSH1 0x26 DUP4 PUSH2 0x6DD JUMP JUMPDEST SWAP2 POP PUSH2 0x755 DUP3 PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x779 DUP2 PUSH2 0x73D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B6 PUSH1 0x20 DUP4 PUSH2 0x6DD JUMP JUMPDEST SWAP2 POP PUSH2 0x7C1 DUP3 PUSH2 0x780 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7E5 DUP2 PUSH2 0x7A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 0xC5 ADD 0xE1 CREATE 0xD1 0xF8 0x4F SLOAD EXTCODECOPY DUP3 0xB4 GASLIMIT MULMOD PUSH1 0xF5 0x28 0x4D PUSH32 0x46B15325CA8900A7ACCCCB77864736F6C634300081100330000000000000000 ",
							"sourceMap": "600:497:6:-:0;;;;;;;;;;;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;600:497:6;;640:96:5;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;600:497:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_54": {
									"entryPoint": 1187,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_849": {
									"entryPoint": 1509,
									"id": 849,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 1313,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addAdmin_894": {
									"entryPoint": 811,
									"id": 894,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addServer_953": {
									"entryPoint": 613,
									"id": 953,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@delAdmin_908": {
									"entryPoint": 712,
									"id": 908,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@delServer_967": {
									"entryPoint": 514,
									"id": 967,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isAdmin_920": {
									"entryPoint": 428,
									"id": 920,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isServer_979": {
									"entryPoint": 1101,
									"id": 979,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": 929,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 909,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 970,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1673,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1853,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1888,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1996,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1554,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1517,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 1774,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 1920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4140:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:9",
														"type": ""
													}
												],
												"src": "466:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:9"
															},
															"nodeType": "YulIf",
															"src": "621:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:9",
														"type": ""
													}
												],
												"src": "568:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:9",
														"type": ""
													}
												],
												"src": "696:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:9"
															},
															"nodeType": "YulIf",
															"src": "917:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:9",
														"type": ""
													}
												],
												"src": "841:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1218:48:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1228:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1253:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1246:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1246:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1228:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1200:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1210:7:9",
														"type": ""
													}
												],
												"src": "1176:90:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1331:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1348:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1368:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1353:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1353:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1341:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1341:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1341:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1319:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1326:3:9",
														"type": ""
													}
												],
												"src": "1272:109:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1479:118:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1489:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1501:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1512:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1497:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1497:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1489:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1563:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1576:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1587:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1572:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1572:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1525:37:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1525:65:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1525:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1451:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1463:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1474:4:9",
														"type": ""
													}
												],
												"src": "1387:210:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1668:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1685:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1708:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1690:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1690:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1678:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1678:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1678:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1656:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1663:3:9",
														"type": ""
													}
												],
												"src": "1603:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1825:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1835:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1847:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1858:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1843:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1843:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1835:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1915:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1928:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1939:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1924:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1924:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1871:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1871:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1871:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1797:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1809:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1820:4:9",
														"type": ""
													}
												],
												"src": "1727:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2051:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2068:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2073:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2061:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2061:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2061:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2089:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2108:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2113:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2104:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2089:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2023:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2028:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2039:11:9",
														"type": ""
													}
												],
												"src": "1955:169:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2236:119:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2258:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2266:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2254:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2254:14:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2270:34:9",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2247:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2247:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2247:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2326:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2334:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2322:15:9"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2339:8:9",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2315:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2315:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2315:33:9"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2228:6:9",
														"type": ""
													}
												],
												"src": "2130:225:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2507:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2517:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2583:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2588:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2524:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2524:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2517:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2689:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "2600:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2600:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2600:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2702:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2713:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2718:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2709:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2709:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2702:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2495:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2503:3:9",
														"type": ""
													}
												],
												"src": "2361:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2904:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2914:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2926:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2937:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2922:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2922:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2914:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2961:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2972:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2957:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2957:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2980:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2986:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2976:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2976:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2950:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2950:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2950:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3006:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3140:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3014:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3014:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3006:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2884:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2899:4:9",
														"type": ""
													}
												],
												"src": "2733:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3264:76:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3286:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3294:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3282:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3282:14:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3298:34:9",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3275:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3275:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3275:58:9"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3256:6:9",
														"type": ""
													}
												],
												"src": "3158:182:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3492:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3502:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3568:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3573:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3509:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3509:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3502:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3674:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "3585:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3585:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3585:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3687:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3698:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3703:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3694:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3694:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3687:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3480:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3488:3:9",
														"type": ""
													}
												],
												"src": "3346:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3889:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3899:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3911:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3922:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3907:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3907:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3899:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3946:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3957:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3942:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3942:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3965:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3971:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3961:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3961:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3935:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3935:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3935:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3991:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4125:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3999:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3999:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3991:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3869:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3884:4:9",
														"type": ""
													}
												],
												"src": "3718:419:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100935760003560e01c80637048027511610066578063704802751461011c578063715018a6146101385780638da5cb5b14610142578063f2fde38b14610160578063fda089581461017c57610093565b806324d7806c146100985780633a4159fa146100c85780635cbd99d4146100e457806362d9185514610100575b600080fd5b6100b260048036038101906100ad9190610650565b6101ac565b6040516100bf9190610698565b60405180910390f35b6100e260048036038101906100dd9190610650565b610202565b005b6100fe60048036038101906100f99190610650565b610265565b005b61011a60048036038101906101159190610650565b6102c8565b005b61013660048036038101906101319190610650565b61032b565b005b61014061038d565b005b61014a6103a1565b60405161015791906106c2565b60405180910390f35b61017a60048036038101906101759190610650565b6103ca565b005b61019660048036038101906101919190610650565b61044d565b6040516101a39190610698565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b61020a6104a3565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b61026d6104a3565b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6102d06104a3565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6103336104a3565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6103956104a3565b61039f6000610521565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6103d26104a3565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610441576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043890610760565b60405180910390fd5b61044a81610521565b50565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6104ab6105e5565b73ffffffffffffffffffffffffffffffffffffffff166104c96103a1565b73ffffffffffffffffffffffffffffffffffffffff161461051f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610516906107cc565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061061d826105f2565b9050919050565b61062d81610612565b811461063857600080fd5b50565b60008135905061064a81610624565b92915050565b600060208284031215610666576106656105ed565b5b60006106748482850161063b565b91505092915050565b60008115159050919050565b6106928161067d565b82525050565b60006020820190506106ad6000830184610689565b92915050565b6106bc81610612565b82525050565b60006020820190506106d760008301846106b3565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061074a6026836106dd565b9150610755826106ee565b604082019050919050565b600060208201905081810360008301526107798161073d565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006107b66020836106dd565b91506107c182610780565b602082019050919050565b600060208201905081810360008301526107e5816107a9565b905091905056fea264697066735822122096c501e1f0d1f84f543c82b4450960f5284d7f046b15325ca8900a7accccb77864736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70480275 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x70480275 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0xFDA08958 EQ PUSH2 0x17C JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x24D7806C EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x3A4159FA EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x5CBD99D4 EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x62D91855 EQ PUSH2 0x100 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x650 JUMP JUMPDEST PUSH2 0x1AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x698 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x650 JUMP JUMPDEST PUSH2 0x202 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x650 JUMP JUMPDEST PUSH2 0x265 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x115 SWAP2 SWAP1 PUSH2 0x650 JUMP JUMPDEST PUSH2 0x2C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x650 JUMP JUMPDEST PUSH2 0x32B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x140 PUSH2 0x38D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14A PUSH2 0x3A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x157 SWAP2 SWAP1 PUSH2 0x6C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x650 JUMP JUMPDEST PUSH2 0x3CA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x650 JUMP JUMPDEST PUSH2 0x44D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x698 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20A PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x26D PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x2D0 PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x333 PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x395 PUSH2 0x4A3 JUMP JUMPDEST PUSH2 0x39F PUSH1 0x0 PUSH2 0x521 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x441 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x438 SWAP1 PUSH2 0x760 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x44A DUP2 PUSH2 0x521 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4AB PUSH2 0x5E5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4C9 PUSH2 0x3A1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x51F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x516 SWAP1 PUSH2 0x7CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x61D DUP3 PUSH2 0x5F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x62D DUP2 PUSH2 0x612 JUMP JUMPDEST DUP2 EQ PUSH2 0x638 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x64A DUP2 PUSH2 0x624 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x666 JUMPI PUSH2 0x665 PUSH2 0x5ED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x674 DUP5 DUP3 DUP6 ADD PUSH2 0x63B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x692 DUP2 PUSH2 0x67D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6AD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x689 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6BC DUP2 PUSH2 0x612 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6D7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74A PUSH1 0x26 DUP4 PUSH2 0x6DD JUMP JUMPDEST SWAP2 POP PUSH2 0x755 DUP3 PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x779 DUP2 PUSH2 0x73D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B6 PUSH1 0x20 DUP4 PUSH2 0x6DD JUMP JUMPDEST SWAP2 POP PUSH2 0x7C1 DUP3 PUSH2 0x780 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7E5 DUP2 PUSH2 0x7A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 0xC5 ADD 0xE1 CREATE 0xD1 0xF8 0x4F SLOAD EXTCODECOPY DUP3 0xB4 GASLIMIT MULMOD PUSH1 0xF5 0x28 0x4D PUSH32 0x46B15325CA8900A7ACCCCB77864736F6C634300081100330000000000000000 ",
							"sourceMap": "600:497:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;499:97;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;891:95;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;791:94;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;402:91;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;306:90;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1831:101:0;;;:::i;:::-;;1201:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;992:103:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;499:97;552:4;575:7;:14;583:5;575:14;;;;;;;;;;;;;;;;;;;;;;;;;568:21;;499:97;;;:::o;891:95::-;1094:13:0;:11;:13::i;:::-;974:5:6::1;954:8;:17;963:7;954:17;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;891:95:::0;:::o;791:94::-;1094:13:0;:11;:13::i;:::-;874:4:6::1;854:8;:17;863:7;854:17;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;791:94:::0;:::o;402:91::-;1094:13:0;:11;:13::i;:::-;481:5:6::1;463:7;:15;471:6;463:15;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;402:91:::0;:::o;306:90::-;1094:13:0;:11;:13::i;:::-;385:4:6::1;367:7:::0;:15:::1;375:6;367:15;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;306:90:::0;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2081:198::-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;992:103:6:-;1048:4;1071:8;:17;1080:7;1071:17;;;;;;;;;;;;;;;;;;;;;;;;;1064:24;;992:103;;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;88:117:9:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:90::-;1210:7;1253:5;1246:13;1239:21;1228:32;;1176:90;;;:::o;1272:109::-;1353:21;1368:5;1353:21;:::i;:::-;1348:3;1341:34;1272:109;;:::o;1387:210::-;1474:4;1512:2;1501:9;1497:18;1489:26;;1525:65;1587:1;1576:9;1572:17;1563:6;1525:65;:::i;:::-;1387:210;;;;:::o;1603:118::-;1690:24;1708:5;1690:24;:::i;:::-;1685:3;1678:37;1603:118;;:::o;1727:222::-;1820:4;1858:2;1847:9;1843:18;1835:26;;1871:71;1939:1;1928:9;1924:17;1915:6;1871:71;:::i;:::-;1727:222;;;;:::o;1955:169::-;2039:11;2073:6;2068:3;2061:19;2113:4;2108:3;2104:14;2089:29;;1955:169;;;;:::o;2130:225::-;2270:34;2266:1;2258:6;2254:14;2247:58;2339:8;2334:2;2326:6;2322:15;2315:33;2130:225;:::o;2361:366::-;2503:3;2524:67;2588:2;2583:3;2524:67;:::i;:::-;2517:74;;2600:93;2689:3;2600:93;:::i;:::-;2718:2;2713:3;2709:12;2702:19;;2361:366;;;:::o;2733:419::-;2899:4;2937:2;2926:9;2922:18;2914:26;;2986:9;2980:4;2976:20;2972:1;2961:9;2957:17;2950:47;3014:131;3140:4;3014:131;:::i;:::-;3006:139;;2733:419;;;:::o;3158:182::-;3298:34;3294:1;3286:6;3282:14;3275:58;3158:182;:::o;3346:366::-;3488:3;3509:67;3573:2;3568:3;3509:67;:::i;:::-;3502:74;;3585:93;3674:3;3585:93;:::i;:::-;3703:2;3698:3;3694:12;3687:19;;3346:366;;;:::o;3718:419::-;3884:4;3922:2;3911:9;3907:18;3899:26;;3971:9;3965:4;3961:20;3957:1;3946:9;3942:17;3935:47;3999:131;4125:4;3999:131;:::i;:::-;3991:139;;3718:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "416400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addAdmin(address)": "27076",
								"addServer(address)": "27121",
								"delAdmin(address)": "27143",
								"delServer(address)": "27099",
								"isAdmin(address)": "2884",
								"isServer(address)": "2971",
								"owner()": "2566",
								"renounceOwnership()": "30420",
								"transferOwnership(address)": "30810"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 600,
									"end": 1097,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 600,
									"end": 1097,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 600,
									"end": 1097,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 600,
									"end": 1097,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 600,
									"end": 1097,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 600,
									"end": 1097,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 600,
									"end": 1097,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 600,
									"end": 1097,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 600,
									"end": 1097,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 600,
									"end": 1097,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 600,
									"end": 1097,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 600,
									"end": 1097,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 600,
									"end": 1097,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 600,
									"end": 1097,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 600,
									"end": 1097,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 600,
									"end": 1097,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 600,
									"end": 1097,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 600,
									"end": 1097,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 600,
									"end": 1097,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 600,
									"end": 1097,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 600,
									"end": 1097,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 600,
									"end": 1097,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 600,
									"end": 1097,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 600,
									"end": 1097,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 600,
									"end": 1097,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122096c501e1f0d1f84f543c82b4450960f5284d7f046b15325ca8900a7accccb77864736f6c63430008110033",
									".code": [
										{
											"begin": 600,
											"end": 1097,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "PUSH",
											"source": 6,
											"value": "70480275"
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "PUSH",
											"source": 6,
											"value": "70480275"
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "PUSH",
											"source": 6,
											"value": "FDA08958"
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "PUSH",
											"source": 6,
											"value": "24D7806C"
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "PUSH",
											"source": 6,
											"value": "3A4159FA"
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "PUSH",
											"source": 6,
											"value": "5CBD99D4"
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "PUSH",
											"source": 6,
											"value": "62D91855"
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1097,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 499,
											"end": 596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 499,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 499,
											"end": 596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 499,
											"end": 596,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 499,
											"end": 596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 499,
											"end": 596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 499,
											"end": 596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 499,
											"end": 596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 596,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 499,
											"end": 596,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 499,
											"end": 596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 499,
											"end": 596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 596,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 891,
											"end": 986,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 891,
											"end": 986,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 891,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 891,
											"end": 986,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 891,
											"end": 986,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 891,
											"end": 986,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 891,
											"end": 986,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 891,
											"end": 986,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 891,
											"end": 986,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 891,
											"end": 986,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 891,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 891,
											"end": 986,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 891,
											"end": 986,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 891,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 891,
											"end": 986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 891,
											"end": 986,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 891,
											"end": 986,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 891,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 891,
											"end": 986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 891,
											"end": 986,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 891,
											"end": 986,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 891,
											"end": 986,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 791,
											"end": 885,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 791,
											"end": 885,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 791,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 791,
											"end": 885,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 791,
											"end": 885,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 791,
											"end": 885,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 791,
											"end": 885,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 791,
											"end": 885,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 791,
											"end": 885,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 791,
											"end": 885,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 791,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 791,
											"end": 885,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 791,
											"end": 885,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 791,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 791,
											"end": 885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 791,
											"end": 885,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 791,
											"end": 885,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 791,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 791,
											"end": 885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 791,
											"end": 885,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 791,
											"end": 885,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 791,
											"end": 885,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 402,
											"end": 493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 402,
											"end": 493,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 402,
											"end": 493,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 402,
											"end": 493,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 402,
											"end": 493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 402,
											"end": 493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 402,
											"end": 493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 402,
											"end": 493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 306,
											"end": 396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 306,
											"end": 396,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 306,
											"end": 396,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 306,
											"end": 396,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 306,
											"end": 396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 306,
											"end": 396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 306,
											"end": 396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 306,
											"end": 396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1095,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 992,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 992,
											"end": 1095,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 992,
											"end": 1095,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1095,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1095,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1095,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1095,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1095,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 992,
											"end": 1095,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1095,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 992,
											"end": 1095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1095,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 992,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 992,
											"end": 1095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1095,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 992,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1095,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 992,
											"end": 1095,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 992,
											"end": 1095,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1095,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 992,
											"end": 1095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1095,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 992,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1095,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 992,
											"end": 1095,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1095,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1095,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1095,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1095,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1095,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 499,
											"end": 596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 552,
											"end": 556,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 575,
											"end": 582,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 575,
											"end": 589,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 588,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 575,
											"end": 589,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 575,
											"end": 589,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 575,
											"end": 589,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 575,
											"end": 589,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 575,
											"end": 589,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 575,
											"end": 589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 575,
											"end": 589,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 575,
											"end": 589,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 568,
											"end": 589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 568,
											"end": 589,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 891,
											"end": 986,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 891,
											"end": 986,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 974,
											"end": 979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 954,
											"end": 962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 954,
											"end": 971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 963,
											"end": 970,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 954,
											"end": 971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 954,
											"end": 971,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 954,
											"end": 971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 954,
											"end": 971,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 954,
											"end": 971,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 954,
											"end": 971,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 954,
											"end": 971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 954,
											"end": 971,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 954,
											"end": 971,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 954,
											"end": 971,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 954,
											"end": 971,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 954,
											"end": 971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 954,
											"end": 971,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 954,
											"end": 971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 954,
											"end": 971,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 954,
											"end": 971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 954,
											"end": 979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 954,
											"end": 979,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 954,
											"end": 979,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 954,
											"end": 979,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 954,
											"end": 979,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 954,
											"end": 979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 954,
											"end": 979,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 954,
											"end": 979,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 954,
											"end": 979,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 954,
											"end": 979,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 954,
											"end": 979,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 954,
											"end": 979,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 954,
											"end": 979,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 954,
											"end": 979,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 954,
											"end": 979,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 954,
											"end": 979,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 954,
											"end": 979,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 954,
											"end": 979,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 891,
											"end": 986,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 891,
											"end": 986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 791,
											"end": 885,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 791,
											"end": 885,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 874,
											"end": 878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 854,
											"end": 862,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 854,
											"end": 871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 863,
											"end": 870,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 854,
											"end": 871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 854,
											"end": 871,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 854,
											"end": 871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 854,
											"end": 871,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 854,
											"end": 871,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 854,
											"end": 871,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 854,
											"end": 871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 854,
											"end": 871,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 854,
											"end": 871,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 854,
											"end": 871,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 854,
											"end": 871,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 854,
											"end": 871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 854,
											"end": 871,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 854,
											"end": 871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 854,
											"end": 871,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 854,
											"end": 871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 854,
											"end": 878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 854,
											"end": 878,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 854,
											"end": 878,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 854,
											"end": 878,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 854,
											"end": 878,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 854,
											"end": 878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 854,
											"end": 878,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 854,
											"end": 878,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 854,
											"end": 878,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 854,
											"end": 878,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 854,
											"end": 878,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 854,
											"end": 878,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 854,
											"end": 878,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 854,
											"end": 878,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 854,
											"end": 878,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 854,
											"end": 878,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 854,
											"end": 878,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 854,
											"end": 878,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 791,
											"end": 885,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 791,
											"end": 885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 402,
											"end": 493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 481,
											"end": 486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 463,
											"end": 470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 471,
											"end": 477,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 306,
											"end": 396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 385,
											"end": 389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 367,
											"end": 374,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 375,
											"end": 381,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2161,
											"end": 2234,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1095,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 992,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1052,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1071,
											"end": 1079,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1071,
											"end": 1088,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1080,
											"end": 1087,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1088,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1071,
											"end": 1088,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1088,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1071,
											"end": 1088,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1088,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1088,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1088,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1071,
											"end": 1088,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1088,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1088,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1088,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1071,
											"end": 1088,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1088,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1071,
											"end": 1088,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1088,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1071,
											"end": 1088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1088,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1088,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1071,
											"end": 1088,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1088,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1088,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1071,
											"end": 1088,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1064,
											"end": 1088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1064,
											"end": 1088,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1095,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1095,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1095,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1217,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1258,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1246,
											"end": 1259,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1239,
											"end": 1260,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1176,
											"end": 1266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 1368,
											"end": 1373,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 1353,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1348,
											"end": 1351,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1375,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1272,
											"end": 1381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1474,
											"end": 1478,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1514,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1515,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1585,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1572,
											"end": 1589,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1569,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 1525,
											"end": 1590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 1708,
											"end": 1713,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 1690,
											"end": 1714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1685,
											"end": 1688,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1678,
											"end": 1715,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1603,
											"end": 1721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1824,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1860,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1843,
											"end": 1861,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1835,
											"end": 1861,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1835,
											"end": 1861,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 1939,
											"end": 1940,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1937,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1924,
											"end": 1941,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1915,
											"end": 1921,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 1871,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1727,
											"end": 1949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2039,
											"end": 2050,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2073,
											"end": 2079,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2068,
											"end": 2071,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2061,
											"end": 2080,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2113,
											"end": 2117,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2108,
											"end": 2111,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2104,
											"end": 2118,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2089,
											"end": 2118,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2089,
											"end": 2118,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1955,
											"end": 2124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2130,
											"end": 2355,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 2130,
											"end": 2355,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2270,
											"end": 2304,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 2266,
											"end": 2267,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2264,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2254,
											"end": 2268,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2247,
											"end": 2305,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2339,
											"end": 2347,
											"name": "PUSH",
											"source": 9,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2334,
											"end": 2336,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2326,
											"end": 2332,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2322,
											"end": 2337,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2315,
											"end": 2348,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2130,
											"end": 2355,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2130,
											"end": 2355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2361,
											"end": 2727,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 2361,
											"end": 2727,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2503,
											"end": 2506,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2524,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 2588,
											"end": 2590,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 2583,
											"end": 2586,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2524,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 2524,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2524,
											"end": 2591,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 2524,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2517,
											"end": 2591,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2517,
											"end": 2591,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2600,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 2689,
											"end": 2692,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2600,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 2600,
											"end": 2693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2600,
											"end": 2693,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 2600,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2718,
											"end": 2720,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2713,
											"end": 2716,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2709,
											"end": 2721,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2702,
											"end": 2721,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2702,
											"end": 2721,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2361,
											"end": 2727,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2361,
											"end": 2727,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2361,
											"end": 2727,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2361,
											"end": 2727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 3152,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 2733,
											"end": 3152,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2903,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2939,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2926,
											"end": 2935,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2922,
											"end": 2940,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2914,
											"end": 2940,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2914,
											"end": 2940,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2986,
											"end": 2995,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2980,
											"end": 2984,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2976,
											"end": 2996,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2972,
											"end": 2973,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2970,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2957,
											"end": 2974,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2950,
											"end": 2997,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3014,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 3140,
											"end": 3144,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3014,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 3014,
											"end": 3145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3014,
											"end": 3145,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 3014,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3145,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3145,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 3152,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 3152,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 3152,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 3152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3158,
											"end": 3340,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 3158,
											"end": 3340,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3332,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 3294,
											"end": 3295,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3286,
											"end": 3292,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3282,
											"end": 3296,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3275,
											"end": 3333,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3158,
											"end": 3340,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3158,
											"end": 3340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3346,
											"end": 3712,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 3346,
											"end": 3712,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3488,
											"end": 3491,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3509,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 3573,
											"end": 3575,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3568,
											"end": 3571,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3509,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 3509,
											"end": 3576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3509,
											"end": 3576,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 3509,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3502,
											"end": 3576,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3502,
											"end": 3576,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3585,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 3674,
											"end": 3677,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3585,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 3585,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3585,
											"end": 3678,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 3585,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3703,
											"end": 3705,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3698,
											"end": 3701,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3694,
											"end": 3706,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3687,
											"end": 3706,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3687,
											"end": 3706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3346,
											"end": 3712,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3346,
											"end": 3712,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3346,
											"end": 3712,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3346,
											"end": 3712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3718,
											"end": 4137,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 3718,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3884,
											"end": 3888,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3922,
											"end": 3924,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3911,
											"end": 3920,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 3925,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3899,
											"end": 3925,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3899,
											"end": 3925,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3971,
											"end": 3980,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3965,
											"end": 3969,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3961,
											"end": 3981,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3957,
											"end": 3958,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3946,
											"end": 3955,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3942,
											"end": 3959,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3935,
											"end": 3982,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 4125,
											"end": 4129,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 3999,
											"end": 4130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4130,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 3999,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3991,
											"end": 4130,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3991,
											"end": 4130,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3718,
											"end": 4137,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3718,
											"end": 4137,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3718,
											"end": 4137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3718,
											"end": 4137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Auth.sol",
								"contracts/Stake.sol",
								"contracts/interfae/IConstant.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addAdmin(address)": "70480275",
							"addServer(address)": "5cbd99d4",
							"delAdmin(address)": "62d91855",
							"delServer(address)": "3a4159fa",
							"isAdmin(address)": "24d7806c",
							"isServer(address)": "fda08958",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_server\",\"type\":\"address\"}],\"name\":\"addServer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"delAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_server\",\"type\":\"address\"}],\"name\":\"delServer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_server\",\"type\":\"address\"}],\"name\":\"isServer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Auth.sol\":\"Server\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/Auth.sol\":{\"keccak256\":\"0x11fb0d14797e98848ce8c68672bbd10797995cb67ab6bdfec6d23b2da01c9ad5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://1fd71bbdc0fdcec6c4e866faec2aa107b392970711c68c8573df1c97c15a377f\",\"dweb:/ipfs/QmeHLWEGWuF29RCSuBLu3xmJ8cHzk7SVbV3fpYtvRrVRkW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/Auth.sol:Server",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 868,
								"contract": "contracts/Auth.sol:Server",
								"label": "_admins",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 927,
								"contract": "contracts/Auth.sol:Server",
								"label": "_servers",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Stake.sol": {
				"Stake": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "cons",
									"type": "address"
								}
							],
							"name": "InitTokenEvent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "StakeEvent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "UnStakeEvent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "when",
									"type": "uint256"
								}
							],
							"name": "WithdrawalEvent",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "msgSender",
									"type": "address"
								}
							],
							"name": "_balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_increaseAllowance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "consAddress",
									"type": "address"
								}
							],
							"name": "_initToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "acc",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "_stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "acc",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "_unStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "acc",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "_withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								}
							],
							"name": "addAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								}
							],
							"name": "delAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getValue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "isAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Stake.sol\":245:2183  contract Stake is Admin {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Stake.sol\":354:396  0x816AC81F0B32453153721a4ED8D223D6D560643b */\n  0x816ac81f0b32453153721a4ed8d223d6d560643b\n    /* \"contracts/Stake.sol\":308:398  IERC20 private token =... */\n  0x02\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Stake.sol\":456:498  0x0582955206bFAA4ee8AbbeE39d2F6a7F4Dc6C365 */\n  0x0582955206bfaa4ee8abbee39d2f6a7f4dc6c365\n    /* \"contracts/Stake.sol\":405:500  IConstant private cons =... */\n  0x03\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Stake.sol\":245:2183  contract Stake is Admin {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_6)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"contracts/Stake.sol\":245:2183  contract Stake is Admin {... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/Stake.sol\":245:2183  contract Stake is Admin {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Stake.sol\":245:2183  contract Stake is Admin {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xb790a77b\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xb790a77b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc8f72c84\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xcca3e832\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xaa0d97b3\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x24d7806c\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x24d7806c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x62d91855\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x6d101d50\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70480275\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x03974908\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x04dd06f5\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x20965255\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Stake.sol\":1224:1412  function _unStake(address acc, uint256 amount) external onlyAdmin {... */\n    tag_3:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      stop\n        /* \"contracts/Stake.sol\":747:991  function _initToken(... */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"contracts/Stake.sol\":2079:2177  function getValue()public view returns(uint256){... */\n    tag_5:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Auth.sol\":499:596  function isAdmin(address _addr) public view returns (bool) {... */\n    tag_6:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Auth.sol\":402:493  function delAdmin(address _admin) public onlyOwner {... */\n    tag_7:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      stop\n        /* \"contracts/Stake.sol\":1777:1895  function _approve() external onlyAdmin {... */\n    tag_8:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      stop\n        /* \"contracts/Auth.sol\":306:396  function addAdmin(address _admin) public onlyOwner {... */\n    tag_9:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_11:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stake.sol\":1011:1198  function _stake(address acc, uint256 _amount) external onlyAdmin {... */\n    tag_12:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/Stake.sol\":1438:1644  function _withdraw(address acc, uint256 _amount) external onlyAdmin {... */\n    tag_13:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"contracts/Stake.sol\":1901:2073  function _increaseAllowance() external onlyAdmin {... */\n    tag_14:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      stop\n        /* \"contracts/Stake.sol\":1650:1771  function _balanceOf(address msgSender) external view returns (uint256) {... */\n    tag_15:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_16:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      stop\n        /* \"contracts/Stake.sol\":1224:1412  function _unStake(address acc, uint256 amount) external onlyAdmin {... */\n    tag_23:\n        /* \"contracts/Auth.sol\":236:243  _admins */\n      0x01\n        /* \"contracts/Auth.sol\":236:255  _admins[msg.sender] */\n      0x00\n        /* \"contracts/Auth.sol\":244:254  msg.sender */\n      caller\n        /* \"contracts/Auth.sol\":236:255  _admins[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Auth.sol\":228:282  require(_admins[msg.sender], \"Only admin can call it\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_68:\n        /* \"contracts/Stake.sol\":1300:1350  token.safeTransferFrom(address(this), acc, amount) */\n      tag_72\n        /* \"contracts/Stake.sol\":1331:1335  this */\n      address\n        /* \"contracts/Stake.sol\":1338:1341  acc */\n      dup4\n        /* \"contracts/Stake.sol\":1343:1349  amount */\n      dup4\n        /* \"contracts/Stake.sol\":1300:1305  token */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Stake.sol\":1300:1322  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_73\n      swap1\n        /* \"contracts/Stake.sol\":1300:1350  token.safeTransferFrom(address(this), acc, amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_72:\n        /* \"contracts/Stake.sol\":1365:1405  UnStakeEvent(address(this), acc, amount) */\n      0xa02aba7174f1597e7e78b2ca72d80b37118bfe8012ad5469728b1df72bbf2ac1\n        /* \"contracts/Stake.sol\":1386:1390  this */\n      address\n        /* \"contracts/Stake.sol\":1393:1396  acc */\n      dup4\n        /* \"contracts/Stake.sol\":1398:1404  amount */\n      dup4\n        /* \"contracts/Stake.sol\":1365:1405  UnStakeEvent(address(this), acc, amount) */\n      mload(0x40)\n      tag_74\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Stake.sol\":1224:1412  function _unStake(address acc, uint256 amount) external onlyAdmin {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Stake.sol\":747:991  function _initToken(... */\n    tag_27:\n        /* \"contracts/Auth.sol\":236:243  _admins */\n      0x01\n        /* \"contracts/Auth.sol\":236:255  _admins[msg.sender] */\n      0x00\n        /* \"contracts/Auth.sol\":244:254  msg.sender */\n      caller\n        /* \"contracts/Auth.sol\":236:255  _admins[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Auth.sol\":228:282  require(_admins[msg.sender], \"Only admin can call it\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap1\n      tag_70\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_77:\n        /* \"contracts/Stake.sol\":866:907  InitTokenEvent(tokenAddress, consAddress) */\n      0x33f0944345b567437b59121ec49e61eac9ab862442c86dece3bf1d1223f485c4\n        /* \"contracts/Stake.sol\":881:893  tokenAddress */\n      dup3\n        /* \"contracts/Stake.sol\":895:906  consAddress */\n      dup3\n        /* \"contracts/Stake.sol\":866:907  InitTokenEvent(tokenAddress, consAddress) */\n      mload(0x40)\n      tag_80\n      swap3\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Stake.sol\":932:944  tokenAddress */\n      dup2\n        /* \"contracts/Stake.sol\":917:922  token */\n      0x02\n      0x00\n        /* \"contracts/Stake.sol\":917:945  token = IERC20(tokenAddress) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stake.sol\":972:983  consAddress */\n      dup1\n        /* \"contracts/Stake.sol\":955:959  cons */\n      0x03\n      0x00\n        /* \"contracts/Stake.sol\":955:984  cons = IConstant(consAddress) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stake.sol\":747:991  function _initToken(... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Stake.sol\":2079:2177  function getValue()public view returns(uint256){... */\n    tag_29:\n        /* \"contracts/Stake.sol\":2118:2125  uint256 */\n      0x00\n        /* \"contracts/Stake.sol\":2142:2146  cons */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Stake.sol\":2142:2168  cons.getTotalTokenIssuance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x36ffc86d\n        /* \"contracts/Stake.sol\":2142:2170  cons.getTotalTokenIssuance() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_84\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"contracts/Stake.sol\":2135:2170  return cons.getTotalTokenIssuance() */\n      swap1\n      pop\n        /* \"contracts/Stake.sol\":2079:2177  function getValue()public view returns(uint256){... */\n      swap1\n      jump\t// out\n        /* \"contracts/Auth.sol\":499:596  function isAdmin(address _addr) public view returns (bool) {... */\n    tag_35:\n        /* \"contracts/Auth.sol\":552:556  bool */\n      0x00\n        /* \"contracts/Auth.sol\":575:582  _admins */\n      0x01\n        /* \"contracts/Auth.sol\":575:589  _admins[_addr] */\n      0x00\n        /* \"contracts/Auth.sol\":583:588  _addr */\n      dup4\n        /* \"contracts/Auth.sol\":575:589  _admins[_addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Auth.sol\":568:589  return _admins[_addr] */\n      swap1\n      pop\n        /* \"contracts/Auth.sol\":499:596  function isAdmin(address _addr) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Auth.sol\":402:493  function delAdmin(address _admin) public onlyOwner {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_89:\n        /* \"contracts/Auth.sol\":481:486  false */\n      0x00\n        /* \"contracts/Auth.sol\":463:470  _admins */\n      0x01\n        /* \"contracts/Auth.sol\":463:478  _admins[_admin] */\n      0x00\n        /* \"contracts/Auth.sol\":471:477  _admin */\n      dup4\n        /* \"contracts/Auth.sol\":463:478  _admins[_admin] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Auth.sol\":463:486  _admins[_admin] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Auth.sol\":402:493  function delAdmin(address _admin) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Stake.sol\":1777:1895  function _approve() external onlyAdmin {... */\n    tag_42:\n        /* \"contracts/Auth.sol\":236:243  _admins */\n      0x01\n        /* \"contracts/Auth.sol\":236:255  _admins[msg.sender] */\n      0x00\n        /* \"contracts/Auth.sol\":244:254  msg.sender */\n      caller\n        /* \"contracts/Auth.sol\":236:255  _admins[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Auth.sol\":228:282  require(_admins[msg.sender], \"Only admin can call it\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap1\n      tag_70\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"contracts/Stake.sol\":1826:1888  token.safeApprove(address(this), cons.getTotalTokenIssuance()) */\n      tag_96\n        /* \"contracts/Stake.sol\":1852:1856  this */\n      address\n        /* \"contracts/Stake.sol\":1859:1863  cons */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Stake.sol\":1859:1885  cons.getTotalTokenIssuance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x36ffc86d\n        /* \"contracts/Stake.sol\":1859:1887  cons.getTotalTokenIssuance() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_98\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_98:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_99:\n        /* \"contracts/Stake.sol\":1826:1831  token */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Stake.sol\":1826:1843  token.safeApprove */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_100\n      swap1\n        /* \"contracts/Stake.sol\":1826:1888  token.safeApprove(address(this), cons.getTotalTokenIssuance()) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_96:\n        /* \"contracts/Stake.sol\":1777:1895  function _approve() external onlyAdmin {... */\n      jump\t// out\n        /* \"contracts/Auth.sol\":306:396  function addAdmin(address _admin) public onlyOwner {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_102\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_102:\n        /* \"contracts/Auth.sol\":385:389  true */\n      0x01\n        /* \"contracts/Auth.sol\":367:374  _admins */\n      dup1\n        /* \"contracts/Auth.sol\":367:382  _admins[_admin] */\n      0x00\n        /* \"contracts/Auth.sol\":375:381  _admin */\n      dup4\n        /* \"contracts/Auth.sol\":367:382  _admins[_admin] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Auth.sol\":367:389  _admins[_admin] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Auth.sol\":306:396  function addAdmin(address _admin) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_108\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Stake.sol\":1011:1198  function _stake(address acc, uint256 _amount) external onlyAdmin {... */\n    tag_54:\n        /* \"contracts/Auth.sol\":236:243  _admins */\n      0x01\n        /* \"contracts/Auth.sol\":236:255  _admins[msg.sender] */\n      0x00\n        /* \"contracts/Auth.sol\":244:254  msg.sender */\n      caller\n        /* \"contracts/Auth.sol\":236:255  _admins[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Auth.sol\":228:282  require(_admins[msg.sender], \"Only admin can call it\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_70\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"contracts/Stake.sol\":1086:1137  token.safeTransferFrom(acc, address(this), _amount) */\n      tag_114\n        /* \"contracts/Stake.sol\":1109:1112  acc */\n      dup3\n        /* \"contracts/Stake.sol\":1122:1126  this */\n      address\n        /* \"contracts/Stake.sol\":1129:1136  _amount */\n      dup4\n        /* \"contracts/Stake.sol\":1086:1091  token */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Stake.sol\":1086:1108  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_73\n      swap1\n        /* \"contracts/Stake.sol\":1086:1137  token.safeTransferFrom(acc, address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_114:\n        /* \"contracts/Stake.sol\":1152:1191  StakeEvent(acc, address(this), _amount) */\n      0x160ffcaa807f78c8b4983836e2396338d073e75695ac448aa0b5e4a75b210b1d\n        /* \"contracts/Stake.sol\":1163:1166  acc */\n      dup3\n        /* \"contracts/Stake.sol\":1176:1180  this */\n      address\n        /* \"contracts/Stake.sol\":1183:1190  _amount */\n      dup4\n        /* \"contracts/Stake.sol\":1152:1191  StakeEvent(acc, address(this), _amount) */\n      mload(0x40)\n      tag_115\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Stake.sol\":1011:1198  function _stake(address acc, uint256 _amount) external onlyAdmin {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Stake.sol\":1438:1644  function _withdraw(address acc, uint256 _amount) external onlyAdmin {... */\n    tag_57:\n        /* \"contracts/Auth.sol\":236:243  _admins */\n      0x01\n        /* \"contracts/Auth.sol\":236:255  _admins[msg.sender] */\n      0x00\n        /* \"contracts/Auth.sol\":244:254  msg.sender */\n      caller\n        /* \"contracts/Auth.sol\":236:255  _admins[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Auth.sol\":228:282  require(_admins[msg.sender], \"Only admin can call it\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap1\n      tag_70\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"contracts/Stake.sol\":1516:1567  token.safeTransferFrom(address(this), acc, _amount) */\n      tag_120\n        /* \"contracts/Stake.sol\":1547:1551  this */\n      address\n        /* \"contracts/Stake.sol\":1554:1557  acc */\n      dup4\n        /* \"contracts/Stake.sol\":1559:1566  _amount */\n      dup4\n        /* \"contracts/Stake.sol\":1516:1521  token */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Stake.sol\":1516:1538  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_73\n      swap1\n        /* \"contracts/Stake.sol\":1516:1567  token.safeTransferFrom(address(this), acc, _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_120:\n        /* \"contracts/Stake.sol\":1582:1637  WithdrawalEvent(address(this).balance, block.timestamp) */\n      0xaf5775a6886f31b3abd4f2379c3da25be665d67d744212488d3a7734cbece4e3\n        /* \"contracts/Stake.sol\":1598:1619  address(this).balance */\n      selfbalance\n        /* \"contracts/Stake.sol\":1621:1636  block.timestamp */\n      timestamp\n        /* \"contracts/Stake.sol\":1582:1637  WithdrawalEvent(address(this).balance, block.timestamp) */\n      mload(0x40)\n      tag_121\n      swap3\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Stake.sol\":1438:1644  function _withdraw(address acc, uint256 _amount) external onlyAdmin {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Stake.sol\":1901:2073  function _increaseAllowance() external onlyAdmin {... */\n    tag_59:\n        /* \"contracts/Auth.sol\":236:243  _admins */\n      0x01\n        /* \"contracts/Auth.sol\":236:255  _admins[msg.sender] */\n      0x00\n        /* \"contracts/Auth.sol\":244:254  msg.sender */\n      caller\n        /* \"contracts/Auth.sol\":236:255  _admins[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Auth.sol\":228:282  require(_admins[msg.sender], \"Only admin can call it\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_70\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"contracts/Stake.sol\":1960:2066  token.safeIncreaseAllowance(... */\n      tag_127\n        /* \"contracts/Stake.sol\":2009:2013  this */\n      address\n        /* \"contracts/Stake.sol\":2028:2032  cons */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Stake.sol\":2028:2054  cons.getTotalTokenIssuance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x36ffc86d\n        /* \"contracts/Stake.sol\":2028:2056  cons.getTotalTokenIssuance() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_129\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_129:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_130\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_130:\n        /* \"contracts/Stake.sol\":1960:1965  token */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Stake.sol\":1960:1987  token.safeIncreaseAllowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_131\n      swap1\n        /* \"contracts/Stake.sol\":1960:2066  token.safeIncreaseAllowance(... */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_127:\n        /* \"contracts/Stake.sol\":1901:2073  function _increaseAllowance() external onlyAdmin {... */\n      jump\t// out\n        /* \"contracts/Stake.sol\":1650:1771  function _balanceOf(address msgSender) external view returns (uint256) {... */\n    tag_62:\n        /* \"contracts/Stake.sol\":1712:1719  uint256 */\n      0x00\n        /* \"contracts/Stake.sol\":1738:1743  token */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Stake.sol\":1738:1753  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Stake.sol\":1754:1763  msgSender */\n      dup4\n        /* \"contracts/Stake.sol\":1738:1764  token.balanceOf(msgSender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_133:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_135\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_135:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_136\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_136:\n        /* \"contracts/Stake.sol\":1731:1764  return token.balanceOf(msgSender) */\n      swap1\n      pop\n        /* \"contracts/Stake.sol\":1650:1771  function _balanceOf(address msgSender) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_138\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_140:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_108\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":974:1215  function safeTransferFrom(... */\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1208  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1132:1137  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1162:1189  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1191:1195  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1197:1199  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1201:1206  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1139:1207  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_146\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1131  _callOptionalReturn */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1208  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":974:1215  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_49\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1475:2078  function safeApprove(... */\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1839:1840  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1830:1835  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1830:1840  value == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1891  (value == 0) || (token.allowance(address(this), spender) == 0) */\n      dup1\n      tag_156\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1889:1890  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1846:1851  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1846:1861  token.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1870:1874  this */\n      address\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1877:1884  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1846:1885  token.allowance(address(this), spender) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_157\n      swap3\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_157:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_159\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_159:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_160\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1846:1890  token.allowance(address(this), spender) == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1891  (value == 0) || (token.allowance(address(this), spender) == 0) */\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1808:1971  require(... */\n      tag_161\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1981:2071  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2001:2006  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2031:2053  token.approve.selector */\n      shl(0xe0, 0x095ea7b3)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2055:2062  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2064:2069  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2008:2070  abi.encodeWithSelector(token.approve.selector, spender, value) */\n      add(0x24, mload(0x40))\n      tag_165\n      swap3\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1981:2000  _callOptionalReturn */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1981:2071  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1475:2078  function safeApprove(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2084:2394  function safeIncreaseAllowance(... */\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2210:2230  uint256 newAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2275:2280  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2233:2238  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2233:2248  token.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2257:2261  this */\n      address\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2264:2271  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2233:2272  token.allowance(address(this), spender) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap3\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_169:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_171\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_171:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_172\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2233:2280  token.allowance(address(this), spender) + value */\n      tag_173\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2210:2280  uint256 newAllowance = token.allowance(address(this), spender) + value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2290:2387  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance)) */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2310:2315  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2340:2362  token.approve.selector */\n      shl(0xe0, 0x095ea7b3)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2364:2371  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2373:2385  newAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2317:2386  abi.encodeWithSelector(token.approve.selector, spender, newAllowance) */\n      add(0x24, mload(0x40))\n      tag_176\n      swap3\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2290:2309  _callOptionalReturn */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2290:2387  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance)) */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2200:2394  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2084:2394  function safeIncreaseAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3747:4453  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4189  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4220:4224  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4200:4205  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4219  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_179\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4261  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4295:4296  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4285  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4292  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4296  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4271:4447  if (returndata.length > 0) {... */\n      iszero\n      tag_180\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4370:4380  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4359:4389  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_181\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4271:4447  if (returndata.length > 0) {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3817:4453  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3747:4453  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3873:4096  function functionCall(... */\n    tag_179:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4006:4018  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4089  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_188\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4059:4065  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4067:4071  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4073:4074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4076:4088  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4058  functionCallWithValue */\n      tag_189\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4089  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_188:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4030:4089  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3873:4096  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4960:5406  function functionCallWithValue(... */\n    tag_189:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5125:5137  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5182:5187  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5157:5178  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5157:5187  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5149:5230  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5241:5253  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5255:5278  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5288  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5293  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5301:5306  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5308:5312  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5313  target.call{value: value}(data) */\n      mload(0x40)\n      tag_194\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_198\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_197)\n    tag_198:\n      0x60\n      swap2\n      pop\n    tag_197:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5240:5313  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5399  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_199\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5357:5363  target */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5365:5372  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5374:5384  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5386:5398  errorMessage */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5356  verifyCallResultFromTarget */\n      tag_200\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5399  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5323:5399  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4960:5406  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7466:8094  function verifyCallResultFromTarget(... */\n    tag_200:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7646:7658  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7674:7681  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7670:8088  if (success) {... */\n      iszero\n      tag_202\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7722:7723  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7711  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7718  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7723  returndata.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7697:7983  if (returndata.length == 0) {... */\n      tag_203\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7916:7934  isContract(target) */\n      tag_204\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7927:7933  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7916:7926  isContract */\n      tag_205\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7916:7934  isContract(target) */\n      jump\t// in\n    tag_204:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7908:7968  require(isContract(target), \"Address: call to non-contract\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_206:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7697:7983  if (returndata.length == 0) {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8003:8013  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7996:8013  return returndata */\n      swap1\n      pop\n      jump(tag_201)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7670:8088  if (success) {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8044:8077  _revert(returndata, errorMessage) */\n      tag_210\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8052:8062  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8064:8076  errorMessage */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8044:8051  _revert */\n      tag_211\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8044:8077  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7466:8094  function verifyCallResultFromTarget(... */\n    tag_201:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8616:9156  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8795:8796  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8785  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8792  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8796  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8771:9150  if (returndata.length > 0) {... */\n      iszero\n      tag_214\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9003:9013  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8997:9014  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9059:9074  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9046:9056  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9042:9044  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9038:9057  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9031:9075  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8771:9150  if (returndata.length > 0) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9126:9138  errorMessage */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9119:9139  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":88:205   */\n    tag_219:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_221:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_222:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_264\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_221\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_223:\n        /* \"#utility.yul\":641:665   */\n      tag_266\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_222\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_267\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_267:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_224:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_269\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_223\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_225:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_226:\n        /* \"#utility.yul\":997:1021   */\n      tag_272\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_225\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_273\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_273:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_227:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_275\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_226\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_22:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_278\n      tag_219\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":1290:1409   */\n    tag_277:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_279\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_224\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_280\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_227\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:2151   */\n    tag_26:\n        /* \"#utility.yul\":1745:1751   */\n      0x00\n        /* \"#utility.yul\":1753:1759   */\n      dup1\n        /* \"#utility.yul\":1802:1804   */\n      0x40\n        /* \"#utility.yul\":1790:1799   */\n      dup4\n        /* \"#utility.yul\":1781:1788   */\n      dup6\n        /* \"#utility.yul\":1777:1800   */\n      sub\n        /* \"#utility.yul\":1773:1805   */\n      slt\n        /* \"#utility.yul\":1770:1889   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":1808:1887   */\n      tag_283\n      tag_219\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":1770:1889   */\n    tag_282:\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1953:2006   */\n      tag_284\n        /* \"#utility.yul\":1998:2005   */\n      dup6\n        /* \"#utility.yul\":1989:1995   */\n      dup3\n        /* \"#utility.yul\":1978:1987   */\n      dup7\n        /* \"#utility.yul\":1974:1996   */\n      add\n        /* \"#utility.yul\":1953:2006   */\n      tag_224\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":1943:2006   */\n      swap3\n      pop\n        /* \"#utility.yul\":1899:2016   */\n      pop\n        /* \"#utility.yul\":2055:2057   */\n      0x20\n        /* \"#utility.yul\":2081:2134   */\n      tag_285\n        /* \"#utility.yul\":2126:2133   */\n      dup6\n        /* \"#utility.yul\":2117:2123   */\n      dup3\n        /* \"#utility.yul\":2106:2115   */\n      dup7\n        /* \"#utility.yul\":2102:2124   */\n      add\n        /* \"#utility.yul\":2081:2134   */\n      tag_224\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":2071:2134   */\n      swap2\n      pop\n        /* \"#utility.yul\":2026:2144   */\n      pop\n        /* \"#utility.yul\":1677:2151   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2157:2275   */\n    tag_228:\n        /* \"#utility.yul\":2244:2268   */\n      tag_287\n        /* \"#utility.yul\":2262:2267   */\n      dup2\n        /* \"#utility.yul\":2244:2268   */\n      tag_225\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":2239:2242   */\n      dup3\n        /* \"#utility.yul\":2232:2269   */\n      mstore\n        /* \"#utility.yul\":2157:2275   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2281:2503   */\n    tag_31:\n        /* \"#utility.yul\":2374:2378   */\n      0x00\n        /* \"#utility.yul\":2412:2414   */\n      0x20\n        /* \"#utility.yul\":2401:2410   */\n      dup3\n        /* \"#utility.yul\":2397:2415   */\n      add\n        /* \"#utility.yul\":2389:2415   */\n      swap1\n      pop\n        /* \"#utility.yul\":2425:2496   */\n      tag_289\n        /* \"#utility.yul\":2493:2494   */\n      0x00\n        /* \"#utility.yul\":2482:2491   */\n      dup4\n        /* \"#utility.yul\":2478:2495   */\n      add\n        /* \"#utility.yul\":2469:2475   */\n      dup5\n        /* \"#utility.yul\":2425:2496   */\n      tag_228\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":2281:2503   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2509:2838   */\n    tag_34:\n        /* \"#utility.yul\":2568:2574   */\n      0x00\n        /* \"#utility.yul\":2617:2619   */\n      0x20\n        /* \"#utility.yul\":2605:2614   */\n      dup3\n        /* \"#utility.yul\":2596:2603   */\n      dup5\n        /* \"#utility.yul\":2592:2615   */\n      sub\n        /* \"#utility.yul\":2588:2620   */\n      slt\n        /* \"#utility.yul\":2585:2704   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":2623:2702   */\n      tag_292\n      tag_219\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":2585:2704   */\n    tag_291:\n        /* \"#utility.yul\":2743:2744   */\n      0x00\n        /* \"#utility.yul\":2768:2821   */\n      tag_293\n        /* \"#utility.yul\":2813:2820   */\n      dup5\n        /* \"#utility.yul\":2804:2810   */\n      dup3\n        /* \"#utility.yul\":2793:2802   */\n      dup6\n        /* \"#utility.yul\":2789:2811   */\n      add\n        /* \"#utility.yul\":2768:2821   */\n      tag_224\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":2758:2821   */\n      swap2\n      pop\n        /* \"#utility.yul\":2714:2831   */\n      pop\n        /* \"#utility.yul\":2509:2838   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2844:2934   */\n    tag_229:\n        /* \"#utility.yul\":2878:2885   */\n      0x00\n        /* \"#utility.yul\":2921:2926   */\n      dup2\n        /* \"#utility.yul\":2914:2927   */\n      iszero\n        /* \"#utility.yul\":2907:2928   */\n      iszero\n        /* \"#utility.yul\":2896:2928   */\n      swap1\n      pop\n        /* \"#utility.yul\":2844:2934   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2940:3049   */\n    tag_230:\n        /* \"#utility.yul\":3021:3042   */\n      tag_296\n        /* \"#utility.yul\":3036:3041   */\n      dup2\n        /* \"#utility.yul\":3021:3042   */\n      tag_229\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":3016:3019   */\n      dup3\n        /* \"#utility.yul\":3009:3043   */\n      mstore\n        /* \"#utility.yul\":2940:3049   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3055:3265   */\n    tag_37:\n        /* \"#utility.yul\":3142:3146   */\n      0x00\n        /* \"#utility.yul\":3180:3182   */\n      0x20\n        /* \"#utility.yul\":3169:3178   */\n      dup3\n        /* \"#utility.yul\":3165:3183   */\n      add\n        /* \"#utility.yul\":3157:3183   */\n      swap1\n      pop\n        /* \"#utility.yul\":3193:3258   */\n      tag_298\n        /* \"#utility.yul\":3255:3256   */\n      0x00\n        /* \"#utility.yul\":3244:3253   */\n      dup4\n        /* \"#utility.yul\":3240:3257   */\n      add\n        /* \"#utility.yul\":3231:3237   */\n      dup5\n        /* \"#utility.yul\":3193:3258   */\n      tag_230\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":3055:3265   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3271:3389   */\n    tag_231:\n        /* \"#utility.yul\":3358:3382   */\n      tag_300\n        /* \"#utility.yul\":3376:3381   */\n      dup2\n        /* \"#utility.yul\":3358:3382   */\n      tag_222\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":3353:3356   */\n      dup3\n        /* \"#utility.yul\":3346:3383   */\n      mstore\n        /* \"#utility.yul\":3271:3389   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3395:3617   */\n    tag_51:\n        /* \"#utility.yul\":3488:3492   */\n      0x00\n        /* \"#utility.yul\":3526:3528   */\n      0x20\n        /* \"#utility.yul\":3515:3524   */\n      dup3\n        /* \"#utility.yul\":3511:3529   */\n      add\n        /* \"#utility.yul\":3503:3529   */\n      swap1\n      pop\n        /* \"#utility.yul\":3539:3610   */\n      tag_302\n        /* \"#utility.yul\":3607:3608   */\n      0x00\n        /* \"#utility.yul\":3596:3605   */\n      dup4\n        /* \"#utility.yul\":3592:3609   */\n      add\n        /* \"#utility.yul\":3583:3589   */\n      dup5\n        /* \"#utility.yul\":3539:3610   */\n      tag_231\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":3395:3617   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3623:3792   */\n    tag_232:\n        /* \"#utility.yul\":3707:3718   */\n      0x00\n        /* \"#utility.yul\":3741:3747   */\n      dup3\n        /* \"#utility.yul\":3736:3739   */\n      dup3\n        /* \"#utility.yul\":3729:3748   */\n      mstore\n        /* \"#utility.yul\":3781:3785   */\n      0x20\n        /* \"#utility.yul\":3776:3779   */\n      dup3\n        /* \"#utility.yul\":3772:3786   */\n      add\n        /* \"#utility.yul\":3757:3786   */\n      swap1\n      pop\n        /* \"#utility.yul\":3623:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:3970   */\n    tag_233:\n        /* \"#utility.yul\":3938:3962   */\n      0x4f6e6c792061646d696e2063616e2063616c6c20697400000000000000000000\n        /* \"#utility.yul\":3934:3935   */\n      0x00\n        /* \"#utility.yul\":3926:3932   */\n      dup3\n        /* \"#utility.yul\":3922:3936   */\n      add\n        /* \"#utility.yul\":3915:3963   */\n      mstore\n        /* \"#utility.yul\":3798:3970   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3976:4342   */\n    tag_234:\n        /* \"#utility.yul\":4118:4121   */\n      0x00\n        /* \"#utility.yul\":4139:4206   */\n      tag_306\n        /* \"#utility.yul\":4203:4205   */\n      0x16\n        /* \"#utility.yul\":4198:4201   */\n      dup4\n        /* \"#utility.yul\":4139:4206   */\n      tag_232\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":4132:4206   */\n      swap2\n      pop\n        /* \"#utility.yul\":4215:4308   */\n      tag_307\n        /* \"#utility.yul\":4304:4307   */\n      dup3\n        /* \"#utility.yul\":4215:4308   */\n      tag_233\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":4333:4335   */\n      0x20\n        /* \"#utility.yul\":4328:4331   */\n      dup3\n        /* \"#utility.yul\":4324:4336   */\n      add\n        /* \"#utility.yul\":4317:4336   */\n      swap1\n      pop\n        /* \"#utility.yul\":3976:4342   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4348:4767   */\n    tag_70:\n        /* \"#utility.yul\":4514:4518   */\n      0x00\n        /* \"#utility.yul\":4552:4554   */\n      0x20\n        /* \"#utility.yul\":4541:4550   */\n      dup3\n        /* \"#utility.yul\":4537:4555   */\n      add\n        /* \"#utility.yul\":4529:4555   */\n      swap1\n      pop\n        /* \"#utility.yul\":4601:4610   */\n      dup2\n        /* \"#utility.yul\":4595:4599   */\n      dup2\n        /* \"#utility.yul\":4591:4611   */\n      sub\n        /* \"#utility.yul\":4587:4588   */\n      0x00\n        /* \"#utility.yul\":4576:4585   */\n      dup4\n        /* \"#utility.yul\":4572:4589   */\n      add\n        /* \"#utility.yul\":4565:4612   */\n      mstore\n        /* \"#utility.yul\":4629:4760   */\n      tag_309\n        /* \"#utility.yul\":4755:4759   */\n      dup2\n        /* \"#utility.yul\":4629:4760   */\n      tag_234\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":4621:4760   */\n      swap1\n      pop\n        /* \"#utility.yul\":4348:4767   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4773:5215   */\n    tag_75:\n        /* \"#utility.yul\":4922:4926   */\n      0x00\n        /* \"#utility.yul\":4960:4962   */\n      0x60\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4945:4963   */\n      add\n        /* \"#utility.yul\":4937:4963   */\n      swap1\n      pop\n        /* \"#utility.yul\":4973:5044   */\n      tag_311\n        /* \"#utility.yul\":5041:5042   */\n      0x00\n        /* \"#utility.yul\":5030:5039   */\n      dup4\n        /* \"#utility.yul\":5026:5043   */\n      add\n        /* \"#utility.yul\":5017:5023   */\n      dup7\n        /* \"#utility.yul\":4973:5044   */\n      tag_231\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":5054:5126   */\n      tag_312\n        /* \"#utility.yul\":5122:5124   */\n      0x20\n        /* \"#utility.yul\":5111:5120   */\n      dup4\n        /* \"#utility.yul\":5107:5125   */\n      add\n        /* \"#utility.yul\":5098:5104   */\n      dup6\n        /* \"#utility.yul\":5054:5126   */\n      tag_231\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":5136:5208   */\n      tag_313\n        /* \"#utility.yul\":5204:5206   */\n      0x40\n        /* \"#utility.yul\":5193:5202   */\n      dup4\n        /* \"#utility.yul\":5189:5207   */\n      add\n        /* \"#utility.yul\":5180:5186   */\n      dup5\n        /* \"#utility.yul\":5136:5208   */\n      tag_228\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":4773:5215   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5221:5553   */\n    tag_81:\n        /* \"#utility.yul\":5342:5346   */\n      0x00\n        /* \"#utility.yul\":5380:5382   */\n      0x40\n        /* \"#utility.yul\":5369:5378   */\n      dup3\n        /* \"#utility.yul\":5365:5383   */\n      add\n        /* \"#utility.yul\":5357:5383   */\n      swap1\n      pop\n        /* \"#utility.yul\":5393:5464   */\n      tag_315\n        /* \"#utility.yul\":5461:5462   */\n      0x00\n        /* \"#utility.yul\":5450:5459   */\n      dup4\n        /* \"#utility.yul\":5446:5463   */\n      add\n        /* \"#utility.yul\":5437:5443   */\n      dup6\n        /* \"#utility.yul\":5393:5464   */\n      tag_231\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":5474:5546   */\n      tag_316\n        /* \"#utility.yul\":5542:5544   */\n      0x20\n        /* \"#utility.yul\":5531:5540   */\n      dup4\n        /* \"#utility.yul\":5527:5545   */\n      add\n        /* \"#utility.yul\":5518:5524   */\n      dup5\n        /* \"#utility.yul\":5474:5546   */\n      tag_231\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":5221:5553   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5559:5702   */\n    tag_235:\n        /* \"#utility.yul\":5616:5621   */\n      0x00\n        /* \"#utility.yul\":5647:5653   */\n      dup2\n        /* \"#utility.yul\":5641:5654   */\n      mload\n        /* \"#utility.yul\":5632:5654   */\n      swap1\n      pop\n        /* \"#utility.yul\":5663:5696   */\n      tag_318\n        /* \"#utility.yul\":5690:5695   */\n      dup2\n        /* \"#utility.yul\":5663:5696   */\n      tag_226\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":5559:5702   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5708:6059   */\n    tag_86:\n        /* \"#utility.yul\":5778:5784   */\n      0x00\n        /* \"#utility.yul\":5827:5829   */\n      0x20\n        /* \"#utility.yul\":5815:5824   */\n      dup3\n        /* \"#utility.yul\":5806:5813   */\n      dup5\n        /* \"#utility.yul\":5802:5825   */\n      sub\n        /* \"#utility.yul\":5798:5830   */\n      slt\n        /* \"#utility.yul\":5795:5914   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":5833:5912   */\n      tag_321\n      tag_219\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":5795:5914   */\n    tag_320:\n        /* \"#utility.yul\":5953:5954   */\n      0x00\n        /* \"#utility.yul\":5978:6042   */\n      tag_322\n        /* \"#utility.yul\":6034:6041   */\n      dup5\n        /* \"#utility.yul\":6025:6031   */\n      dup3\n        /* \"#utility.yul\":6014:6023   */\n      dup6\n        /* \"#utility.yul\":6010:6032   */\n      add\n        /* \"#utility.yul\":5978:6042   */\n      tag_235\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":5968:6042   */\n      swap2\n      pop\n        /* \"#utility.yul\":5924:6052   */\n      pop\n        /* \"#utility.yul\":5708:6059   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6065:6397   */\n    tag_122:\n        /* \"#utility.yul\":6186:6190   */\n      0x00\n        /* \"#utility.yul\":6224:6226   */\n      0x40\n        /* \"#utility.yul\":6213:6222   */\n      dup3\n        /* \"#utility.yul\":6209:6227   */\n      add\n        /* \"#utility.yul\":6201:6227   */\n      swap1\n      pop\n        /* \"#utility.yul\":6237:6308   */\n      tag_324\n        /* \"#utility.yul\":6305:6306   */\n      0x00\n        /* \"#utility.yul\":6294:6303   */\n      dup4\n        /* \"#utility.yul\":6290:6307   */\n      add\n        /* \"#utility.yul\":6281:6287   */\n      dup6\n        /* \"#utility.yul\":6237:6308   */\n      tag_228\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":6318:6390   */\n      tag_325\n        /* \"#utility.yul\":6386:6388   */\n      0x20\n        /* \"#utility.yul\":6375:6384   */\n      dup4\n        /* \"#utility.yul\":6371:6389   */\n      add\n        /* \"#utility.yul\":6362:6368   */\n      dup5\n        /* \"#utility.yul\":6318:6390   */\n      tag_228\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":6065:6397   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6403:6628   */\n    tag_236:\n        /* \"#utility.yul\":6543:6577   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":6539:6540   */\n      0x00\n        /* \"#utility.yul\":6531:6537   */\n      dup3\n        /* \"#utility.yul\":6527:6541   */\n      add\n        /* \"#utility.yul\":6520:6578   */\n      mstore\n        /* \"#utility.yul\":6612:6620   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6607:6609   */\n      0x20\n        /* \"#utility.yul\":6599:6605   */\n      dup3\n        /* \"#utility.yul\":6595:6610   */\n      add\n        /* \"#utility.yul\":6588:6621   */\n      mstore\n        /* \"#utility.yul\":6403:6628   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6634:7000   */\n    tag_237:\n        /* \"#utility.yul\":6776:6779   */\n      0x00\n        /* \"#utility.yul\":6797:6864   */\n      tag_328\n        /* \"#utility.yul\":6861:6863   */\n      0x26\n        /* \"#utility.yul\":6856:6859   */\n      dup4\n        /* \"#utility.yul\":6797:6864   */\n      tag_232\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":6790:6864   */\n      swap2\n      pop\n        /* \"#utility.yul\":6873:6966   */\n      tag_329\n        /* \"#utility.yul\":6962:6965   */\n      dup3\n        /* \"#utility.yul\":6873:6966   */\n      tag_236\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":6991:6993   */\n      0x40\n        /* \"#utility.yul\":6986:6989   */\n      dup3\n        /* \"#utility.yul\":6982:6994   */\n      add\n        /* \"#utility.yul\":6975:6994   */\n      swap1\n      pop\n        /* \"#utility.yul\":6634:7000   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7006:7425   */\n    tag_142:\n        /* \"#utility.yul\":7172:7176   */\n      0x00\n        /* \"#utility.yul\":7210:7212   */\n      0x20\n        /* \"#utility.yul\":7199:7208   */\n      dup3\n        /* \"#utility.yul\":7195:7213   */\n      add\n        /* \"#utility.yul\":7187:7213   */\n      swap1\n      pop\n        /* \"#utility.yul\":7259:7268   */\n      dup2\n        /* \"#utility.yul\":7253:7257   */\n      dup2\n        /* \"#utility.yul\":7249:7269   */\n      sub\n        /* \"#utility.yul\":7245:7246   */\n      0x00\n        /* \"#utility.yul\":7234:7243   */\n      dup4\n        /* \"#utility.yul\":7230:7247   */\n      add\n        /* \"#utility.yul\":7223:7270   */\n      mstore\n        /* \"#utility.yul\":7287:7418   */\n      tag_331\n        /* \"#utility.yul\":7413:7417   */\n      dup2\n        /* \"#utility.yul\":7287:7418   */\n      tag_237\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":7279:7418   */\n      swap1\n      pop\n        /* \"#utility.yul\":7006:7425   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7431:7613   */\n    tag_238:\n        /* \"#utility.yul\":7571:7605   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":7567:7568   */\n      0x00\n        /* \"#utility.yul\":7559:7565   */\n      dup3\n        /* \"#utility.yul\":7555:7569   */\n      add\n        /* \"#utility.yul\":7548:7606   */\n      mstore\n        /* \"#utility.yul\":7431:7613   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7619:7985   */\n    tag_239:\n        /* \"#utility.yul\":7761:7764   */\n      0x00\n        /* \"#utility.yul\":7782:7849   */\n      tag_334\n        /* \"#utility.yul\":7846:7848   */\n      0x20\n        /* \"#utility.yul\":7841:7844   */\n      dup4\n        /* \"#utility.yul\":7782:7849   */\n      tag_232\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":7775:7849   */\n      swap2\n      pop\n        /* \"#utility.yul\":7858:7951   */\n      tag_335\n        /* \"#utility.yul\":7947:7950   */\n      dup3\n        /* \"#utility.yul\":7858:7951   */\n      tag_238\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":7976:7978   */\n      0x20\n        /* \"#utility.yul\":7971:7974   */\n      dup3\n        /* \"#utility.yul\":7967:7979   */\n      add\n        /* \"#utility.yul\":7960:7979   */\n      swap1\n      pop\n        /* \"#utility.yul\":7619:7985   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7991:8410   */\n    tag_154:\n        /* \"#utility.yul\":8157:8161   */\n      0x00\n        /* \"#utility.yul\":8195:8197   */\n      0x20\n        /* \"#utility.yul\":8184:8193   */\n      dup3\n        /* \"#utility.yul\":8180:8198   */\n      add\n        /* \"#utility.yul\":8172:8198   */\n      swap1\n      pop\n        /* \"#utility.yul\":8244:8253   */\n      dup2\n        /* \"#utility.yul\":8238:8242   */\n      dup2\n        /* \"#utility.yul\":8234:8254   */\n      sub\n        /* \"#utility.yul\":8230:8231   */\n      0x00\n        /* \"#utility.yul\":8219:8228   */\n      dup4\n        /* \"#utility.yul\":8215:8232   */\n      add\n        /* \"#utility.yul\":8208:8255   */\n      mstore\n        /* \"#utility.yul\":8272:8403   */\n      tag_337\n        /* \"#utility.yul\":8398:8402   */\n      dup2\n        /* \"#utility.yul\":8272:8403   */\n      tag_239\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":8264:8403   */\n      swap1\n      pop\n        /* \"#utility.yul\":7991:8410   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8416:8657   */\n    tag_240:\n        /* \"#utility.yul\":8556:8590   */\n      0x5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f\n        /* \"#utility.yul\":8552:8553   */\n      0x00\n        /* \"#utility.yul\":8544:8550   */\n      dup3\n        /* \"#utility.yul\":8540:8554   */\n      add\n        /* \"#utility.yul\":8533:8591   */\n      mstore\n        /* \"#utility.yul\":8625:8649   */\n      0x20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000\n        /* \"#utility.yul\":8620:8622   */\n      0x20\n        /* \"#utility.yul\":8612:8618   */\n      dup3\n        /* \"#utility.yul\":8608:8623   */\n      add\n        /* \"#utility.yul\":8601:8650   */\n      mstore\n        /* \"#utility.yul\":8416:8657   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8663:9029   */\n    tag_241:\n        /* \"#utility.yul\":8805:8808   */\n      0x00\n        /* \"#utility.yul\":8826:8893   */\n      tag_340\n        /* \"#utility.yul\":8890:8892   */\n      0x36\n        /* \"#utility.yul\":8885:8888   */\n      dup4\n        /* \"#utility.yul\":8826:8893   */\n      tag_232\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":8819:8893   */\n      swap2\n      pop\n        /* \"#utility.yul\":8902:8995   */\n      tag_341\n        /* \"#utility.yul\":8991:8994   */\n      dup3\n        /* \"#utility.yul\":8902:8995   */\n      tag_240\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":9020:9022   */\n      0x40\n        /* \"#utility.yul\":9015:9018   */\n      dup3\n        /* \"#utility.yul\":9011:9023   */\n      add\n        /* \"#utility.yul\":9004:9023   */\n      swap1\n      pop\n        /* \"#utility.yul\":8663:9029   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9035:9454   */\n    tag_163:\n        /* \"#utility.yul\":9201:9205   */\n      0x00\n        /* \"#utility.yul\":9239:9241   */\n      0x20\n        /* \"#utility.yul\":9228:9237   */\n      dup3\n        /* \"#utility.yul\":9224:9242   */\n      add\n        /* \"#utility.yul\":9216:9242   */\n      swap1\n      pop\n        /* \"#utility.yul\":9288:9297   */\n      dup2\n        /* \"#utility.yul\":9282:9286   */\n      dup2\n        /* \"#utility.yul\":9278:9298   */\n      sub\n        /* \"#utility.yul\":9274:9275   */\n      0x00\n        /* \"#utility.yul\":9263:9272   */\n      dup4\n        /* \"#utility.yul\":9259:9276   */\n      add\n        /* \"#utility.yul\":9252:9299   */\n      mstore\n        /* \"#utility.yul\":9316:9447   */\n      tag_343\n        /* \"#utility.yul\":9442:9446   */\n      dup2\n        /* \"#utility.yul\":9316:9447   */\n      tag_241\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":9308:9447   */\n      swap1\n      pop\n        /* \"#utility.yul\":9035:9454   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9460:9792   */\n    tag_166:\n        /* \"#utility.yul\":9581:9585   */\n      0x00\n        /* \"#utility.yul\":9619:9621   */\n      0x40\n        /* \"#utility.yul\":9608:9617   */\n      dup3\n        /* \"#utility.yul\":9604:9622   */\n      add\n        /* \"#utility.yul\":9596:9622   */\n      swap1\n      pop\n        /* \"#utility.yul\":9632:9703   */\n      tag_345\n        /* \"#utility.yul\":9700:9701   */\n      0x00\n        /* \"#utility.yul\":9689:9698   */\n      dup4\n        /* \"#utility.yul\":9685:9702   */\n      add\n        /* \"#utility.yul\":9676:9682   */\n      dup6\n        /* \"#utility.yul\":9632:9703   */\n      tag_231\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":9713:9785   */\n      tag_346\n        /* \"#utility.yul\":9781:9783   */\n      0x20\n        /* \"#utility.yul\":9770:9779   */\n      dup4\n        /* \"#utility.yul\":9766:9784   */\n      add\n        /* \"#utility.yul\":9757:9763   */\n      dup5\n        /* \"#utility.yul\":9713:9785   */\n      tag_228\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":9460:9792   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9798:9978   */\n    tag_242:\n        /* \"#utility.yul\":9846:9923   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9843:9844   */\n      0x00\n        /* \"#utility.yul\":9836:9924   */\n      mstore\n        /* \"#utility.yul\":9943:9947   */\n      0x11\n        /* \"#utility.yul\":9940:9941   */\n      0x04\n        /* \"#utility.yul\":9933:9948   */\n      mstore\n        /* \"#utility.yul\":9967:9971   */\n      0x24\n        /* \"#utility.yul\":9964:9965   */\n      0x00\n        /* \"#utility.yul\":9957:9972   */\n      revert\n        /* \"#utility.yul\":9984:10175   */\n    tag_174:\n        /* \"#utility.yul\":10024:10027   */\n      0x00\n        /* \"#utility.yul\":10043:10063   */\n      tag_349\n        /* \"#utility.yul\":10061:10062   */\n      dup3\n        /* \"#utility.yul\":10043:10063   */\n      tag_225\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":10038:10063   */\n      swap2\n      pop\n        /* \"#utility.yul\":10077:10097   */\n      tag_350\n        /* \"#utility.yul\":10095:10096   */\n      dup4\n        /* \"#utility.yul\":10077:10097   */\n      tag_225\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":10072:10097   */\n      swap3\n      pop\n        /* \"#utility.yul\":10120:10121   */\n      dup3\n        /* \"#utility.yul\":10117:10118   */\n      dup3\n        /* \"#utility.yul\":10113:10122   */\n      add\n        /* \"#utility.yul\":10106:10122   */\n      swap1\n      pop\n        /* \"#utility.yul\":10141:10144   */\n      dup1\n        /* \"#utility.yul\":10138:10139   */\n      dup3\n        /* \"#utility.yul\":10135:10145   */\n      gt\n        /* \"#utility.yul\":10132:10168   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":10148:10166   */\n      tag_352\n      tag_242\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":10132:10168   */\n    tag_351:\n        /* \"#utility.yul\":9984:10175   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10181:10297   */\n    tag_243:\n        /* \"#utility.yul\":10251:10272   */\n      tag_354\n        /* \"#utility.yul\":10266:10271   */\n      dup2\n        /* \"#utility.yul\":10251:10272   */\n      tag_229\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":10244:10249   */\n      dup2\n        /* \"#utility.yul\":10241:10273   */\n      eq\n        /* \"#utility.yul\":10231:10291   */\n      tag_355\n      jumpi\n        /* \"#utility.yul\":10287:10288   */\n      0x00\n        /* \"#utility.yul\":10284:10285   */\n      dup1\n        /* \"#utility.yul\":10277:10289   */\n      revert\n        /* \"#utility.yul\":10231:10291   */\n    tag_355:\n        /* \"#utility.yul\":10181:10297   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10303:10440   */\n    tag_244:\n        /* \"#utility.yul\":10357:10362   */\n      0x00\n        /* \"#utility.yul\":10388:10394   */\n      dup2\n        /* \"#utility.yul\":10382:10395   */\n      mload\n        /* \"#utility.yul\":10373:10395   */\n      swap1\n      pop\n        /* \"#utility.yul\":10404:10434   */\n      tag_357\n        /* \"#utility.yul\":10428:10433   */\n      dup2\n        /* \"#utility.yul\":10404:10434   */\n      tag_243\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":10303:10440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10446:10791   */\n    tag_182:\n        /* \"#utility.yul\":10513:10519   */\n      0x00\n        /* \"#utility.yul\":10562:10564   */\n      0x20\n        /* \"#utility.yul\":10550:10559   */\n      dup3\n        /* \"#utility.yul\":10541:10548   */\n      dup5\n        /* \"#utility.yul\":10537:10560   */\n      sub\n        /* \"#utility.yul\":10533:10565   */\n      slt\n        /* \"#utility.yul\":10530:10649   */\n      iszero\n      tag_359\n      jumpi\n        /* \"#utility.yul\":10568:10647   */\n      tag_360\n      tag_219\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":10530:10649   */\n    tag_359:\n        /* \"#utility.yul\":10688:10689   */\n      0x00\n        /* \"#utility.yul\":10713:10774   */\n      tag_361\n        /* \"#utility.yul\":10766:10773   */\n      dup5\n        /* \"#utility.yul\":10757:10763   */\n      dup3\n        /* \"#utility.yul\":10746:10755   */\n      dup6\n        /* \"#utility.yul\":10742:10764   */\n      add\n        /* \"#utility.yul\":10713:10774   */\n      tag_244\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":10703:10774   */\n      swap2\n      pop\n        /* \"#utility.yul\":10659:10784   */\n      pop\n        /* \"#utility.yul\":10446:10791   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10797:11026   */\n    tag_245:\n        /* \"#utility.yul\":10937:10971   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":10933:10934   */\n      0x00\n        /* \"#utility.yul\":10925:10931   */\n      dup3\n        /* \"#utility.yul\":10921:10935   */\n      add\n        /* \"#utility.yul\":10914:10972   */\n      mstore\n        /* \"#utility.yul\":11006:11018   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11001:11003   */\n      0x20\n        /* \"#utility.yul\":10993:10999   */\n      dup3\n        /* \"#utility.yul\":10989:11004   */\n      add\n        /* \"#utility.yul\":10982:11019   */\n      mstore\n        /* \"#utility.yul\":10797:11026   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11032:11398   */\n    tag_246:\n        /* \"#utility.yul\":11174:11177   */\n      0x00\n        /* \"#utility.yul\":11195:11262   */\n      tag_364\n        /* \"#utility.yul\":11259:11261   */\n      0x2a\n        /* \"#utility.yul\":11254:11257   */\n      dup4\n        /* \"#utility.yul\":11195:11262   */\n      tag_232\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":11188:11262   */\n      swap2\n      pop\n        /* \"#utility.yul\":11271:11364   */\n      tag_365\n        /* \"#utility.yul\":11360:11363   */\n      dup3\n        /* \"#utility.yul\":11271:11364   */\n      tag_245\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":11389:11391   */\n      0x40\n        /* \"#utility.yul\":11384:11387   */\n      dup3\n        /* \"#utility.yul\":11380:11392   */\n      add\n        /* \"#utility.yul\":11373:11392   */\n      swap1\n      pop\n        /* \"#utility.yul\":11032:11398   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11404:11823   */\n    tag_185:\n        /* \"#utility.yul\":11570:11574   */\n      0x00\n        /* \"#utility.yul\":11608:11610   */\n      0x20\n        /* \"#utility.yul\":11597:11606   */\n      dup3\n        /* \"#utility.yul\":11593:11611   */\n      add\n        /* \"#utility.yul\":11585:11611   */\n      swap1\n      pop\n        /* \"#utility.yul\":11657:11666   */\n      dup2\n        /* \"#utility.yul\":11651:11655   */\n      dup2\n        /* \"#utility.yul\":11647:11667   */\n      sub\n        /* \"#utility.yul\":11643:11644   */\n      0x00\n        /* \"#utility.yul\":11632:11641   */\n      dup4\n        /* \"#utility.yul\":11628:11645   */\n      add\n        /* \"#utility.yul\":11621:11668   */\n      mstore\n        /* \"#utility.yul\":11685:11816   */\n      tag_367\n        /* \"#utility.yul\":11811:11815   */\n      dup2\n        /* \"#utility.yul\":11685:11816   */\n      tag_246\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":11677:11816   */\n      swap1\n      pop\n        /* \"#utility.yul\":11404:11823   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11829:12054   */\n    tag_247:\n        /* \"#utility.yul\":11969:12003   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":11965:11966   */\n      0x00\n        /* \"#utility.yul\":11957:11963   */\n      dup3\n        /* \"#utility.yul\":11953:11967   */\n      add\n        /* \"#utility.yul\":11946:12004   */\n      mstore\n        /* \"#utility.yul\":12038:12046   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12033:12035   */\n      0x20\n        /* \"#utility.yul\":12025:12031   */\n      dup3\n        /* \"#utility.yul\":12021:12036   */\n      add\n        /* \"#utility.yul\":12014:12047   */\n      mstore\n        /* \"#utility.yul\":11829:12054   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12060:12426   */\n    tag_248:\n        /* \"#utility.yul\":12202:12205   */\n      0x00\n        /* \"#utility.yul\":12223:12290   */\n      tag_370\n        /* \"#utility.yul\":12287:12289   */\n      0x26\n        /* \"#utility.yul\":12282:12285   */\n      dup4\n        /* \"#utility.yul\":12223:12290   */\n      tag_232\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":12216:12290   */\n      swap2\n      pop\n        /* \"#utility.yul\":12299:12392   */\n      tag_371\n        /* \"#utility.yul\":12388:12391   */\n      dup3\n        /* \"#utility.yul\":12299:12392   */\n      tag_247\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":12417:12419   */\n      0x40\n        /* \"#utility.yul\":12412:12415   */\n      dup3\n        /* \"#utility.yul\":12408:12420   */\n      add\n        /* \"#utility.yul\":12401:12420   */\n      swap1\n      pop\n        /* \"#utility.yul\":12060:12426   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12432:12851   */\n    tag_193:\n        /* \"#utility.yul\":12598:12602   */\n      0x00\n        /* \"#utility.yul\":12636:12638   */\n      0x20\n        /* \"#utility.yul\":12625:12634   */\n      dup3\n        /* \"#utility.yul\":12621:12639   */\n      add\n        /* \"#utility.yul\":12613:12639   */\n      swap1\n      pop\n        /* \"#utility.yul\":12685:12694   */\n      dup2\n        /* \"#utility.yul\":12679:12683   */\n      dup2\n        /* \"#utility.yul\":12675:12695   */\n      sub\n        /* \"#utility.yul\":12671:12672   */\n      0x00\n        /* \"#utility.yul\":12660:12669   */\n      dup4\n        /* \"#utility.yul\":12656:12673   */\n      add\n        /* \"#utility.yul\":12649:12696   */\n      mstore\n        /* \"#utility.yul\":12713:12844   */\n      tag_373\n        /* \"#utility.yul\":12839:12843   */\n      dup2\n        /* \"#utility.yul\":12713:12844   */\n      tag_248\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":12705:12844   */\n      swap1\n      pop\n        /* \"#utility.yul\":12432:12851   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12857:12955   */\n    tag_249:\n        /* \"#utility.yul\":12908:12914   */\n      0x00\n        /* \"#utility.yul\":12942:12947   */\n      dup2\n        /* \"#utility.yul\":12936:12948   */\n      mload\n        /* \"#utility.yul\":12926:12948   */\n      swap1\n      pop\n        /* \"#utility.yul\":12857:12955   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12961:13108   */\n    tag_250:\n        /* \"#utility.yul\":13062:13073   */\n      0x00\n        /* \"#utility.yul\":13099:13102   */\n      dup2\n        /* \"#utility.yul\":13084:13102   */\n      swap1\n      pop\n        /* \"#utility.yul\":12961:13108   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13114:13360   */\n    tag_251:\n        /* \"#utility.yul\":13195:13196   */\n      0x00\n        /* \"#utility.yul\":13205:13318   */\n    tag_377:\n        /* \"#utility.yul\":13219:13225   */\n      dup4\n        /* \"#utility.yul\":13216:13217   */\n      dup2\n        /* \"#utility.yul\":13213:13226   */\n      lt\n        /* \"#utility.yul\":13205:13318   */\n      iszero\n      tag_379\n      jumpi\n        /* \"#utility.yul\":13304:13305   */\n      dup1\n        /* \"#utility.yul\":13299:13302   */\n      dup3\n        /* \"#utility.yul\":13295:13306   */\n      add\n        /* \"#utility.yul\":13289:13307   */\n      mload\n        /* \"#utility.yul\":13285:13286   */\n      dup2\n        /* \"#utility.yul\":13280:13283   */\n      dup5\n        /* \"#utility.yul\":13276:13287   */\n      add\n        /* \"#utility.yul\":13269:13308   */\n      mstore\n        /* \"#utility.yul\":13241:13243   */\n      0x20\n        /* \"#utility.yul\":13238:13239   */\n      dup2\n        /* \"#utility.yul\":13234:13244   */\n      add\n        /* \"#utility.yul\":13229:13244   */\n      swap1\n      pop\n        /* \"#utility.yul\":13205:13318   */\n      jump(tag_377)\n    tag_379:\n        /* \"#utility.yul\":13352:13353   */\n      0x00\n        /* \"#utility.yul\":13343:13349   */\n      dup5\n        /* \"#utility.yul\":13338:13341   */\n      dup5\n        /* \"#utility.yul\":13334:13350   */\n      add\n        /* \"#utility.yul\":13327:13354   */\n      mstore\n        /* \"#utility.yul\":13176:13360   */\n      pop\n        /* \"#utility.yul\":13114:13360   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13366:13752   */\n    tag_252:\n        /* \"#utility.yul\":13470:13473   */\n      0x00\n        /* \"#utility.yul\":13498:13536   */\n      tag_381\n        /* \"#utility.yul\":13530:13535   */\n      dup3\n        /* \"#utility.yul\":13498:13536   */\n      tag_249\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":13552:13640   */\n      tag_382\n        /* \"#utility.yul\":13633:13639   */\n      dup2\n        /* \"#utility.yul\":13628:13631   */\n      dup6\n        /* \"#utility.yul\":13552:13640   */\n      tag_250\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":13545:13640   */\n      swap4\n      pop\n        /* \"#utility.yul\":13649:13714   */\n      tag_383\n        /* \"#utility.yul\":13707:13713   */\n      dup2\n        /* \"#utility.yul\":13702:13705   */\n      dup6\n        /* \"#utility.yul\":13695:13699   */\n      0x20\n        /* \"#utility.yul\":13688:13693   */\n      dup7\n        /* \"#utility.yul\":13684:13700   */\n      add\n        /* \"#utility.yul\":13649:13714   */\n      tag_251\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":13739:13745   */\n      dup1\n        /* \"#utility.yul\":13734:13737   */\n      dup5\n        /* \"#utility.yul\":13730:13746   */\n      add\n        /* \"#utility.yul\":13723:13746   */\n      swap2\n      pop\n        /* \"#utility.yul\":13474:13752   */\n      pop\n        /* \"#utility.yul\":13366:13752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13758:14029   */\n    tag_195:\n        /* \"#utility.yul\":13888:13891   */\n      0x00\n        /* \"#utility.yul\":13910:14003   */\n      tag_385\n        /* \"#utility.yul\":13999:14002   */\n      dup3\n        /* \"#utility.yul\":13990:13996   */\n      dup5\n        /* \"#utility.yul\":13910:14003   */\n      tag_252\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":13903:14003   */\n      swap2\n      pop\n        /* \"#utility.yul\":14020:14023   */\n      dup2\n        /* \"#utility.yul\":14013:14023   */\n      swap1\n      pop\n        /* \"#utility.yul\":13758:14029   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14035:14214   */\n    tag_253:\n        /* \"#utility.yul\":14175:14206   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":14171:14172   */\n      0x00\n        /* \"#utility.yul\":14163:14169   */\n      dup3\n        /* \"#utility.yul\":14159:14173   */\n      add\n        /* \"#utility.yul\":14152:14207   */\n      mstore\n        /* \"#utility.yul\":14035:14214   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14220:14586   */\n    tag_254:\n        /* \"#utility.yul\":14362:14365   */\n      0x00\n        /* \"#utility.yul\":14383:14450   */\n      tag_388\n        /* \"#utility.yul\":14447:14449   */\n      0x1d\n        /* \"#utility.yul\":14442:14445   */\n      dup4\n        /* \"#utility.yul\":14383:14450   */\n      tag_232\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":14376:14450   */\n      swap2\n      pop\n        /* \"#utility.yul\":14459:14552   */\n      tag_389\n        /* \"#utility.yul\":14548:14551   */\n      dup3\n        /* \"#utility.yul\":14459:14552   */\n      tag_253\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":14577:14579   */\n      0x20\n        /* \"#utility.yul\":14572:14575   */\n      dup3\n        /* \"#utility.yul\":14568:14580   */\n      add\n        /* \"#utility.yul\":14561:14580   */\n      swap1\n      pop\n        /* \"#utility.yul\":14220:14586   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14592:15011   */\n    tag_208:\n        /* \"#utility.yul\":14758:14762   */\n      0x00\n        /* \"#utility.yul\":14796:14798   */\n      0x20\n        /* \"#utility.yul\":14785:14794   */\n      dup3\n        /* \"#utility.yul\":14781:14799   */\n      add\n        /* \"#utility.yul\":14773:14799   */\n      swap1\n      pop\n        /* \"#utility.yul\":14845:14854   */\n      dup2\n        /* \"#utility.yul\":14839:14843   */\n      dup2\n        /* \"#utility.yul\":14835:14855   */\n      sub\n        /* \"#utility.yul\":14831:14832   */\n      0x00\n        /* \"#utility.yul\":14820:14829   */\n      dup4\n        /* \"#utility.yul\":14816:14833   */\n      add\n        /* \"#utility.yul\":14809:14856   */\n      mstore\n        /* \"#utility.yul\":14873:15004   */\n      tag_391\n        /* \"#utility.yul\":14999:15003   */\n      dup2\n        /* \"#utility.yul\":14873:15004   */\n      tag_254\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":14865:15004   */\n      swap1\n      pop\n        /* \"#utility.yul\":14592:15011   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15017:15116   */\n    tag_255:\n        /* \"#utility.yul\":15069:15075   */\n      0x00\n        /* \"#utility.yul\":15103:15108   */\n      dup2\n        /* \"#utility.yul\":15097:15109   */\n      mload\n        /* \"#utility.yul\":15087:15109   */\n      swap1\n      pop\n        /* \"#utility.yul\":15017:15116   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15122:15224   */\n    tag_256:\n        /* \"#utility.yul\":15163:15169   */\n      0x00\n        /* \"#utility.yul\":15214:15216   */\n      0x1f\n        /* \"#utility.yul\":15210:15217   */\n      not\n        /* \"#utility.yul\":15205:15207   */\n      0x1f\n        /* \"#utility.yul\":15198:15203   */\n      dup4\n        /* \"#utility.yul\":15194:15208   */\n      add\n        /* \"#utility.yul\":15190:15218   */\n      and\n        /* \"#utility.yul\":15180:15218   */\n      swap1\n      pop\n        /* \"#utility.yul\":15122:15224   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15230:15607   */\n    tag_257:\n        /* \"#utility.yul\":15318:15321   */\n      0x00\n        /* \"#utility.yul\":15346:15385   */\n      tag_395\n        /* \"#utility.yul\":15379:15384   */\n      dup3\n        /* \"#utility.yul\":15346:15385   */\n      tag_255\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":15401:15472   */\n      tag_396\n        /* \"#utility.yul\":15465:15471   */\n      dup2\n        /* \"#utility.yul\":15460:15463   */\n      dup6\n        /* \"#utility.yul\":15401:15472   */\n      tag_232\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":15394:15472   */\n      swap4\n      pop\n        /* \"#utility.yul\":15481:15546   */\n      tag_397\n        /* \"#utility.yul\":15539:15545   */\n      dup2\n        /* \"#utility.yul\":15534:15537   */\n      dup6\n        /* \"#utility.yul\":15527:15531   */\n      0x20\n        /* \"#utility.yul\":15520:15525   */\n      dup7\n        /* \"#utility.yul\":15516:15532   */\n      add\n        /* \"#utility.yul\":15481:15546   */\n      tag_251\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":15571:15600   */\n      tag_398\n        /* \"#utility.yul\":15593:15599   */\n      dup2\n        /* \"#utility.yul\":15571:15600   */\n      tag_256\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":15566:15569   */\n      dup5\n        /* \"#utility.yul\":15562:15601   */\n      add\n        /* \"#utility.yul\":15555:15601   */\n      swap2\n      pop\n        /* \"#utility.yul\":15322:15607   */\n      pop\n        /* \"#utility.yul\":15230:15607   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15613:15926   */\n    tag_217:\n        /* \"#utility.yul\":15726:15730   */\n      0x00\n        /* \"#utility.yul\":15764:15766   */\n      0x20\n        /* \"#utility.yul\":15753:15762   */\n      dup3\n        /* \"#utility.yul\":15749:15767   */\n      add\n        /* \"#utility.yul\":15741:15767   */\n      swap1\n      pop\n        /* \"#utility.yul\":15813:15822   */\n      dup2\n        /* \"#utility.yul\":15807:15811   */\n      dup2\n        /* \"#utility.yul\":15803:15823   */\n      sub\n        /* \"#utility.yul\":15799:15800   */\n      0x00\n        /* \"#utility.yul\":15788:15797   */\n      dup4\n        /* \"#utility.yul\":15784:15801   */\n      add\n        /* \"#utility.yul\":15777:15824   */\n      mstore\n        /* \"#utility.yul\":15841:15919   */\n      tag_400\n        /* \"#utility.yul\":15914:15918   */\n      dup2\n        /* \"#utility.yul\":15905:15911   */\n      dup5\n        /* \"#utility.yul\":15841:15919   */\n      tag_257\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":15833:15919   */\n      swap1\n      pop\n        /* \"#utility.yul\":15613:15926   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122083cdc3b5f6eeb3dd4de0bc98f1853b1b017d9234b1370288b36e36566d48b39b64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_849": {
									"entryPoint": 220,
									"id": 849,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 228,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405273816ac81f0b32453153721a4ed8d223d6d560643b600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550730582955206bfaa4ee8abbee39d2f6a7f4dc6c365600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156100ba57600080fd5b506100d76100cc6100dc60201b60201c565b6100e460201b60201c565b6101a8565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611c0c806101b76000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c578063b790a77b11610066578063b790a77b146101fb578063c8f72c8414610217578063cca3e83214610221578063f2fde38b14610251576100ea565b8063715018a6146101b75780638da5cb5b146101c1578063aa0d97b3146101df576100ea565b806324d7806c116100c857806324d7806c1461014557806362d91855146101755780636d101d5014610191578063704802751461019b576100ea565b806303974908146100ef57806304dd06f51461010b5780632096525514610127575b600080fd5b61010960048036038101906101049190611453565b61026d565b005b61012560048036038101906101209190611493565b610387565b005b61012f6104d2565b60405161013c91906114e2565b60405180910390f35b61015f600480360381019061015a91906114fd565b61056a565b60405161016c9190611545565b60405180910390f35b61018f600480360381019061018a91906114fd565b6105c0565b005b610199610623565b005b6101b560048036038101906101b091906114fd565b61078e565b005b6101bf6107f0565b005b6101c9610804565b6040516101d6919061156f565b60405180910390f35b6101f960048036038101906101f49190611453565b61082d565b005b61021560048036038101906102109190611453565b610947565b005b61021f610a5f565b005b61023b600480360381019061023691906114fd565b610bca565b60405161024891906114e2565b60405180910390f35b61026b600480360381019061026691906114fd565b610c6f565b005b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166102f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f0906115e7565b60405180910390fd5b610348308383600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610cf2909392919063ffffffff16565b7fa02aba7174f1597e7e78b2ca72d80b37118bfe8012ad5469728b1df72bbf2ac130838360405161037b93929190611607565b60405180910390a15050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610413576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040a906115e7565b60405180910390fd5b7f33f0944345b567437b59121ec49e61eac9ab862442c86dece3bf1d1223f485c4828260405161044492919061163e565b60405180910390a181600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166336ffc86d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610541573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610565919061167c565b905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6105c8610d7b565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166106af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a6906115e7565b60405180910390fd5b61078c30600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166336ffc86d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610720573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610744919061167c565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610df99092919063ffffffff16565b565b610796610d7b565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6107f8610d7b565b6108026000610f48565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166108b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b0906115e7565b60405180910390fd5b610908823083600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610cf2909392919063ffffffff16565b7f160ffcaa807f78c8b4983836e2396338d073e75695ac448aa0b5e4a75b210b1d82308360405161093b93929190611607565b60405180910390a15050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166109d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ca906115e7565b60405180910390fd5b610a22308383600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610cf2909392919063ffffffff16565b7faf5775a6886f31b3abd4f2379c3da25be665d67d744212488d3a7734cbece4e34742604051610a539291906116a9565b60405180910390a15050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610aeb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae2906115e7565b60405180910390fd5b610bc830600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166336ffc86d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b80919061167c565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661100c9092919063ffffffff16565b565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b8152600401610c27919061156f565b602060405180830381865afa158015610c44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c68919061167c565b9050919050565b610c77610d7b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ce6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cdd90611744565b60405180910390fd5b610cef81610f48565b50565b610d75846323b872dd60e01b858585604051602401610d1393929190611607565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061111e565b50505050565b610d836111e5565b73ffffffffffffffffffffffffffffffffffffffff16610da1610804565b73ffffffffffffffffffffffffffffffffffffffff1614610df7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dee906117b0565b60405180910390fd5b565b6000811480610e83575060008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b8152600401610e4092919061163e565b602060405180830381865afa158015610e5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e81919061167c565b145b610ec2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb990611842565b60405180910390fd5b610f438363095ea7b360e01b8484604051602401610ee1929190611862565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061111e565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000818473ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30866040518363ffffffff1660e01b815260040161104a92919061163e565b602060405180830381865afa158015611067573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108b919061167c565b61109591906118ba565b90506111188463095ea7b360e01b85846040516024016110b6929190611862565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061111e565b50505050565b6000611180826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166111ed9092919063ffffffff16565b90506000815111156111e057808060200190518101906111a0919061191a565b6111df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111d6906119b9565b60405180910390fd5b5b505050565b600033905090565b60606111fc8484600085611205565b90509392505050565b60608247101561124a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124190611a4b565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516112739190611adc565b60006040518083038185875af1925050503d80600081146112b0576040519150601f19603f3d011682016040523d82523d6000602084013e6112b5565b606091505b50915091506112c6878383876112d2565b92505050949350505050565b6060831561133457600083510361132c576112ec85611347565b61132b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161132290611b3f565b60405180910390fd5b5b82905061133f565b61133e838361136a565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008251111561137d5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113b19190611bb4565b60405180910390fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113ea826113bf565b9050919050565b6113fa816113df565b811461140557600080fd5b50565b600081359050611417816113f1565b92915050565b6000819050919050565b6114308161141d565b811461143b57600080fd5b50565b60008135905061144d81611427565b92915050565b6000806040838503121561146a576114696113ba565b5b600061147885828601611408565b92505060206114898582860161143e565b9150509250929050565b600080604083850312156114aa576114a96113ba565b5b60006114b885828601611408565b92505060206114c985828601611408565b9150509250929050565b6114dc8161141d565b82525050565b60006020820190506114f760008301846114d3565b92915050565b600060208284031215611513576115126113ba565b5b600061152184828501611408565b91505092915050565b60008115159050919050565b61153f8161152a565b82525050565b600060208201905061155a6000830184611536565b92915050565b611569816113df565b82525050565b60006020820190506115846000830184611560565b92915050565b600082825260208201905092915050565b7f4f6e6c792061646d696e2063616e2063616c6c20697400000000000000000000600082015250565b60006115d160168361158a565b91506115dc8261159b565b602082019050919050565b60006020820190508181036000830152611600816115c4565b9050919050565b600060608201905061161c6000830186611560565b6116296020830185611560565b61163660408301846114d3565b949350505050565b60006040820190506116536000830185611560565b6116606020830184611560565b9392505050565b60008151905061167681611427565b92915050565b600060208284031215611692576116916113ba565b5b60006116a084828501611667565b91505092915050565b60006040820190506116be60008301856114d3565b6116cb60208301846114d3565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061172e60268361158a565b9150611739826116d2565b604082019050919050565b6000602082019050818103600083015261175d81611721565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061179a60208361158a565b91506117a582611764565b602082019050919050565b600060208201905081810360008301526117c98161178d565b9050919050565b7f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60008201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000602082015250565b600061182c60368361158a565b9150611837826117d0565b604082019050919050565b6000602082019050818103600083015261185b8161181f565b9050919050565b60006040820190506118776000830185611560565b61188460208301846114d3565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006118c58261141d565b91506118d08361141d565b92508282019050808211156118e8576118e761188b565b5b92915050565b6118f78161152a565b811461190257600080fd5b50565b600081519050611914816118ee565b92915050565b6000602082840312156119305761192f6113ba565b5b600061193e84828501611905565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006119a3602a8361158a565b91506119ae82611947565b604082019050919050565b600060208201905081810360008301526119d281611996565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000611a3560268361158a565b9150611a40826119d9565b604082019050919050565b60006020820190508181036000830152611a6481611a28565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015611a9f578082015181840152602081019050611a84565b60008484015250505050565b6000611ab682611a6b565b611ac08185611a76565b9350611ad0818560208601611a81565b80840191505092915050565b6000611ae88284611aab565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000611b29601d8361158a565b9150611b3482611af3565b602082019050919050565b60006020820190508181036000830152611b5881611b1c565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b6000611b8682611b5f565b611b90818561158a565b9350611ba0818560208601611a81565b611ba981611b6a565b840191505092915050565b60006020820190508181036000830152611bce8184611b7b565b90509291505056fea264697066735822122083cdc3b5f6eeb3dd4de0bc98f1853b1b017d9234b1370288b36e36566d48b39b64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0x816AC81F0B32453153721A4ED8D223D6D560643B PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x582955206BFAA4EE8ABBEE39D2F6A7F4DC6C365 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0xBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD7 PUSH2 0xCC PUSH2 0xDC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xE4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1A8 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1C0C DUP1 PUSH2 0x1B7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xB790A77B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB790A77B EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0xC8F72C84 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0xCCA3E832 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x251 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xAA0D97B3 EQ PUSH2 0x1DF JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x24D7806C GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x62D91855 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x6D101D50 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x70480275 EQ PUSH2 0x19B JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x3974908 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x4DD06F5 EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x20965255 EQ PUSH2 0x127 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x1453 JUMP JUMPDEST PUSH2 0x26D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x125 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12F PUSH2 0x4D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x14E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x14FD JUMP JUMPDEST PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x14FD JUMP JUMPDEST PUSH2 0x5C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x199 PUSH2 0x623 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x14FD JUMP JUMPDEST PUSH2 0x78E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BF PUSH2 0x7F0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C9 PUSH2 0x804 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x156F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x1453 JUMP JUMPDEST PUSH2 0x82D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x1453 JUMP JUMPDEST PUSH2 0x947 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21F PUSH2 0xA5F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x14FD JUMP JUMPDEST PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x14E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x14FD JUMP JUMPDEST PUSH2 0xC6F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F0 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x348 ADDRESS DUP4 DUP4 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCF2 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0xA02ABA7174F1597E7E78B2CA72D80B37118BFE8012AD5469728B1DF72BBF2AC1 ADDRESS DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x37B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x413 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40A SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x33F0944345B567437B59121EC49E61EAC9AB862442C86DECE3BF1D1223F485C4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x444 SWAP3 SWAP2 SWAP1 PUSH2 0x163E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x36FFC86D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x541 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x565 SWAP2 SWAP1 PUSH2 0x167C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5C8 PUSH2 0xD7B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x6AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A6 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x78C ADDRESS PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x36FFC86D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x720 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x744 SWAP2 SWAP1 PUSH2 0x167C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDF9 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x796 PUSH2 0xD7B JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x7F8 PUSH2 0xD7B JUMP JUMPDEST PUSH2 0x802 PUSH1 0x0 PUSH2 0xF48 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x8B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B0 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x908 DUP3 ADDRESS DUP4 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCF2 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x160FFCAA807F78C8B4983836E2396338D073E75695AC448AA0B5E4A75B210B1D DUP3 ADDRESS DUP4 PUSH1 0x40 MLOAD PUSH2 0x93B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x9D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CA SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA22 ADDRESS DUP4 DUP4 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCF2 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0xAF5775A6886F31B3ABD4F2379C3DA25BE665D67D744212488D3A7734CBECE4E3 SELFBALANCE TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xA53 SWAP3 SWAP2 SWAP1 PUSH2 0x16A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xAEB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBC8 ADDRESS PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x36FFC86D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB5C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB80 SWAP2 SWAP1 PUSH2 0x167C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x100C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC27 SWAP2 SWAP1 PUSH2 0x156F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC44 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC68 SWAP2 SWAP1 PUSH2 0x167C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC77 PUSH2 0xD7B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCE6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDD SWAP1 PUSH2 0x1744 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCEF DUP2 PUSH2 0xF48 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xD75 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xD13 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1607 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x111E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xD83 PUSH2 0x11E5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDA1 PUSH2 0x804 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDEE SWAP1 PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0xE83 JUMPI POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE40 SWAP3 SWAP2 SWAP1 PUSH2 0x163E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE5D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE81 SWAP2 SWAP1 PUSH2 0x167C JUMP JUMPDEST EQ JUMPDEST PUSH2 0xEC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB9 SWAP1 PUSH2 0x1842 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF43 DUP4 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xEE1 SWAP3 SWAP2 SWAP1 PUSH2 0x1862 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x111E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104A SWAP3 SWAP2 SWAP1 PUSH2 0x163E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1067 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x108B SWAP2 SWAP1 PUSH2 0x167C JUMP JUMPDEST PUSH2 0x1095 SWAP2 SWAP1 PUSH2 0x18BA JUMP JUMPDEST SWAP1 POP PUSH2 0x1118 DUP5 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x10B6 SWAP3 SWAP2 SWAP1 PUSH2 0x1862 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x111E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1180 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11ED SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x11E0 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x11A0 SWAP2 SWAP1 PUSH2 0x191A JUMP JUMPDEST PUSH2 0x11DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D6 SWAP1 PUSH2 0x19B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x11FC DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1205 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x124A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1241 SWAP1 PUSH2 0x1A4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1273 SWAP2 SWAP1 PUSH2 0x1ADC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12B0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12B5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x12C6 DUP8 DUP4 DUP4 DUP8 PUSH2 0x12D2 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1334 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x132C JUMPI PUSH2 0x12EC DUP6 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0x132B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1322 SWAP1 PUSH2 0x1B3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x133F JUMP JUMPDEST PUSH2 0x133E DUP4 DUP4 PUSH2 0x136A JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x137D JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B1 SWAP2 SWAP1 PUSH2 0x1BB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13EA DUP3 PUSH2 0x13BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13FA DUP2 PUSH2 0x13DF JUMP JUMPDEST DUP2 EQ PUSH2 0x1405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1417 DUP2 PUSH2 0x13F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1430 DUP2 PUSH2 0x141D JUMP JUMPDEST DUP2 EQ PUSH2 0x143B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x144D DUP2 PUSH2 0x1427 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x146A JUMPI PUSH2 0x1469 PUSH2 0x13BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1478 DUP6 DUP3 DUP7 ADD PUSH2 0x1408 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1489 DUP6 DUP3 DUP7 ADD PUSH2 0x143E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14AA JUMPI PUSH2 0x14A9 PUSH2 0x13BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14B8 DUP6 DUP3 DUP7 ADD PUSH2 0x1408 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14C9 DUP6 DUP3 DUP7 ADD PUSH2 0x1408 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x14DC DUP2 PUSH2 0x141D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14F7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1513 JUMPI PUSH2 0x1512 PUSH2 0x13BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1521 DUP5 DUP3 DUP6 ADD PUSH2 0x1408 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x153F DUP2 PUSH2 0x152A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x155A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1536 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1569 DUP2 PUSH2 0x13DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1584 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1560 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E2063616E2063616C6C20697400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15D1 PUSH1 0x16 DUP4 PUSH2 0x158A JUMP JUMPDEST SWAP2 POP PUSH2 0x15DC DUP3 PUSH2 0x159B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1600 DUP2 PUSH2 0x15C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x161C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1560 JUMP JUMPDEST PUSH2 0x1629 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1560 JUMP JUMPDEST PUSH2 0x1636 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14D3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1653 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1560 JUMP JUMPDEST PUSH2 0x1660 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1560 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1676 DUP2 PUSH2 0x1427 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1692 JUMPI PUSH2 0x1691 PUSH2 0x13BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16A0 DUP5 DUP3 DUP6 ADD PUSH2 0x1667 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x16BE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x14D3 JUMP JUMPDEST PUSH2 0x16CB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14D3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x172E PUSH1 0x26 DUP4 PUSH2 0x158A JUMP JUMPDEST SWAP2 POP PUSH2 0x1739 DUP3 PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x175D DUP2 PUSH2 0x1721 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x179A PUSH1 0x20 DUP4 PUSH2 0x158A JUMP JUMPDEST SWAP2 POP PUSH2 0x17A5 DUP3 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17C9 DUP2 PUSH2 0x178D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x182C PUSH1 0x36 DUP4 PUSH2 0x158A JUMP JUMPDEST SWAP2 POP PUSH2 0x1837 DUP3 PUSH2 0x17D0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x185B DUP2 PUSH2 0x181F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1877 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1560 JUMP JUMPDEST PUSH2 0x1884 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14D3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18C5 DUP3 PUSH2 0x141D JUMP JUMPDEST SWAP2 POP PUSH2 0x18D0 DUP4 PUSH2 0x141D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x18E8 JUMPI PUSH2 0x18E7 PUSH2 0x188B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18F7 DUP2 PUSH2 0x152A JUMP JUMPDEST DUP2 EQ PUSH2 0x1902 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1914 DUP2 PUSH2 0x18EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1930 JUMPI PUSH2 0x192F PUSH2 0x13BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x193E DUP5 DUP3 DUP6 ADD PUSH2 0x1905 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19A3 PUSH1 0x2A DUP4 PUSH2 0x158A JUMP JUMPDEST SWAP2 POP PUSH2 0x19AE DUP3 PUSH2 0x1947 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19D2 DUP2 PUSH2 0x1996 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A35 PUSH1 0x26 DUP4 PUSH2 0x158A JUMP JUMPDEST SWAP2 POP PUSH2 0x1A40 DUP3 PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A64 DUP2 PUSH2 0x1A28 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A9F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A84 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AB6 DUP3 PUSH2 0x1A6B JUMP JUMPDEST PUSH2 0x1AC0 DUP2 DUP6 PUSH2 0x1A76 JUMP JUMPDEST SWAP4 POP PUSH2 0x1AD0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A81 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AE8 DUP3 DUP5 PUSH2 0x1AAB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B29 PUSH1 0x1D DUP4 PUSH2 0x158A JUMP JUMPDEST SWAP2 POP PUSH2 0x1B34 DUP3 PUSH2 0x1AF3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B58 DUP2 PUSH2 0x1B1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B86 DUP3 PUSH2 0x1B5F JUMP JUMPDEST PUSH2 0x1B90 DUP2 DUP6 PUSH2 0x158A JUMP JUMPDEST SWAP4 POP PUSH2 0x1BA0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A81 JUMP JUMPDEST PUSH2 0x1BA9 DUP2 PUSH2 0x1B6A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BCE DUP2 DUP5 PUSH2 0x1B7B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 0xCD 0xC3 0xB5 0xF6 0xEE 0xB3 0xDD 0x4D 0xE0 0xBC SWAP9 CALL DUP6 EXTCODESIZE SHL ADD PUSH30 0x9234B1370288B36E36566D48B39B64736F6C634300081100330000000000 ",
							"sourceMap": "245:1938:7:-:0;;;354:42;308:90;;;;;;;;;;;;;;;;;;;;456:42;405:95;;;;;;;;;;;;;;;;;;;;245:1938;;;;;;;;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;245:1938:7;;640:96:5;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;245:1938:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1187": {
									"entryPoint": 1571,
									"id": 1187,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_balanceOf_1169": {
									"entryPoint": 3018,
									"id": 1169,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_callOptionalReturn_506": {
									"entryPoint": 4382,
									"id": 506,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 3451,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_increaseAllowance_1205": {
									"entryPoint": 2655,
									"id": 1205,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_initToken_1065": {
									"entryPoint": 903,
									"id": 1065,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_849": {
									"entryPoint": 4581,
									"id": 849,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_836": {
									"entryPoint": 4970,
									"id": 836,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_stake_1095": {
									"entryPoint": 2093,
									"id": 1095,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 3912,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unStake_1125": {
									"entryPoint": 621,
									"id": 1125,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_withdraw_1156": {
									"entryPoint": 2375,
									"id": 1156,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@addAdmin_894": {
									"entryPoint": 1934,
									"id": 894,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@delAdmin_908": {
									"entryPoint": 1472,
									"id": 908,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionCallWithValue_661": {
									"entryPoint": 4613,
									"id": 661,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_597": {
									"entryPoint": 4589,
									"id": 597,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getValue_1215": {
									"entryPoint": 1234,
									"id": 1215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isAdmin_920": {
									"entryPoint": 1386,
									"id": 920,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_525": {
									"entryPoint": 4935,
									"id": 525,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": 2052,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 2032,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeApprove_328": {
									"entryPoint": 3577,
									"id": 328,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeIncreaseAllowance_364": {
									"entryPoint": 4108,
									"id": 364,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_284": {
									"entryPoint": 3314,
									"id": 284,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 3183,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_792": {
									"entryPoint": 4818,
									"id": 792,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5128,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5182,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 5735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6827,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5921,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_288424b7e28d798860575cd873ad806bb3799a709ef51f2d7e96fe8aa4697b69_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6696,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 5694,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5639,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6242,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7092,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5956,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_288424b7e28d798860575cd873ad806bb3799a709ef51f2d7e96fe8aa4697b69__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6064,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6975,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5801,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 6763,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5087,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5055,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6785,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 6283,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5050,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 5842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_288424b7e28d798860575cd873ad806bb3799a709ef51f2d7e96fe8aa4697b69": {
									"entryPoint": 5531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 6617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 5988,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 6899,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 6471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25": {
									"entryPoint": 6096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5105,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15929:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:9",
														"type": ""
													}
												],
												"src": "466:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:9"
															},
															"nodeType": "YulIf",
															"src": "621:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:9",
														"type": ""
													}
												],
												"src": "568:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:9",
														"type": ""
													}
												],
												"src": "696:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:9",
														"type": ""
													}
												],
												"src": "841:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:9"
															},
															"nodeType": "YulIf",
															"src": "977:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:9",
														"type": ""
													}
												],
												"src": "924:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:9",
														"type": ""
													}
												],
												"src": "1052:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1280:391:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1326:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:32:9"
															},
															"nodeType": "YulIf",
															"src": "1290:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "1419:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1463:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1546:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1591:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1242:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1253:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1265:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1273:6:9",
														"type": ""
													}
												],
												"src": "1197:474:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1760:391:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1806:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1808:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1808:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1808:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1781:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1790:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1777:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1777:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1802:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1773:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1773:32:9"
															},
															"nodeType": "YulIf",
															"src": "1770:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "1899:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1914:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1918:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1943:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1978:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1989:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1974:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1974:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1998:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1953:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1953:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1943:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2026:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2041:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2055:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2045:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2071:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2106:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2117:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2102:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2102:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2126:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2081:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2081:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2071:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1722:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1733:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1745:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1753:6:9",
														"type": ""
													}
												],
												"src": "1677:474:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2222:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2239:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2262:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2244:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2244:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2232:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2232:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2232:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2210:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2217:3:9",
														"type": ""
													}
												],
												"src": "2157:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2379:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2389:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2401:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2412:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2397:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2397:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2389:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2469:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2482:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2493:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2478:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2478:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2425:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2425:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2425:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2351:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2363:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2374:4:9",
														"type": ""
													}
												],
												"src": "2281:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2575:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2621:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2623:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2623:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2623:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2596:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2605:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2592:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2592:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2617:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2588:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2588:32:9"
															},
															"nodeType": "YulIf",
															"src": "2585:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "2714:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2729:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2743:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2733:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2758:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2793:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2804:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2789:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2789:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2813:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2768:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2768:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2758:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2545:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2556:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2568:6:9",
														"type": ""
													}
												],
												"src": "2509:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2886:48:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2896:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2921:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2914:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2914:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2907:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2907:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2896:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2868:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2878:7:9",
														"type": ""
													}
												],
												"src": "2844:90:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2999:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3016:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3036:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3021:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3021:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3009:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3009:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3009:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2987:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2994:3:9",
														"type": ""
													}
												],
												"src": "2940:109:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3147:118:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3157:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3169:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3180:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3165:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3165:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3157:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3231:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3244:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3255:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3240:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3240:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3193:37:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3193:65:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3193:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3119:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3131:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3142:4:9",
														"type": ""
													}
												],
												"src": "3055:210:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3336:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3353:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3376:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3358:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3358:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3346:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3346:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3346:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3324:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3331:3:9",
														"type": ""
													}
												],
												"src": "3271:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3493:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3503:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3515:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3526:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3511:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3511:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3503:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3583:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3596:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3607:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3592:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3592:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3539:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3539:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3539:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3465:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3477:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3488:4:9",
														"type": ""
													}
												],
												"src": "3395:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3719:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3736:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3741:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3729:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3729:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3729:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3757:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3776:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3781:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3772:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3772:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3757:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3691:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3696:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3707:11:9",
														"type": ""
													}
												],
												"src": "3623:169:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3904:66:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3926:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3934:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3922:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3922:14:9"
																	},
																	{
																		"hexValue": "4f6e6c792061646d696e2063616e2063616c6c206974",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3938:24:9",
																		"type": "",
																		"value": "Only admin can call it"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3915:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3915:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3915:48:9"
														}
													]
												},
												"name": "store_literal_in_memory_288424b7e28d798860575cd873ad806bb3799a709ef51f2d7e96fe8aa4697b69",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3896:6:9",
														"type": ""
													}
												],
												"src": "3798:172:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4122:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4132:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4198:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4203:2:9",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4139:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4139:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4132:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4304:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_288424b7e28d798860575cd873ad806bb3799a709ef51f2d7e96fe8aa4697b69",
																	"nodeType": "YulIdentifier",
																	"src": "4215:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4215:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4215:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4317:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4328:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4333:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4324:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4324:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4317:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_288424b7e28d798860575cd873ad806bb3799a709ef51f2d7e96fe8aa4697b69_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4110:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4118:3:9",
														"type": ""
													}
												],
												"src": "3976:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4519:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4529:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4541:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4552:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4537:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4537:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4529:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4576:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4587:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4572:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4572:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4595:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4601:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4591:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4591:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4565:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4565:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4565:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4621:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4755:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_288424b7e28d798860575cd873ad806bb3799a709ef51f2d7e96fe8aa4697b69_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4629:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4629:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4621:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_288424b7e28d798860575cd873ad806bb3799a709ef51f2d7e96fe8aa4697b69__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4499:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4514:4:9",
														"type": ""
													}
												],
												"src": "4348:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4927:288:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4937:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4949:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4960:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4945:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4945:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4937:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5017:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5030:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5041:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5026:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5026:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4973:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4973:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4973:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5098:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5111:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5122:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5107:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5107:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5054:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5054:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5054:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5180:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5193:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5204:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5189:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5189:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5136:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5136:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5136:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4883:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4895:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4903:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4911:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4922:4:9",
														"type": ""
													}
												],
												"src": "4773:442:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5347:206:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5357:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5369:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5380:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5365:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5365:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5357:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5437:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5450:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5461:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5446:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5446:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5393:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5393:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5393:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5518:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5531:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5542:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5527:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5527:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5474:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5474:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5474:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5311:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5323:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5331:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5342:4:9",
														"type": ""
													}
												],
												"src": "5221:332:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5622:80:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5632:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5647:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5641:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5641:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5632:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5690:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5663:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5663:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5663:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5600:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5608:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5616:5:9",
														"type": ""
													}
												],
												"src": "5559:143:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5785:274:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5831:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5833:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5833:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5833:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5806:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5815:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5802:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5802:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5827:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5798:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5798:32:9"
															},
															"nodeType": "YulIf",
															"src": "5795:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "5924:128:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5939:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5953:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5943:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5968:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6014:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6025:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6010:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6010:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6034:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5978:31:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5978:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5968:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5755:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5766:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5778:6:9",
														"type": ""
													}
												],
												"src": "5708:351:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6191:206:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6201:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6213:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6224:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6209:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6209:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6201:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6281:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6294:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6305:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6290:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6290:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6237:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6237:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6237:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6362:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6375:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6386:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6371:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6371:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6318:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6318:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6318:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6155:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6167:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6175:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6186:4:9",
														"type": ""
													}
												],
												"src": "6065:332:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6509:119:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6531:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6539:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6527:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6527:14:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6543:34:9",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6520:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6520:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6520:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6599:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6607:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6595:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6595:15:9"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6612:8:9",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6588:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6588:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6588:33:9"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6501:6:9",
														"type": ""
													}
												],
												"src": "6403:225:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6780:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6790:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6856:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6861:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6797:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6797:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6790:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6962:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "6873:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6873:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6873:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6975:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6986:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6991:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6982:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6982:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6975:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6768:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6776:3:9",
														"type": ""
													}
												],
												"src": "6634:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7177:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7187:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7199:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7210:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7195:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7195:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7187:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7234:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7245:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7230:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7230:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7253:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7259:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7249:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7249:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7223:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7223:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7223:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7279:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7413:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7287:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7287:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7279:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7157:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7172:4:9",
														"type": ""
													}
												],
												"src": "7006:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7537:76:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7559:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7567:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7555:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7555:14:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7571:34:9",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7548:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7548:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7548:58:9"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7529:6:9",
														"type": ""
													}
												],
												"src": "7431:182:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7765:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7775:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7841:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7846:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7782:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7782:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7775:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7947:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "7858:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7858:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7858:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7960:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7971:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7976:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7967:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7967:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7960:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7753:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7761:3:9",
														"type": ""
													}
												],
												"src": "7619:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8162:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8172:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8184:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8195:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8180:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8180:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8172:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8219:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8230:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8215:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8215:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8238:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8244:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8234:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8234:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8208:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8208:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8208:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8264:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8398:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8272:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8272:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8264:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8142:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8157:4:9",
														"type": ""
													}
												],
												"src": "7991:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8522:135:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8544:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8552:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8540:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8540:14:9"
																	},
																	{
																		"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8556:34:9",
																		"type": "",
																		"value": "SafeERC20: approve from non-zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8533:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8533:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8533:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8612:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8620:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8608:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8608:15:9"
																	},
																	{
																		"hexValue": "20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8625:24:9",
																		"type": "",
																		"value": " to non-zero allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8601:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8601:49:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8601:49:9"
														}
													]
												},
												"name": "store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8514:6:9",
														"type": ""
													}
												],
												"src": "8416:241:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8809:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8819:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8885:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8890:2:9",
																		"type": "",
																		"value": "54"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8826:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8826:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8819:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8991:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																	"nodeType": "YulIdentifier",
																	"src": "8902:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8902:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8902:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9004:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9015:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9020:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9011:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9011:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9004:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8797:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8805:3:9",
														"type": ""
													}
												],
												"src": "8663:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9206:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9216:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9228:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9239:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9224:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9224:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9216:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9263:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9274:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9259:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9259:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9282:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9288:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9278:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9278:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9252:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9252:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9252:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9308:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9442:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9316:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9316:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9308:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9186:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9201:4:9",
														"type": ""
													}
												],
												"src": "9035:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9586:206:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9596:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9608:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9619:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9604:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9604:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9596:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9676:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9689:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9700:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9685:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9685:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9632:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9632:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9632:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9757:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9770:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9781:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9766:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9766:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9713:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9713:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9713:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9550:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9562:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9570:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9581:4:9",
														"type": ""
													}
												],
												"src": "9460:332:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9826:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9843:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9846:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9836:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9836:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9836:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9940:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9943:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9933:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9933:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9933:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9964:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9967:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9957:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9957:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9957:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9798:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10028:147:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10038:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10061:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10043:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10043:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10038:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10072:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10095:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10077:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10077:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10072:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10106:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10117:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10120:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10113:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10113:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10106:3:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10146:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10148:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10148:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10148:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10138:1:9"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "10141:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10135:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10135:10:9"
															},
															"nodeType": "YulIf",
															"src": "10132:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10015:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10018:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10024:3:9",
														"type": ""
													}
												],
												"src": "9984:191:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10221:76:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10275:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10284:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10287:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10277:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10277:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10277:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10244:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10266:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "10251:14:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10251:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10241:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10241:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10234:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10234:40:9"
															},
															"nodeType": "YulIf",
															"src": "10231:60:9"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10214:5:9",
														"type": ""
													}
												],
												"src": "10181:116:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10363:77:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10373:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10388:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10382:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10382:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "10373:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10428:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "10404:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10404:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10404:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10341:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10349:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10357:5:9",
														"type": ""
													}
												],
												"src": "10303:137:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10520:271:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10566:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10568:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10568:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10568:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10541:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10550:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10537:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10537:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10562:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10533:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10533:32:9"
															},
															"nodeType": "YulIf",
															"src": "10530:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "10659:125:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10674:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10688:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10678:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10703:71:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10746:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10757:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10742:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10742:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10766:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "10713:28:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10713:61:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10703:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10490:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10501:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10513:6:9",
														"type": ""
													}
												],
												"src": "10446:345:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10903:123:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10925:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10933:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10921:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10921:14:9"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10937:34:9",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10914:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10914:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10914:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10993:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11001:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10989:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10989:15:9"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11006:12:9",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10982:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10982:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10982:37:9"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10895:6:9",
														"type": ""
													}
												],
												"src": "10797:229:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11178:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11188:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11254:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11259:2:9",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11195:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11195:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11188:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11360:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "11271:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11271:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11271:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11373:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11384:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11389:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11380:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11380:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11373:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11166:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11174:3:9",
														"type": ""
													}
												],
												"src": "11032:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11575:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11585:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11597:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11608:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11593:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11593:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11585:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11632:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11643:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11628:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11628:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11651:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11657:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11647:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11647:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11621:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11621:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11621:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11677:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11811:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11685:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11685:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11677:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11555:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11570:4:9",
														"type": ""
													}
												],
												"src": "11404:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11935:119:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11957:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11965:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11953:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11953:14:9"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11969:34:9",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11946:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11946:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11946:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12025:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12033:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12021:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12021:15:9"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12038:8:9",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12014:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12014:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12014:33:9"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11927:6:9",
														"type": ""
													}
												],
												"src": "11829:225:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12206:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12216:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12282:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12287:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12223:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12223:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12216:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12388:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "12299:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12299:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12299:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12401:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12412:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12417:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12408:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12408:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12401:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12194:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12202:3:9",
														"type": ""
													}
												],
												"src": "12060:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12603:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12613:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12625:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12636:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12621:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12621:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12613:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12660:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12671:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12656:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12656:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12679:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12685:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12675:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12675:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12649:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12649:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12649:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12705:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12839:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12713:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12713:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12705:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12583:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12598:4:9",
														"type": ""
													}
												],
												"src": "12432:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12915:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12926:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12942:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12936:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12936:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12926:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12898:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12908:6:9",
														"type": ""
													}
												],
												"src": "12857:98:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13074:34:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13084:18:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "13099:3:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "13084:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13046:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13051:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "13062:11:9",
														"type": ""
													}
												],
												"src": "12961:147:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13176:184:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13186:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "13195:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "13190:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13255:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "13280:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "13285:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "13276:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13276:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "13299:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "13304:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "13295:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "13295:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "13289:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13289:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13269:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13269:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13269:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "13216:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13219:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13213:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13213:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "13227:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13229:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "13238:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13241:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "13234:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13234:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "13229:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "13209:3:9",
																"statements": []
															},
															"src": "13205:113:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "13338:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "13343:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13334:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13334:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13352:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13327:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13327:27:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13327:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "13158:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "13163:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13168:6:9",
														"type": ""
													}
												],
												"src": "13114:246:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13474:278:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13484:52:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13530:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13498:31:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13498:38:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "13488:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13545:95:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13628:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13633:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13552:75:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13552:88:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13545:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13688:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13695:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13684:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13684:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13702:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13707:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "13649:34:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13649:65:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13649:65:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13723:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13734:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13739:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13730:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13730:16:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13723:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13455:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13462:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13470:3:9",
														"type": ""
													}
												],
												"src": "13366:386:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13892:137:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13903:100:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13990:6:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13999:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13910:79:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13910:93:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13903:3:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14013:10:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "14020:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14013:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13871:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13877:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13888:3:9",
														"type": ""
													}
												],
												"src": "13758:271:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14141:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14163:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14171:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14159:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14159:14:9"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14175:31:9",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14152:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14152:55:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14152:55:9"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14133:6:9",
														"type": ""
													}
												],
												"src": "14035:179:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14366:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14376:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14442:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14447:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14383:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14383:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14376:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14548:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "14459:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14459:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14459:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14561:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14572:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14577:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14568:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14568:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14561:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14354:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14362:3:9",
														"type": ""
													}
												],
												"src": "14220:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14763:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14773:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14785:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14796:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14781:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14781:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14773:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14820:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14831:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14816:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14816:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14839:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14845:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14835:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14835:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14809:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14809:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14809:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14865:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14999:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14873:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14873:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14865:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14743:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14758:4:9",
														"type": ""
													}
												],
												"src": "14592:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15076:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15087:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15103:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15097:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15097:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "15087:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15059:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15069:6:9",
														"type": ""
													}
												],
												"src": "15017:99:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15170:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15180:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15198:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15205:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15194:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15194:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15214:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "15210:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15210:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15190:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15190:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "15180:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15153:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "15163:6:9",
														"type": ""
													}
												],
												"src": "15122:102:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15322:285:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15332:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15379:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "15346:32:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15346:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15336:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15394:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15460:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15465:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15401:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15401:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15394:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15520:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15527:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15516:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15516:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15534:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15539:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "15481:34:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15481:65:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15481:65:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15555:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15566:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "15593:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "15571:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15571:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15562:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15562:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15555:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15303:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15310:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15318:3:9",
														"type": ""
													}
												],
												"src": "15230:377:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15731:195:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15741:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15753:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15764:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15749:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15749:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15741:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15788:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15799:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15784:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15784:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15807:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15813:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15803:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15803:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15777:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15777:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15777:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15833:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15905:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15914:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15841:63:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15841:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15833:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15703:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15715:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15726:4:9",
														"type": ""
													}
												],
												"src": "15613:313:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_288424b7e28d798860575cd873ad806bb3799a709ef51f2d7e96fe8aa4697b69(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only admin can call it\")\n\n    }\n\n    function abi_encode_t_stringliteral_288424b7e28d798860575cd873ad806bb3799a709ef51f2d7e96fe8aa4697b69_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_288424b7e28d798860575cd873ad806bb3799a709ef51f2d7e96fe8aa4697b69(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_288424b7e28d798860575cd873ad806bb3799a709ef51f2d7e96fe8aa4697b69__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_288424b7e28d798860575cd873ad806bb3799a709ef51f2d7e96fe8aa4697b69_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: approve from non-zero\")\n\n        mstore(add(memPtr, 32), \" to non-zero allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 54)\n        store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c578063b790a77b11610066578063b790a77b146101fb578063c8f72c8414610217578063cca3e83214610221578063f2fde38b14610251576100ea565b8063715018a6146101b75780638da5cb5b146101c1578063aa0d97b3146101df576100ea565b806324d7806c116100c857806324d7806c1461014557806362d91855146101755780636d101d5014610191578063704802751461019b576100ea565b806303974908146100ef57806304dd06f51461010b5780632096525514610127575b600080fd5b61010960048036038101906101049190611453565b61026d565b005b61012560048036038101906101209190611493565b610387565b005b61012f6104d2565b60405161013c91906114e2565b60405180910390f35b61015f600480360381019061015a91906114fd565b61056a565b60405161016c9190611545565b60405180910390f35b61018f600480360381019061018a91906114fd565b6105c0565b005b610199610623565b005b6101b560048036038101906101b091906114fd565b61078e565b005b6101bf6107f0565b005b6101c9610804565b6040516101d6919061156f565b60405180910390f35b6101f960048036038101906101f49190611453565b61082d565b005b61021560048036038101906102109190611453565b610947565b005b61021f610a5f565b005b61023b600480360381019061023691906114fd565b610bca565b60405161024891906114e2565b60405180910390f35b61026b600480360381019061026691906114fd565b610c6f565b005b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166102f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f0906115e7565b60405180910390fd5b610348308383600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610cf2909392919063ffffffff16565b7fa02aba7174f1597e7e78b2ca72d80b37118bfe8012ad5469728b1df72bbf2ac130838360405161037b93929190611607565b60405180910390a15050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610413576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040a906115e7565b60405180910390fd5b7f33f0944345b567437b59121ec49e61eac9ab862442c86dece3bf1d1223f485c4828260405161044492919061163e565b60405180910390a181600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166336ffc86d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610541573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610565919061167c565b905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6105c8610d7b565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166106af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a6906115e7565b60405180910390fd5b61078c30600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166336ffc86d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610720573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610744919061167c565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610df99092919063ffffffff16565b565b610796610d7b565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6107f8610d7b565b6108026000610f48565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166108b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b0906115e7565b60405180910390fd5b610908823083600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610cf2909392919063ffffffff16565b7f160ffcaa807f78c8b4983836e2396338d073e75695ac448aa0b5e4a75b210b1d82308360405161093b93929190611607565b60405180910390a15050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166109d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ca906115e7565b60405180910390fd5b610a22308383600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610cf2909392919063ffffffff16565b7faf5775a6886f31b3abd4f2379c3da25be665d67d744212488d3a7734cbece4e34742604051610a539291906116a9565b60405180910390a15050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610aeb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae2906115e7565b60405180910390fd5b610bc830600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166336ffc86d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b80919061167c565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661100c9092919063ffffffff16565b565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b8152600401610c27919061156f565b602060405180830381865afa158015610c44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c68919061167c565b9050919050565b610c77610d7b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ce6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cdd90611744565b60405180910390fd5b610cef81610f48565b50565b610d75846323b872dd60e01b858585604051602401610d1393929190611607565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061111e565b50505050565b610d836111e5565b73ffffffffffffffffffffffffffffffffffffffff16610da1610804565b73ffffffffffffffffffffffffffffffffffffffff1614610df7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dee906117b0565b60405180910390fd5b565b6000811480610e83575060008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b8152600401610e4092919061163e565b602060405180830381865afa158015610e5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e81919061167c565b145b610ec2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb990611842565b60405180910390fd5b610f438363095ea7b360e01b8484604051602401610ee1929190611862565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061111e565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000818473ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30866040518363ffffffff1660e01b815260040161104a92919061163e565b602060405180830381865afa158015611067573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108b919061167c565b61109591906118ba565b90506111188463095ea7b360e01b85846040516024016110b6929190611862565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061111e565b50505050565b6000611180826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166111ed9092919063ffffffff16565b90506000815111156111e057808060200190518101906111a0919061191a565b6111df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111d6906119b9565b60405180910390fd5b5b505050565b600033905090565b60606111fc8484600085611205565b90509392505050565b60608247101561124a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124190611a4b565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516112739190611adc565b60006040518083038185875af1925050503d80600081146112b0576040519150601f19603f3d011682016040523d82523d6000602084013e6112b5565b606091505b50915091506112c6878383876112d2565b92505050949350505050565b6060831561133457600083510361132c576112ec85611347565b61132b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161132290611b3f565b60405180910390fd5b5b82905061133f565b61133e838361136a565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008251111561137d5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113b19190611bb4565b60405180910390fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113ea826113bf565b9050919050565b6113fa816113df565b811461140557600080fd5b50565b600081359050611417816113f1565b92915050565b6000819050919050565b6114308161141d565b811461143b57600080fd5b50565b60008135905061144d81611427565b92915050565b6000806040838503121561146a576114696113ba565b5b600061147885828601611408565b92505060206114898582860161143e565b9150509250929050565b600080604083850312156114aa576114a96113ba565b5b60006114b885828601611408565b92505060206114c985828601611408565b9150509250929050565b6114dc8161141d565b82525050565b60006020820190506114f760008301846114d3565b92915050565b600060208284031215611513576115126113ba565b5b600061152184828501611408565b91505092915050565b60008115159050919050565b61153f8161152a565b82525050565b600060208201905061155a6000830184611536565b92915050565b611569816113df565b82525050565b60006020820190506115846000830184611560565b92915050565b600082825260208201905092915050565b7f4f6e6c792061646d696e2063616e2063616c6c20697400000000000000000000600082015250565b60006115d160168361158a565b91506115dc8261159b565b602082019050919050565b60006020820190508181036000830152611600816115c4565b9050919050565b600060608201905061161c6000830186611560565b6116296020830185611560565b61163660408301846114d3565b949350505050565b60006040820190506116536000830185611560565b6116606020830184611560565b9392505050565b60008151905061167681611427565b92915050565b600060208284031215611692576116916113ba565b5b60006116a084828501611667565b91505092915050565b60006040820190506116be60008301856114d3565b6116cb60208301846114d3565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061172e60268361158a565b9150611739826116d2565b604082019050919050565b6000602082019050818103600083015261175d81611721565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061179a60208361158a565b91506117a582611764565b602082019050919050565b600060208201905081810360008301526117c98161178d565b9050919050565b7f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60008201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000602082015250565b600061182c60368361158a565b9150611837826117d0565b604082019050919050565b6000602082019050818103600083015261185b8161181f565b9050919050565b60006040820190506118776000830185611560565b61188460208301846114d3565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006118c58261141d565b91506118d08361141d565b92508282019050808211156118e8576118e761188b565b5b92915050565b6118f78161152a565b811461190257600080fd5b50565b600081519050611914816118ee565b92915050565b6000602082840312156119305761192f6113ba565b5b600061193e84828501611905565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006119a3602a8361158a565b91506119ae82611947565b604082019050919050565b600060208201905081810360008301526119d281611996565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000611a3560268361158a565b9150611a40826119d9565b604082019050919050565b60006020820190508181036000830152611a6481611a28565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015611a9f578082015181840152602081019050611a84565b60008484015250505050565b6000611ab682611a6b565b611ac08185611a76565b9350611ad0818560208601611a81565b80840191505092915050565b6000611ae88284611aab565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000611b29601d8361158a565b9150611b3482611af3565b602082019050919050565b60006020820190508181036000830152611b5881611b1c565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b6000611b8682611b5f565b611b90818561158a565b9350611ba0818560208601611a81565b611ba981611b6a565b840191505092915050565b60006020820190508181036000830152611bce8184611b7b565b90509291505056fea264697066735822122083cdc3b5f6eeb3dd4de0bc98f1853b1b017d9234b1370288b36e36566d48b39b64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xB790A77B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB790A77B EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0xC8F72C84 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0xCCA3E832 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x251 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xAA0D97B3 EQ PUSH2 0x1DF JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x24D7806C GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x62D91855 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x6D101D50 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x70480275 EQ PUSH2 0x19B JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x3974908 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x4DD06F5 EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x20965255 EQ PUSH2 0x127 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x1453 JUMP JUMPDEST PUSH2 0x26D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x125 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12F PUSH2 0x4D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x14E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x14FD JUMP JUMPDEST PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x14FD JUMP JUMPDEST PUSH2 0x5C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x199 PUSH2 0x623 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x14FD JUMP JUMPDEST PUSH2 0x78E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BF PUSH2 0x7F0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C9 PUSH2 0x804 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x156F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x1453 JUMP JUMPDEST PUSH2 0x82D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x1453 JUMP JUMPDEST PUSH2 0x947 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21F PUSH2 0xA5F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x14FD JUMP JUMPDEST PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x14E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x14FD JUMP JUMPDEST PUSH2 0xC6F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F0 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x348 ADDRESS DUP4 DUP4 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCF2 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0xA02ABA7174F1597E7E78B2CA72D80B37118BFE8012AD5469728B1DF72BBF2AC1 ADDRESS DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x37B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x413 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40A SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x33F0944345B567437B59121EC49E61EAC9AB862442C86DECE3BF1D1223F485C4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x444 SWAP3 SWAP2 SWAP1 PUSH2 0x163E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x36FFC86D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x541 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x565 SWAP2 SWAP1 PUSH2 0x167C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5C8 PUSH2 0xD7B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x6AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A6 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x78C ADDRESS PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x36FFC86D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x720 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x744 SWAP2 SWAP1 PUSH2 0x167C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDF9 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x796 PUSH2 0xD7B JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x7F8 PUSH2 0xD7B JUMP JUMPDEST PUSH2 0x802 PUSH1 0x0 PUSH2 0xF48 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x8B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B0 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x908 DUP3 ADDRESS DUP4 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCF2 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x160FFCAA807F78C8B4983836E2396338D073E75695AC448AA0B5E4A75B210B1D DUP3 ADDRESS DUP4 PUSH1 0x40 MLOAD PUSH2 0x93B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x9D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CA SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA22 ADDRESS DUP4 DUP4 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCF2 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0xAF5775A6886F31B3ABD4F2379C3DA25BE665D67D744212488D3A7734CBECE4E3 SELFBALANCE TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xA53 SWAP3 SWAP2 SWAP1 PUSH2 0x16A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xAEB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBC8 ADDRESS PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x36FFC86D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB5C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB80 SWAP2 SWAP1 PUSH2 0x167C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x100C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC27 SWAP2 SWAP1 PUSH2 0x156F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC44 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC68 SWAP2 SWAP1 PUSH2 0x167C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC77 PUSH2 0xD7B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCE6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDD SWAP1 PUSH2 0x1744 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCEF DUP2 PUSH2 0xF48 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xD75 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xD13 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1607 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x111E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xD83 PUSH2 0x11E5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDA1 PUSH2 0x804 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDEE SWAP1 PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0xE83 JUMPI POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE40 SWAP3 SWAP2 SWAP1 PUSH2 0x163E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE5D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE81 SWAP2 SWAP1 PUSH2 0x167C JUMP JUMPDEST EQ JUMPDEST PUSH2 0xEC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB9 SWAP1 PUSH2 0x1842 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF43 DUP4 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xEE1 SWAP3 SWAP2 SWAP1 PUSH2 0x1862 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x111E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104A SWAP3 SWAP2 SWAP1 PUSH2 0x163E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1067 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x108B SWAP2 SWAP1 PUSH2 0x167C JUMP JUMPDEST PUSH2 0x1095 SWAP2 SWAP1 PUSH2 0x18BA JUMP JUMPDEST SWAP1 POP PUSH2 0x1118 DUP5 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x10B6 SWAP3 SWAP2 SWAP1 PUSH2 0x1862 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x111E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1180 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11ED SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x11E0 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x11A0 SWAP2 SWAP1 PUSH2 0x191A JUMP JUMPDEST PUSH2 0x11DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D6 SWAP1 PUSH2 0x19B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x11FC DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1205 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x124A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1241 SWAP1 PUSH2 0x1A4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1273 SWAP2 SWAP1 PUSH2 0x1ADC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12B0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12B5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x12C6 DUP8 DUP4 DUP4 DUP8 PUSH2 0x12D2 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1334 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x132C JUMPI PUSH2 0x12EC DUP6 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0x132B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1322 SWAP1 PUSH2 0x1B3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x133F JUMP JUMPDEST PUSH2 0x133E DUP4 DUP4 PUSH2 0x136A JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x137D JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B1 SWAP2 SWAP1 PUSH2 0x1BB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13EA DUP3 PUSH2 0x13BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13FA DUP2 PUSH2 0x13DF JUMP JUMPDEST DUP2 EQ PUSH2 0x1405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1417 DUP2 PUSH2 0x13F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1430 DUP2 PUSH2 0x141D JUMP JUMPDEST DUP2 EQ PUSH2 0x143B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x144D DUP2 PUSH2 0x1427 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x146A JUMPI PUSH2 0x1469 PUSH2 0x13BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1478 DUP6 DUP3 DUP7 ADD PUSH2 0x1408 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1489 DUP6 DUP3 DUP7 ADD PUSH2 0x143E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14AA JUMPI PUSH2 0x14A9 PUSH2 0x13BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14B8 DUP6 DUP3 DUP7 ADD PUSH2 0x1408 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14C9 DUP6 DUP3 DUP7 ADD PUSH2 0x1408 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x14DC DUP2 PUSH2 0x141D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14F7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1513 JUMPI PUSH2 0x1512 PUSH2 0x13BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1521 DUP5 DUP3 DUP6 ADD PUSH2 0x1408 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x153F DUP2 PUSH2 0x152A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x155A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1536 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1569 DUP2 PUSH2 0x13DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1584 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1560 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E2063616E2063616C6C20697400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15D1 PUSH1 0x16 DUP4 PUSH2 0x158A JUMP JUMPDEST SWAP2 POP PUSH2 0x15DC DUP3 PUSH2 0x159B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1600 DUP2 PUSH2 0x15C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x161C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1560 JUMP JUMPDEST PUSH2 0x1629 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1560 JUMP JUMPDEST PUSH2 0x1636 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14D3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1653 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1560 JUMP JUMPDEST PUSH2 0x1660 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1560 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1676 DUP2 PUSH2 0x1427 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1692 JUMPI PUSH2 0x1691 PUSH2 0x13BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16A0 DUP5 DUP3 DUP6 ADD PUSH2 0x1667 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x16BE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x14D3 JUMP JUMPDEST PUSH2 0x16CB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14D3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x172E PUSH1 0x26 DUP4 PUSH2 0x158A JUMP JUMPDEST SWAP2 POP PUSH2 0x1739 DUP3 PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x175D DUP2 PUSH2 0x1721 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x179A PUSH1 0x20 DUP4 PUSH2 0x158A JUMP JUMPDEST SWAP2 POP PUSH2 0x17A5 DUP3 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17C9 DUP2 PUSH2 0x178D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x182C PUSH1 0x36 DUP4 PUSH2 0x158A JUMP JUMPDEST SWAP2 POP PUSH2 0x1837 DUP3 PUSH2 0x17D0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x185B DUP2 PUSH2 0x181F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1877 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1560 JUMP JUMPDEST PUSH2 0x1884 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14D3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18C5 DUP3 PUSH2 0x141D JUMP JUMPDEST SWAP2 POP PUSH2 0x18D0 DUP4 PUSH2 0x141D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x18E8 JUMPI PUSH2 0x18E7 PUSH2 0x188B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18F7 DUP2 PUSH2 0x152A JUMP JUMPDEST DUP2 EQ PUSH2 0x1902 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1914 DUP2 PUSH2 0x18EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1930 JUMPI PUSH2 0x192F PUSH2 0x13BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x193E DUP5 DUP3 DUP6 ADD PUSH2 0x1905 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19A3 PUSH1 0x2A DUP4 PUSH2 0x158A JUMP JUMPDEST SWAP2 POP PUSH2 0x19AE DUP3 PUSH2 0x1947 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19D2 DUP2 PUSH2 0x1996 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A35 PUSH1 0x26 DUP4 PUSH2 0x158A JUMP JUMPDEST SWAP2 POP PUSH2 0x1A40 DUP3 PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A64 DUP2 PUSH2 0x1A28 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A9F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A84 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AB6 DUP3 PUSH2 0x1A6B JUMP JUMPDEST PUSH2 0x1AC0 DUP2 DUP6 PUSH2 0x1A76 JUMP JUMPDEST SWAP4 POP PUSH2 0x1AD0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A81 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AE8 DUP3 DUP5 PUSH2 0x1AAB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B29 PUSH1 0x1D DUP4 PUSH2 0x158A JUMP JUMPDEST SWAP2 POP PUSH2 0x1B34 DUP3 PUSH2 0x1AF3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B58 DUP2 PUSH2 0x1B1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B86 DUP3 PUSH2 0x1B5F JUMP JUMPDEST PUSH2 0x1B90 DUP2 DUP6 PUSH2 0x158A JUMP JUMPDEST SWAP4 POP PUSH2 0x1BA0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A81 JUMP JUMPDEST PUSH2 0x1BA9 DUP2 PUSH2 0x1B6A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BCE DUP2 DUP5 PUSH2 0x1B7B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 0xCD 0xC3 0xB5 0xF6 0xEE 0xB3 0xDD 0x4D 0xE0 0xBC SWAP9 CALL DUP6 EXTCODESIZE SHL ADD PUSH30 0x9234B1370288B36E36566D48B39B64736F6C634300081100330000000000 ",
							"sourceMap": "245:1938:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1224:188;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;747:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2079:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;499:97:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;402:91;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1777:118:7;;;:::i;:::-;;306:90:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1831:101:0;;;:::i;:::-;;1201:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1011:187:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1438:206;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1901:172;;;:::i;:::-;;1650:121;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1224:188:7;236:7:6;:19;244:10;236:19;;;;;;;;;;;;;;;;;;;;;;;;;228:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1300:50:7::1;1331:4;1338:3;1343:6;1300:5;;;;;;;;;;;:22;;;;:50;;;;;;:::i;:::-;1365:40;1386:4;1393:3;1398:6;1365:40;;;;;;;;:::i;:::-;;;;;;;;1224:188:::0;;:::o;747:244::-;236:7:6;:19;244:10;236:19;;;;;;;;;;;;;;;;;;;;;;;;;228:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;866:41:7::1;881:12;895:11;866:41;;;;;;;:::i;:::-;;;;;;;;932:12;917:5;;:28;;;;;;;;;;;;;;;;;;972:11;955:4;;:29;;;;;;;;;;;;;;;;;;747:244:::0;;:::o;2079:98::-;2118:7;2142:4;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2135:35;;2079:98;:::o;499:97:6:-;552:4;575:7;:14;583:5;575:14;;;;;;;;;;;;;;;;;;;;;;;;;568:21;;499:97;;;:::o;402:91::-;1094:13:0;:11;:13::i;:::-;481:5:6::1;463:7;:15;471:6;463:15;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;402:91:::0;:::o;1777:118:7:-;236:7:6;:19;244:10;236:19;;;;;;;;;;;;;;;;;;;;;;;;;228:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1826:62:7::1;1852:4;1859;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1826:5;;;;;;;;;;;:17;;;;:62;;;;;:::i;:::-;1777:118::o:0;306:90:6:-;1094:13:0;:11;:13::i;:::-;385:4:6::1;367:7:::0;:15:::1;375:6;367:15;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;306:90:::0;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;1011:187:7:-;236:7:6;:19;244:10;236:19;;;;;;;;;;;;;;;;;;;;;;;;;228:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1086:51:7::1;1109:3;1122:4;1129:7;1086:5;;;;;;;;;;;:22;;;;:51;;;;;;:::i;:::-;1152:39;1163:3;1176:4;1183:7;1152:39;;;;;;;;:::i;:::-;;;;;;;;1011:187:::0;;:::o;1438:206::-;236:7:6;:19;244:10;236:19;;;;;;;;;;;;;;;;;;;;;;;;;228:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1516:51:7::1;1547:4;1554:3;1559:7;1516:5;;;;;;;;;;;:22;;;;:51;;;;;;:::i;:::-;1582:55;1598:21;1621:15;1582:55;;;;;;;:::i;:::-;;;;;;;;1438:206:::0;;:::o;1901:172::-;236:7:6;:19;244:10;236:19;;;;;;;;;;;;;;;;;;;;;;;;;228:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1960:106:7::1;2009:4;2028;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1960:5;;;;;;;;;;;:27;;;;:106;;;;;:::i;:::-;1901:172::o:0;1650:121::-;1712:7;1738:5;;;;;;;;;;;:15;;;1754:9;1738:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1731:33;;1650:121;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;974:241:3:-;1112:96;1132:5;1162:27;;;1191:4;1197:2;1201:5;1139:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1112:19;:96::i;:::-;974:241;;;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;1475:603:3:-;1839:1;1830:5;:10;1829:62;;;;1889:1;1846:5;:15;;;1870:4;1877:7;1846:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;1829:62;1808:163;;;;;;;;;;;;:::i;:::-;;;;;;;;;1981:90;2001:5;2031:22;;;2055:7;2064:5;2008:62;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:19;:90::i;:::-;1475:603;;;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;2084:310:3:-;2210:20;2275:5;2233;:15;;;2257:4;2264:7;2233:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;;;:::i;:::-;2210:70;;2290:97;2310:5;2340:22;;;2364:7;2373:12;2317:69;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2290:19;:97::i;:::-;2200:194;2084:310;;;:::o;3747:706::-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;4192:27;;;;:69;;;;;:::i;:::-;4166:95;;4295:1;4275:10;:17;:21;4271:176;;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;4271:176;3817:636;3747:706;;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;3873:223:4:-;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;;3873:223;;;;;:::o;4960:446::-;5125:12;5182:5;5157:21;:30;;5149:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5241:12;5255:23;5282:6;:11;;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;;;;4960:446;;;;;;:::o;7466:628::-;7646:12;7674:7;7670:418;;;7722:1;7701:10;:17;:22;7697:286;;7916:18;7927:6;7916:10;:18::i;:::-;7908:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:286;8003:10;7996:17;;;;7670:418;8044:33;8052:10;8064:12;8044:7;:33::i;:::-;7466:628;;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;8616:540::-;8795:1;8775:10;:17;:21;8771:379;;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;;;;;;;;;;:::i;:::-;;;;;;;;88:117:9;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:::-;1745:6;1753;1802:2;1790:9;1781:7;1777:23;1773:32;1770:119;;;1808:79;;:::i;:::-;1770:119;1928:1;1953:53;1998:7;1989:6;1978:9;1974:22;1953:53;:::i;:::-;1943:63;;1899:117;2055:2;2081:53;2126:7;2117:6;2106:9;2102:22;2081:53;:::i;:::-;2071:63;;2026:118;1677:474;;;;;:::o;2157:118::-;2244:24;2262:5;2244:24;:::i;:::-;2239:3;2232:37;2157:118;;:::o;2281:222::-;2374:4;2412:2;2401:9;2397:18;2389:26;;2425:71;2493:1;2482:9;2478:17;2469:6;2425:71;:::i;:::-;2281:222;;;;:::o;2509:329::-;2568:6;2617:2;2605:9;2596:7;2592:23;2588:32;2585:119;;;2623:79;;:::i;:::-;2585:119;2743:1;2768:53;2813:7;2804:6;2793:9;2789:22;2768:53;:::i;:::-;2758:63;;2714:117;2509:329;;;;:::o;2844:90::-;2878:7;2921:5;2914:13;2907:21;2896:32;;2844:90;;;:::o;2940:109::-;3021:21;3036:5;3021:21;:::i;:::-;3016:3;3009:34;2940:109;;:::o;3055:210::-;3142:4;3180:2;3169:9;3165:18;3157:26;;3193:65;3255:1;3244:9;3240:17;3231:6;3193:65;:::i;:::-;3055:210;;;;:::o;3271:118::-;3358:24;3376:5;3358:24;:::i;:::-;3353:3;3346:37;3271:118;;:::o;3395:222::-;3488:4;3526:2;3515:9;3511:18;3503:26;;3539:71;3607:1;3596:9;3592:17;3583:6;3539:71;:::i;:::-;3395:222;;;;:::o;3623:169::-;3707:11;3741:6;3736:3;3729:19;3781:4;3776:3;3772:14;3757:29;;3623:169;;;;:::o;3798:172::-;3938:24;3934:1;3926:6;3922:14;3915:48;3798:172;:::o;3976:366::-;4118:3;4139:67;4203:2;4198:3;4139:67;:::i;:::-;4132:74;;4215:93;4304:3;4215:93;:::i;:::-;4333:2;4328:3;4324:12;4317:19;;3976:366;;;:::o;4348:419::-;4514:4;4552:2;4541:9;4537:18;4529:26;;4601:9;4595:4;4591:20;4587:1;4576:9;4572:17;4565:47;4629:131;4755:4;4629:131;:::i;:::-;4621:139;;4348:419;;;:::o;4773:442::-;4922:4;4960:2;4949:9;4945:18;4937:26;;4973:71;5041:1;5030:9;5026:17;5017:6;4973:71;:::i;:::-;5054:72;5122:2;5111:9;5107:18;5098:6;5054:72;:::i;:::-;5136;5204:2;5193:9;5189:18;5180:6;5136:72;:::i;:::-;4773:442;;;;;;:::o;5221:332::-;5342:4;5380:2;5369:9;5365:18;5357:26;;5393:71;5461:1;5450:9;5446:17;5437:6;5393:71;:::i;:::-;5474:72;5542:2;5531:9;5527:18;5518:6;5474:72;:::i;:::-;5221:332;;;;;:::o;5559:143::-;5616:5;5647:6;5641:13;5632:22;;5663:33;5690:5;5663:33;:::i;:::-;5559:143;;;;:::o;5708:351::-;5778:6;5827:2;5815:9;5806:7;5802:23;5798:32;5795:119;;;5833:79;;:::i;:::-;5795:119;5953:1;5978:64;6034:7;6025:6;6014:9;6010:22;5978:64;:::i;:::-;5968:74;;5924:128;5708:351;;;;:::o;6065:332::-;6186:4;6224:2;6213:9;6209:18;6201:26;;6237:71;6305:1;6294:9;6290:17;6281:6;6237:71;:::i;:::-;6318:72;6386:2;6375:9;6371:18;6362:6;6318:72;:::i;:::-;6065:332;;;;;:::o;6403:225::-;6543:34;6539:1;6531:6;6527:14;6520:58;6612:8;6607:2;6599:6;6595:15;6588:33;6403:225;:::o;6634:366::-;6776:3;6797:67;6861:2;6856:3;6797:67;:::i;:::-;6790:74;;6873:93;6962:3;6873:93;:::i;:::-;6991:2;6986:3;6982:12;6975:19;;6634:366;;;:::o;7006:419::-;7172:4;7210:2;7199:9;7195:18;7187:26;;7259:9;7253:4;7249:20;7245:1;7234:9;7230:17;7223:47;7287:131;7413:4;7287:131;:::i;:::-;7279:139;;7006:419;;;:::o;7431:182::-;7571:34;7567:1;7559:6;7555:14;7548:58;7431:182;:::o;7619:366::-;7761:3;7782:67;7846:2;7841:3;7782:67;:::i;:::-;7775:74;;7858:93;7947:3;7858:93;:::i;:::-;7976:2;7971:3;7967:12;7960:19;;7619:366;;;:::o;7991:419::-;8157:4;8195:2;8184:9;8180:18;8172:26;;8244:9;8238:4;8234:20;8230:1;8219:9;8215:17;8208:47;8272:131;8398:4;8272:131;:::i;:::-;8264:139;;7991:419;;;:::o;8416:241::-;8556:34;8552:1;8544:6;8540:14;8533:58;8625:24;8620:2;8612:6;8608:15;8601:49;8416:241;:::o;8663:366::-;8805:3;8826:67;8890:2;8885:3;8826:67;:::i;:::-;8819:74;;8902:93;8991:3;8902:93;:::i;:::-;9020:2;9015:3;9011:12;9004:19;;8663:366;;;:::o;9035:419::-;9201:4;9239:2;9228:9;9224:18;9216:26;;9288:9;9282:4;9278:20;9274:1;9263:9;9259:17;9252:47;9316:131;9442:4;9316:131;:::i;:::-;9308:139;;9035:419;;;:::o;9460:332::-;9581:4;9619:2;9608:9;9604:18;9596:26;;9632:71;9700:1;9689:9;9685:17;9676:6;9632:71;:::i;:::-;9713:72;9781:2;9770:9;9766:18;9757:6;9713:72;:::i;:::-;9460:332;;;;;:::o;9798:180::-;9846:77;9843:1;9836:88;9943:4;9940:1;9933:15;9967:4;9964:1;9957:15;9984:191;10024:3;10043:20;10061:1;10043:20;:::i;:::-;10038:25;;10077:20;10095:1;10077:20;:::i;:::-;10072:25;;10120:1;10117;10113:9;10106:16;;10141:3;10138:1;10135:10;10132:36;;;10148:18;;:::i;:::-;10132:36;9984:191;;;;:::o;10181:116::-;10251:21;10266:5;10251:21;:::i;:::-;10244:5;10241:32;10231:60;;10287:1;10284;10277:12;10231:60;10181:116;:::o;10303:137::-;10357:5;10388:6;10382:13;10373:22;;10404:30;10428:5;10404:30;:::i;:::-;10303:137;;;;:::o;10446:345::-;10513:6;10562:2;10550:9;10541:7;10537:23;10533:32;10530:119;;;10568:79;;:::i;:::-;10530:119;10688:1;10713:61;10766:7;10757:6;10746:9;10742:22;10713:61;:::i;:::-;10703:71;;10659:125;10446:345;;;;:::o;10797:229::-;10937:34;10933:1;10925:6;10921:14;10914:58;11006:12;11001:2;10993:6;10989:15;10982:37;10797:229;:::o;11032:366::-;11174:3;11195:67;11259:2;11254:3;11195:67;:::i;:::-;11188:74;;11271:93;11360:3;11271:93;:::i;:::-;11389:2;11384:3;11380:12;11373:19;;11032:366;;;:::o;11404:419::-;11570:4;11608:2;11597:9;11593:18;11585:26;;11657:9;11651:4;11647:20;11643:1;11632:9;11628:17;11621:47;11685:131;11811:4;11685:131;:::i;:::-;11677:139;;11404:419;;;:::o;11829:225::-;11969:34;11965:1;11957:6;11953:14;11946:58;12038:8;12033:2;12025:6;12021:15;12014:33;11829:225;:::o;12060:366::-;12202:3;12223:67;12287:2;12282:3;12223:67;:::i;:::-;12216:74;;12299:93;12388:3;12299:93;:::i;:::-;12417:2;12412:3;12408:12;12401:19;;12060:366;;;:::o;12432:419::-;12598:4;12636:2;12625:9;12621:18;12613:26;;12685:9;12679:4;12675:20;12671:1;12660:9;12656:17;12649:47;12713:131;12839:4;12713:131;:::i;:::-;12705:139;;12432:419;;;:::o;12857:98::-;12908:6;12942:5;12936:12;12926:22;;12857:98;;;:::o;12961:147::-;13062:11;13099:3;13084:18;;12961:147;;;;:::o;13114:246::-;13195:1;13205:113;13219:6;13216:1;13213:13;13205:113;;;13304:1;13299:3;13295:11;13289:18;13285:1;13280:3;13276:11;13269:39;13241:2;13238:1;13234:10;13229:15;;13205:113;;;13352:1;13343:6;13338:3;13334:16;13327:27;13176:184;13114:246;;;:::o;13366:386::-;13470:3;13498:38;13530:5;13498:38;:::i;:::-;13552:88;13633:6;13628:3;13552:88;:::i;:::-;13545:95;;13649:65;13707:6;13702:3;13695:4;13688:5;13684:16;13649:65;:::i;:::-;13739:6;13734:3;13730:16;13723:23;;13474:278;13366:386;;;;:::o;13758:271::-;13888:3;13910:93;13999:3;13990:6;13910:93;:::i;:::-;13903:100;;14020:3;14013:10;;13758:271;;;;:::o;14035:179::-;14175:31;14171:1;14163:6;14159:14;14152:55;14035:179;:::o;14220:366::-;14362:3;14383:67;14447:2;14442:3;14383:67;:::i;:::-;14376:74;;14459:93;14548:3;14459:93;:::i;:::-;14577:2;14572:3;14568:12;14561:19;;14220:366;;;:::o;14592:419::-;14758:4;14796:2;14785:9;14781:18;14773:26;;14845:9;14839:4;14835:20;14831:1;14820:9;14816:17;14809:47;14873:131;14999:4;14873:131;:::i;:::-;14865:139;;14592:419;;;:::o;15017:99::-;15069:6;15103:5;15097:12;15087:22;;15017:99;;;:::o;15122:102::-;15163:6;15214:2;15210:7;15205:2;15198:5;15194:14;15190:28;15180:38;;15122:102;;;:::o;15230:377::-;15318:3;15346:39;15379:5;15346:39;:::i;:::-;15401:71;15465:6;15460:3;15401:71;:::i;:::-;15394:78;;15481:65;15539:6;15534:3;15527:4;15520:5;15516:16;15481:65;:::i;:::-;15571:29;15593:6;15571:29;:::i;:::-;15566:3;15562:39;15555:46;;15322:285;15230:377;;;;:::o;15613:313::-;15726:4;15764:2;15753:9;15749:18;15741:26;;15813:9;15807:4;15803:20;15799:1;15788:9;15784:17;15777:47;15841:78;15914:4;15905:6;15841:78;:::i;:::-;15833:86;;15613:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1436000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_approve()": "infinite",
								"_balanceOf(address)": "infinite",
								"_increaseAllowance()": "infinite",
								"_initToken(address,address)": "infinite",
								"_stake(address,uint256)": "infinite",
								"_unStake(address,uint256)": "infinite",
								"_withdraw(address,uint256)": "infinite",
								"addAdmin(address)": "27165",
								"delAdmin(address)": "27121",
								"getValue()": "infinite",
								"isAdmin(address)": "2906",
								"owner()": "2567",
								"renounceOwnership()": "30421",
								"transferOwnership(address)": "30832"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 245,
									"end": 2183,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 245,
									"end": 2183,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 245,
									"end": 2183,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 354,
									"end": 396,
									"name": "PUSH",
									"source": 7,
									"value": "816AC81F0B32453153721A4ED8D223D6D560643B"
								},
								{
									"begin": 308,
									"end": 398,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 308,
									"end": 398,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 308,
									"end": 398,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 308,
									"end": 398,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 308,
									"end": 398,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 308,
									"end": 398,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 308,
									"end": 398,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 308,
									"end": 398,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 308,
									"end": 398,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 308,
									"end": 398,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 308,
									"end": 398,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 308,
									"end": 398,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 308,
									"end": 398,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 308,
									"end": 398,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 308,
									"end": 398,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 308,
									"end": 398,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 308,
									"end": 398,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 308,
									"end": 398,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 308,
									"end": 398,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 308,
									"end": 398,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 456,
									"end": 498,
									"name": "PUSH",
									"source": 7,
									"value": "582955206BFAA4EE8ABBEE39D2F6A7F4DC6C365"
								},
								{
									"begin": 405,
									"end": 500,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 405,
									"end": 500,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 405,
									"end": 500,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 405,
									"end": 500,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 405,
									"end": 500,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 405,
									"end": 500,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 405,
									"end": 500,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 405,
									"end": 500,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 405,
									"end": 500,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 405,
									"end": 500,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 405,
									"end": 500,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 405,
									"end": 500,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 405,
									"end": 500,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 405,
									"end": 500,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 405,
									"end": 500,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 405,
									"end": 500,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 405,
									"end": 500,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 405,
									"end": 500,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 405,
									"end": 500,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 405,
									"end": 500,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 245,
									"end": 2183,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 245,
									"end": 2183,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 245,
									"end": 2183,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 245,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 245,
									"end": 2183,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 245,
									"end": 2183,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 2183,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 245,
									"end": 2183,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 245,
									"end": 2183,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 245,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 245,
									"end": 2183,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 245,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 245,
									"end": 2183,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 245,
									"end": 2183,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 245,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 245,
									"end": 2183,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 245,
									"end": 2183,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 245,
									"end": 2183,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 245,
									"end": 2183,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 2183,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 245,
									"end": 2183,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 2183,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122083cdc3b5f6eeb3dd4de0bc98f1853b1b017d9234b1370288b36e36566d48b39b64736f6c63430008110033",
									".code": [
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH",
											"source": 7,
											"value": "B790A77B"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH",
											"source": 7,
											"value": "B790A77B"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH",
											"source": 7,
											"value": "C8F72C84"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH",
											"source": 7,
											"value": "CCA3E832"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH",
											"source": 7,
											"value": "AA0D97B3"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH",
											"source": 7,
											"value": "24D7806C"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH",
											"source": 7,
											"value": "24D7806C"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH",
											"source": 7,
											"value": "62D91855"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH",
											"source": 7,
											"value": "6D101D50"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH",
											"source": 7,
											"value": "70480275"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH",
											"source": 7,
											"value": "3974908"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH",
											"source": 7,
											"value": "4DD06F5"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH",
											"source": 7,
											"value": "20965255"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 245,
											"end": 2183,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1224,
											"end": 1412,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1224,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1224,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1224,
											"end": 1412,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1224,
											"end": 1412,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1224,
											"end": 1412,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1224,
											"end": 1412,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1224,
											"end": 1412,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1224,
											"end": 1412,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1224,
											"end": 1412,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1224,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1224,
											"end": 1412,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1224,
											"end": 1412,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1224,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 1224,
											"end": 1412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1224,
											"end": 1412,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1224,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1224,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 1224,
											"end": 1412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1224,
											"end": 1412,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1224,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1224,
											"end": 1412,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 747,
											"end": 991,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 747,
											"end": 991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 747,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 747,
											"end": 991,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 747,
											"end": 991,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 747,
											"end": 991,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 747,
											"end": 991,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 747,
											"end": 991,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 747,
											"end": 991,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 747,
											"end": 991,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 747,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 747,
											"end": 991,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 747,
											"end": 991,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 747,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 747,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 747,
											"end": 991,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 747,
											"end": 991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 747,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 747,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 747,
											"end": 991,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 747,
											"end": 991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 747,
											"end": 991,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2079,
											"end": 2177,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2079,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2079,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 2079,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 2079,
											"end": 2177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2079,
											"end": 2177,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 2079,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2079,
											"end": 2177,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2079,
											"end": 2177,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2079,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 2079,
											"end": 2177,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2079,
											"end": 2177,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2079,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 2079,
											"end": 2177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2079,
											"end": 2177,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 2079,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2079,
											"end": 2177,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2079,
											"end": 2177,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2079,
											"end": 2177,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2079,
											"end": 2177,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2079,
											"end": 2177,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2079,
											"end": 2177,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2079,
											"end": 2177,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 499,
											"end": 596,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 499,
											"end": 596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 499,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 499,
											"end": 596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 499,
											"end": 596,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 499,
											"end": 596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 499,
											"end": 596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 499,
											"end": 596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 499,
											"end": 596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 596,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 499,
											"end": 596,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 499,
											"end": 596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 499,
											"end": 596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 596,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 402,
											"end": 493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 402,
											"end": 493,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 402,
											"end": 493,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 402,
											"end": 493,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 402,
											"end": 493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 402,
											"end": 493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 402,
											"end": 493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 402,
											"end": 493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1777,
											"end": 1895,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1777,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1777,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1777,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1777,
											"end": 1895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1777,
											"end": 1895,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1777,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1777,
											"end": 1895,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 306,
											"end": 396,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 306,
											"end": 396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 306,
											"end": 396,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 306,
											"end": 396,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 306,
											"end": 396,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 306,
											"end": 396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 306,
											"end": 396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 306,
											"end": 396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 306,
											"end": 396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1011,
											"end": 1198,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 1011,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1011,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 1011,
											"end": 1198,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1011,
											"end": 1198,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1011,
											"end": 1198,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1011,
											"end": 1198,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1011,
											"end": 1198,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1011,
											"end": 1198,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1011,
											"end": 1198,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1011,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 1011,
											"end": 1198,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1011,
											"end": 1198,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1011,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 1011,
											"end": 1198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1011,
											"end": 1198,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 1011,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1011,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 1011,
											"end": 1198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1011,
											"end": 1198,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 1011,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1011,
											"end": 1198,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1438,
											"end": 1644,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 1438,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1438,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 1438,
											"end": 1644,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1438,
											"end": 1644,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1438,
											"end": 1644,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1438,
											"end": 1644,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1438,
											"end": 1644,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1438,
											"end": 1644,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1438,
											"end": 1644,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1438,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 1438,
											"end": 1644,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1438,
											"end": 1644,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1438,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 1438,
											"end": 1644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1438,
											"end": 1644,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 1438,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1438,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 1438,
											"end": 1644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1438,
											"end": 1644,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 1438,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1438,
											"end": 1644,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1901,
											"end": 2073,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 1901,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1901,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 1901,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 1901,
											"end": 2073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1901,
											"end": 2073,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 1901,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1901,
											"end": 2073,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1771,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 1650,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1650,
											"end": 1771,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1650,
											"end": 1771,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1771,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1771,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1771,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1771,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1771,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1650,
											"end": 1771,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1771,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1650,
											"end": 1771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1771,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1650,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 1650,
											"end": 1771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1771,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1650,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1771,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1650,
											"end": 1771,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1650,
											"end": 1771,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1771,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1650,
											"end": 1771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1771,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1650,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1771,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1650,
											"end": 1771,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1771,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1771,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1771,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1771,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1771,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1412,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 1224,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 236,
											"end": 243,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 254,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 228,
											"end": 282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1300,
											"end": 1350,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 1331,
											"end": 1335,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1338,
											"end": 1341,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1349,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1300,
											"end": 1305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1300,
											"end": 1305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1300,
											"end": 1305,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1300,
											"end": 1305,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1300,
											"end": 1305,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1300,
											"end": 1305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1300,
											"end": 1305,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1300,
											"end": 1305,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1300,
											"end": 1305,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1300,
											"end": 1305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1300,
											"end": 1305,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1300,
											"end": 1322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1300,
											"end": 1322,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1300,
											"end": 1322,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 1300,
											"end": 1322,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1300,
											"end": 1350,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1300,
											"end": 1350,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1300,
											"end": 1350,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1300,
											"end": 1350,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1300,
											"end": 1350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1300,
											"end": 1350,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1300,
											"end": 1350,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1300,
											"end": 1350,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 1300,
											"end": 1350,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1365,
											"end": 1405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A02ABA7174F1597E7E78B2CA72D80B37118BFE8012AD5469728B1DF72BBF2AC1"
										},
										{
											"begin": 1386,
											"end": 1390,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1393,
											"end": 1396,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1398,
											"end": 1404,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1365,
											"end": 1405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1365,
											"end": 1405,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1365,
											"end": 1405,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 1365,
											"end": 1405,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1365,
											"end": 1405,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1365,
											"end": 1405,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1365,
											"end": 1405,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1365,
											"end": 1405,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1365,
											"end": 1405,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1365,
											"end": 1405,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 1365,
											"end": 1405,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1365,
											"end": 1405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1365,
											"end": 1405,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1365,
											"end": 1405,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1365,
											"end": 1405,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1365,
											"end": 1405,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1365,
											"end": 1405,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1365,
											"end": 1405,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 1224,
											"end": 1412,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1224,
											"end": 1412,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1224,
											"end": 1412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 747,
											"end": 991,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 747,
											"end": 991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 236,
											"end": 243,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 254,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 228,
											"end": 282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 866,
											"end": 907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "33F0944345B567437B59121EC49E61EAC9AB862442C86DECE3BF1D1223F485C4"
										},
										{
											"begin": 881,
											"end": 893,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 895,
											"end": 906,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 866,
											"end": 907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 866,
											"end": 907,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 866,
											"end": 907,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 866,
											"end": 907,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 866,
											"end": 907,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 866,
											"end": 907,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 866,
											"end": 907,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 866,
											"end": 907,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 866,
											"end": 907,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 866,
											"end": 907,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 866,
											"end": 907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 866,
											"end": 907,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 866,
											"end": 907,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 866,
											"end": 907,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 866,
											"end": 907,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 866,
											"end": 907,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 866,
											"end": 907,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 932,
											"end": 944,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 917,
											"end": 922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 917,
											"end": 922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 917,
											"end": 945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 917,
											"end": 945,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 917,
											"end": 945,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 917,
											"end": 945,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 917,
											"end": 945,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 917,
											"end": 945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 917,
											"end": 945,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 917,
											"end": 945,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 917,
											"end": 945,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 917,
											"end": 945,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 917,
											"end": 945,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 917,
											"end": 945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 917,
											"end": 945,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 917,
											"end": 945,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 917,
											"end": 945,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 917,
											"end": 945,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 917,
											"end": 945,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 917,
											"end": 945,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 972,
											"end": 983,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 955,
											"end": 959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 955,
											"end": 959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 955,
											"end": 984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 955,
											"end": 984,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 955,
											"end": 984,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 955,
											"end": 984,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 955,
											"end": 984,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 955,
											"end": 984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 955,
											"end": 984,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 955,
											"end": 984,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 955,
											"end": 984,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 955,
											"end": 984,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 955,
											"end": 984,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 955,
											"end": 984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 955,
											"end": 984,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 955,
											"end": 984,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 955,
											"end": 984,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 955,
											"end": 984,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 955,
											"end": 984,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 955,
											"end": 984,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 747,
											"end": 991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 747,
											"end": 991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 747,
											"end": 991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2079,
											"end": 2177,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 2079,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2118,
											"end": 2125,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2146,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2142,
											"end": 2146,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2146,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2146,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2146,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2146,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2142,
											"end": 2146,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2146,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2146,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2146,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2142,
											"end": 2146,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2168,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2142,
											"end": 2168,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2168,
											"name": "PUSH",
											"source": 7,
											"value": "36FFC86D"
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 2142,
											"end": 2170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 2142,
											"end": 2170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2135,
											"end": 2170,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2135,
											"end": 2170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2079,
											"end": 2177,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2079,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 499,
											"end": 596,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 499,
											"end": 596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 552,
											"end": 556,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 575,
											"end": 582,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 575,
											"end": 589,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 588,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 575,
											"end": 589,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 575,
											"end": 589,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 575,
											"end": 589,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 575,
											"end": 589,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 575,
											"end": 589,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 575,
											"end": 589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 575,
											"end": 589,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 575,
											"end": 589,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 575,
											"end": 589,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 568,
											"end": 589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 568,
											"end": 589,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 499,
											"end": 596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 402,
											"end": 493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 481,
											"end": 486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 463,
											"end": 470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 471,
											"end": 477,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 463,
											"end": 478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 463,
											"end": 486,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 402,
											"end": 493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1777,
											"end": 1895,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1777,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 236,
											"end": 243,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 254,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 228,
											"end": 282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1888,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1852,
											"end": 1856,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1859,
											"end": 1863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1859,
											"end": 1863,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1863,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1863,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1859,
											"end": 1863,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1863,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1863,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1859,
											"end": 1863,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1859,
											"end": 1885,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "36FFC86D"
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1859,
											"end": 1887,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 1859,
											"end": 1887,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1859,
											"end": 1887,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1826,
											"end": 1831,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1826,
											"end": 1831,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1831,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1826,
											"end": 1831,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1826,
											"end": 1831,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1826,
											"end": 1831,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1826,
											"end": 1831,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1826,
											"end": 1831,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1826,
											"end": 1831,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1826,
											"end": 1831,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1826,
											"end": 1831,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1826,
											"end": 1843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1826,
											"end": 1843,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1826,
											"end": 1843,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1826,
											"end": 1843,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1826,
											"end": 1888,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1826,
											"end": 1888,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1826,
											"end": 1888,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1826,
											"end": 1888,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1826,
											"end": 1888,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1826,
											"end": 1888,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1826,
											"end": 1888,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1826,
											"end": 1888,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1777,
											"end": 1895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 306,
											"end": 396,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 306,
											"end": 396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 385,
											"end": 389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 367,
											"end": 374,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 375,
											"end": 381,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 367,
											"end": 382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 367,
											"end": 389,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 306,
											"end": 396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1011,
											"end": 1198,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 1011,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 236,
											"end": 243,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 254,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 228,
											"end": 282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1086,
											"end": 1137,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 1109,
											"end": 1112,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1126,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1136,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1086,
											"end": 1091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1086,
											"end": 1091,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1091,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1091,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1086,
											"end": 1091,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1091,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1091,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1086,
											"end": 1091,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1086,
											"end": 1108,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1108,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 1086,
											"end": 1108,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1137,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1137,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1137,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1137,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1086,
											"end": 1137,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1137,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1137,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 1086,
											"end": 1137,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "160FFCAA807F78C8B4983836E2396338D073E75695AC448AA0B5E4A75B210B1D"
										},
										{
											"begin": 1163,
											"end": 1166,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1180,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1183,
											"end": 1190,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1152,
											"end": 1191,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1191,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1152,
											"end": 1191,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1191,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1191,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1191,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1191,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1152,
											"end": 1191,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1191,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1152,
											"end": 1191,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1152,
											"end": 1191,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1191,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1191,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1191,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1191,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1191,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 1011,
											"end": 1198,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1011,
											"end": 1198,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1011,
											"end": 1198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1438,
											"end": 1644,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 1438,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 236,
											"end": 243,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 254,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 228,
											"end": 282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1567,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 1547,
											"end": 1551,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1554,
											"end": 1557,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1566,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1516,
											"end": 1521,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1516,
											"end": 1521,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1516,
											"end": 1521,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1516,
											"end": 1521,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1516,
											"end": 1521,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1516,
											"end": 1521,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1516,
											"end": 1521,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1516,
											"end": 1521,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1516,
											"end": 1521,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1516,
											"end": 1521,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1516,
											"end": 1521,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1516,
											"end": 1538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1516,
											"end": 1538,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1516,
											"end": 1538,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 1516,
											"end": 1538,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1516,
											"end": 1567,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1516,
											"end": 1567,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1516,
											"end": 1567,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1516,
											"end": 1567,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1516,
											"end": 1567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1516,
											"end": 1567,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1516,
											"end": 1567,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1516,
											"end": 1567,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 1516,
											"end": 1567,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1582,
											"end": 1637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "AF5775A6886F31B3ABD4F2379C3DA25BE665D67D744212488D3A7734CBECE4E3"
										},
										{
											"begin": 1598,
											"end": 1619,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 1621,
											"end": 1636,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 1582,
											"end": 1637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1582,
											"end": 1637,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1582,
											"end": 1637,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 1582,
											"end": 1637,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1582,
											"end": 1637,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1582,
											"end": 1637,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1582,
											"end": 1637,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 1582,
											"end": 1637,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1582,
											"end": 1637,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 1582,
											"end": 1637,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1582,
											"end": 1637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1582,
											"end": 1637,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1582,
											"end": 1637,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1582,
											"end": 1637,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1582,
											"end": 1637,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1582,
											"end": 1637,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1582,
											"end": 1637,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 1438,
											"end": 1644,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1438,
											"end": 1644,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1438,
											"end": 1644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1901,
											"end": 2073,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 1901,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 236,
											"end": 243,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 254,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 236,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 236,
											"end": 255,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 228,
											"end": 282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 228,
											"end": 282,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 228,
											"end": 282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 2066,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 2009,
											"end": 2013,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2028,
											"end": 2032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2028,
											"end": 2032,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2032,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2032,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2028,
											"end": 2032,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2032,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2032,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2028,
											"end": 2032,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2028,
											"end": 2054,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "36FFC86D"
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2028,
											"end": 2056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 2028,
											"end": 2056,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 2028,
											"end": 2056,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1960,
											"end": 1965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1960,
											"end": 1965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1965,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1960,
											"end": 1965,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1960,
											"end": 1965,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1960,
											"end": 1965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1960,
											"end": 1965,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1960,
											"end": 1965,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1960,
											"end": 1965,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1960,
											"end": 1965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1960,
											"end": 1965,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1960,
											"end": 1987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1960,
											"end": 1987,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1960,
											"end": 1987,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 1960,
											"end": 1987,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1960,
											"end": 2066,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1960,
											"end": 2066,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1960,
											"end": 2066,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1960,
											"end": 2066,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1960,
											"end": 2066,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1960,
											"end": 2066,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1960,
											"end": 2066,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 1960,
											"end": 2066,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1901,
											"end": 2073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1771,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 1650,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1712,
											"end": 1719,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1753,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1738,
											"end": 1753,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1753,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 1754,
											"end": 1763,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 1738,
											"end": 1764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 1738,
											"end": 1764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 1738,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1731,
											"end": 1764,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1731,
											"end": 1764,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1771,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1771,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2161,
											"end": 2234,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 1132,
											"end": 1137,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1191,
											"end": 1195,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1197,
											"end": 1199,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1206,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1139,
											"end": 1207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 1112,
											"end": 1208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 2078,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1475,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1839,
											"end": 1840,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1835,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1840,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1891,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 1829,
											"end": 1891,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1889,
											"end": 1890,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1851,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1846,
											"end": 1861,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "DD62ED3E"
										},
										{
											"begin": 1870,
											"end": 1874,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 1877,
											"end": 1884,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 1846,
											"end": 1885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1846,
											"end": 1885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1890,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1891,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 1829,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 1808,
											"end": 1971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2031,
											"end": 2053,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 2031,
											"end": 2053,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2031,
											"end": 2053,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2062,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2064,
											"end": 2069,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 2008,
											"end": 2070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 1981,
											"end": 2071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2071,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 1981,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 2078,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 2078,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 2078,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 2078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2084,
											"end": 2394,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2084,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2210,
											"end": 2230,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2275,
											"end": 2280,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2238,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2248,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2233,
											"end": 2248,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2248,
											"name": "PUSH",
											"source": 3,
											"value": "DD62ED3E"
										},
										{
											"begin": 2257,
											"end": 2261,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2271,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2233,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2233,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2233,
											"end": 2280,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2280,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 2233,
											"end": 2280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2280,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2233,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2210,
											"end": 2280,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2210,
											"end": 2280,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2290,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 2310,
											"end": 2315,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2340,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 2340,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2340,
											"end": 2362,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2364,
											"end": 2371,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2385,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 2317,
											"end": 2386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2290,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 2290,
											"end": 2387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2290,
											"end": 2387,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 2290,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2200,
											"end": 2394,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2394,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2394,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2394,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4189,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 4220,
											"end": 4224,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 3,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4200,
											"end": 4205,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4295,
											"end": 4296,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4275,
											"end": 4285,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4292,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4296,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4370,
											"end": 4380,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 4359,
											"end": 4389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 4351,
											"end": 4436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3817,
											"end": 4453,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 4453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4006,
											"end": 4018,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 4059,
											"end": 4065,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4067,
											"end": 4071,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4073,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4076,
											"end": 4088,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4037,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 4037,
											"end": 4089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4030,
											"end": 4089,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4030,
											"end": 4089,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3873,
											"end": 4096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5137,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5182,
											"end": 5187,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5157,
											"end": 5178,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 5157,
											"end": 5187,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5157,
											"end": 5187,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 5149,
											"end": 5230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5241,
											"end": 5253,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5255,
											"end": 5278,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5288,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5293,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5282,
											"end": 5293,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5301,
											"end": 5306,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5312,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 5282,
											"end": 5313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 5357,
											"end": 5363,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5365,
											"end": 5372,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5374,
											"end": 5384,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5386,
											"end": 5398,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5356,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 5330,
											"end": 5399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4960,
											"end": 5406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7646,
											"end": 7658,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7674,
											"end": 7681,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7722,
											"end": 7723,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7701,
											"end": 7711,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7701,
											"end": 7718,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7701,
											"end": 7723,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 7927,
											"end": 7933,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7916,
											"end": 7926,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 7916,
											"end": 7934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 7908,
											"end": 7968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8003,
											"end": 8013,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8044,
											"end": 8077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 8052,
											"end": 8062,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8064,
											"end": 8076,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8044,
											"end": 8051,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 8044,
											"end": 8077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8044,
											"end": 8077,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 8044,
											"end": 8077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7466,
											"end": 8094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8616,
											"end": 9156,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 8616,
											"end": 9156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8795,
											"end": 8796,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8775,
											"end": 8785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8775,
											"end": 8792,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8775,
											"end": 8796,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9003,
											"end": 9013,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8997,
											"end": 9014,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9059,
											"end": 9074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9046,
											"end": 9056,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9042,
											"end": 9044,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9038,
											"end": 9057,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9031,
											"end": 9075,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9126,
											"end": 9138,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 9119,
											"end": 9139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1677,
											"end": 2151,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1677,
											"end": 2151,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1751,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1759,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1802,
											"end": 1804,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1790,
											"end": 1799,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1781,
											"end": 1788,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1777,
											"end": 1800,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1773,
											"end": 1805,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1770,
											"end": 1889,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1770,
											"end": 1889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 1770,
											"end": 1889,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1808,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 1808,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 1808,
											"end": 1887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1808,
											"end": 1887,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 1808,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1770,
											"end": 1889,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 1770,
											"end": 1889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 1998,
											"end": 2005,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1978,
											"end": 1987,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1974,
											"end": 1996,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 1953,
											"end": 2006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1943,
											"end": 2006,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1943,
											"end": 2006,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1899,
											"end": 2016,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2055,
											"end": 2057,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2081,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 2126,
											"end": 2133,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2123,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2106,
											"end": 2115,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2102,
											"end": 2124,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2081,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 2081,
											"end": 2134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2081,
											"end": 2134,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 2081,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2071,
											"end": 2134,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2071,
											"end": 2134,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2144,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1677,
											"end": 2151,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1677,
											"end": 2151,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1677,
											"end": 2151,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1677,
											"end": 2151,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1677,
											"end": 2151,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1677,
											"end": 2151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2157,
											"end": 2275,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 2157,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2244,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 2262,
											"end": 2267,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2244,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 2244,
											"end": 2268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2244,
											"end": 2268,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 2244,
											"end": 2268,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2239,
											"end": 2242,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2269,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2157,
											"end": 2275,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2157,
											"end": 2275,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2157,
											"end": 2275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2281,
											"end": 2503,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 2281,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2374,
											"end": 2378,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2412,
											"end": 2414,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2401,
											"end": 2410,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2397,
											"end": 2415,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2389,
											"end": 2415,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2389,
											"end": 2415,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2425,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 2493,
											"end": 2494,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2482,
											"end": 2491,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2478,
											"end": 2495,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2475,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2425,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 2425,
											"end": 2496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2425,
											"end": 2496,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 2425,
											"end": 2496,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2281,
											"end": 2503,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2281,
											"end": 2503,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2281,
											"end": 2503,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2281,
											"end": 2503,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2281,
											"end": 2503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2509,
											"end": 2838,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 2509,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2568,
											"end": 2574,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2619,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2605,
											"end": 2614,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2596,
											"end": 2603,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2592,
											"end": 2615,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2588,
											"end": 2620,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2585,
											"end": 2704,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2585,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 2585,
											"end": 2704,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2623,
											"end": 2702,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 2623,
											"end": 2702,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 2623,
											"end": 2702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2623,
											"end": 2702,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 2623,
											"end": 2702,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2585,
											"end": 2704,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 2585,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2743,
											"end": 2744,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2804,
											"end": 2810,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2793,
											"end": 2802,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2789,
											"end": 2811,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 2768,
											"end": 2821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2821,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 2768,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 2821,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 2821,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2714,
											"end": 2831,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2509,
											"end": 2838,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2509,
											"end": 2838,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2509,
											"end": 2838,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2509,
											"end": 2838,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2509,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2844,
											"end": 2934,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 2844,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2878,
											"end": 2885,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2921,
											"end": 2926,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2914,
											"end": 2927,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 2928,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2896,
											"end": 2928,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2896,
											"end": 2928,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2844,
											"end": 2934,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2844,
											"end": 2934,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2844,
											"end": 2934,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2844,
											"end": 2934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 3049,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 2940,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3021,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 3036,
											"end": 3041,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3021,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 3021,
											"end": 3042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3021,
											"end": 3042,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 3021,
											"end": 3042,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3016,
											"end": 3019,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3009,
											"end": 3043,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 3049,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 3049,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 3049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3055,
											"end": 3265,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 3055,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3142,
											"end": 3146,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3180,
											"end": 3182,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3169,
											"end": 3178,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3157,
											"end": 3183,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3157,
											"end": 3183,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 3255,
											"end": 3256,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3244,
											"end": 3253,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3240,
											"end": 3257,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3237,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 3193,
											"end": 3258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3258,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 3193,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3055,
											"end": 3265,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3055,
											"end": 3265,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3055,
											"end": 3265,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3055,
											"end": 3265,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3055,
											"end": 3265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3389,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 3271,
											"end": 3389,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3358,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 3376,
											"end": 3381,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3358,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 3358,
											"end": 3382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3358,
											"end": 3382,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 3358,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3353,
											"end": 3356,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3346,
											"end": 3383,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3389,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3389,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3395,
											"end": 3617,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 3395,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3526,
											"end": 3528,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3515,
											"end": 3524,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3511,
											"end": 3529,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3503,
											"end": 3529,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3503,
											"end": 3529,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3539,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 3607,
											"end": 3608,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3596,
											"end": 3605,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3592,
											"end": 3609,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3583,
											"end": 3589,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3539,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 3539,
											"end": 3610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3539,
											"end": 3610,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 3539,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3395,
											"end": 3617,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3395,
											"end": 3617,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3395,
											"end": 3617,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3395,
											"end": 3617,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3395,
											"end": 3617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3792,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 3623,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3707,
											"end": 3718,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3741,
											"end": 3747,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3736,
											"end": 3739,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3729,
											"end": 3748,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3781,
											"end": 3785,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3776,
											"end": 3779,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3772,
											"end": 3786,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3757,
											"end": 3786,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3757,
											"end": 3786,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3792,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3792,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3798,
											"end": 3970,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 3798,
											"end": 3970,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3938,
											"end": 3962,
											"name": "PUSH",
											"source": 9,
											"value": "4F6E6C792061646D696E2063616E2063616C6C20697400000000000000000000"
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3926,
											"end": 3932,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3936,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3915,
											"end": 3963,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3798,
											"end": 3970,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3798,
											"end": 3970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3976,
											"end": 4342,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 3976,
											"end": 4342,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4118,
											"end": 4121,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 4203,
											"end": 4205,
											"name": "PUSH",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 4198,
											"end": 4201,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 4139,
											"end": 4206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4206,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 4139,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4206,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4206,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4308,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 4304,
											"end": 4307,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4308,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 4215,
											"end": 4308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4308,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 4215,
											"end": 4308,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4333,
											"end": 4335,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4328,
											"end": 4331,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4324,
											"end": 4336,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4317,
											"end": 4336,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4317,
											"end": 4336,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3976,
											"end": 4342,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3976,
											"end": 4342,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3976,
											"end": 4342,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3976,
											"end": 4342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4767,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 4348,
											"end": 4767,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4514,
											"end": 4518,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4552,
											"end": 4554,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4541,
											"end": 4550,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4555,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4529,
											"end": 4555,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4529,
											"end": 4555,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4601,
											"end": 4610,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4595,
											"end": 4599,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4591,
											"end": 4611,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4587,
											"end": 4588,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4576,
											"end": 4585,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4572,
											"end": 4589,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4565,
											"end": 4612,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 4755,
											"end": 4759,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 4629,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 4760,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 4629,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4621,
											"end": 4760,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4621,
											"end": 4760,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4767,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4767,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4767,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4773,
											"end": 5215,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 4773,
											"end": 5215,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 4926,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4960,
											"end": 4962,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4945,
											"end": 4963,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4937,
											"end": 4963,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4937,
											"end": 4963,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4973,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 5041,
											"end": 5042,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5026,
											"end": 5043,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5017,
											"end": 5023,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4973,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 4973,
											"end": 5044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4973,
											"end": 5044,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 4973,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5054,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 5122,
											"end": 5124,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5111,
											"end": 5120,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5107,
											"end": 5125,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5098,
											"end": 5104,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5054,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 5054,
											"end": 5126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5054,
											"end": 5126,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 5054,
											"end": 5126,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5136,
											"end": 5208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 5204,
											"end": 5206,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5193,
											"end": 5202,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5189,
											"end": 5207,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5180,
											"end": 5186,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5136,
											"end": 5208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 5136,
											"end": 5208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5136,
											"end": 5208,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 5136,
											"end": 5208,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4773,
											"end": 5215,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 4773,
											"end": 5215,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4773,
											"end": 5215,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4773,
											"end": 5215,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4773,
											"end": 5215,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4773,
											"end": 5215,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4773,
											"end": 5215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5221,
											"end": 5553,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 5221,
											"end": 5553,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5346,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5380,
											"end": 5382,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5369,
											"end": 5378,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5365,
											"end": 5383,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5357,
											"end": 5383,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5357,
											"end": 5383,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5393,
											"end": 5464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 5461,
											"end": 5462,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5450,
											"end": 5459,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5446,
											"end": 5463,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5437,
											"end": 5443,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5393,
											"end": 5464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 5393,
											"end": 5464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5393,
											"end": 5464,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 5393,
											"end": 5464,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5474,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 5542,
											"end": 5544,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5531,
											"end": 5540,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5527,
											"end": 5545,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5518,
											"end": 5524,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5474,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 5474,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5474,
											"end": 5546,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 5474,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5221,
											"end": 5553,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5221,
											"end": 5553,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5221,
											"end": 5553,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5221,
											"end": 5553,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5221,
											"end": 5553,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5221,
											"end": 5553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5559,
											"end": 5702,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 5559,
											"end": 5702,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5616,
											"end": 5621,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5647,
											"end": 5653,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5641,
											"end": 5654,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5632,
											"end": 5654,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5632,
											"end": 5654,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5663,
											"end": 5696,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 5690,
											"end": 5695,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5663,
											"end": 5696,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 5663,
											"end": 5696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5663,
											"end": 5696,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 5663,
											"end": 5696,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5559,
											"end": 5702,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5559,
											"end": 5702,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5559,
											"end": 5702,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5559,
											"end": 5702,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5559,
											"end": 5702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5708,
											"end": 6059,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 5708,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5778,
											"end": 5784,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5827,
											"end": 5829,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5815,
											"end": 5824,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5806,
											"end": 5813,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5802,
											"end": 5825,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5798,
											"end": 5830,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5795,
											"end": 5914,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5795,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 5795,
											"end": 5914,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5833,
											"end": 5912,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 5833,
											"end": 5912,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 5833,
											"end": 5912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5833,
											"end": 5912,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 5833,
											"end": 5912,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5795,
											"end": 5914,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 5795,
											"end": 5914,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5953,
											"end": 5954,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5978,
											"end": 6042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 6034,
											"end": 6041,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6031,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6014,
											"end": 6023,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6010,
											"end": 6032,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5978,
											"end": 6042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 5978,
											"end": 6042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5978,
											"end": 6042,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 5978,
											"end": 6042,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5968,
											"end": 6042,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5968,
											"end": 6042,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5924,
											"end": 6052,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5708,
											"end": 6059,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5708,
											"end": 6059,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5708,
											"end": 6059,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5708,
											"end": 6059,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5708,
											"end": 6059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6065,
											"end": 6397,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 6065,
											"end": 6397,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6186,
											"end": 6190,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6224,
											"end": 6226,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6213,
											"end": 6222,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6209,
											"end": 6227,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6201,
											"end": 6227,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6201,
											"end": 6227,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6237,
											"end": 6308,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 6305,
											"end": 6306,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6294,
											"end": 6303,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6290,
											"end": 6307,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6281,
											"end": 6287,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6237,
											"end": 6308,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 6237,
											"end": 6308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6237,
											"end": 6308,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 6237,
											"end": 6308,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6318,
											"end": 6390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 6386,
											"end": 6388,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6375,
											"end": 6384,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6371,
											"end": 6389,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6362,
											"end": 6368,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6318,
											"end": 6390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 6318,
											"end": 6390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6318,
											"end": 6390,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 6318,
											"end": 6390,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6065,
											"end": 6397,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6065,
											"end": 6397,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6065,
											"end": 6397,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6065,
											"end": 6397,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6065,
											"end": 6397,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6065,
											"end": 6397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6403,
											"end": 6628,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 6403,
											"end": 6628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6543,
											"end": 6577,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 6539,
											"end": 6540,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6531,
											"end": 6537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6527,
											"end": 6541,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6520,
											"end": 6578,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6612,
											"end": 6620,
											"name": "PUSH",
											"source": 9,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6607,
											"end": 6609,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6599,
											"end": 6605,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6595,
											"end": 6610,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6588,
											"end": 6621,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6403,
											"end": 6628,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6403,
											"end": 6628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6634,
											"end": 7000,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 6634,
											"end": 7000,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6776,
											"end": 6779,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6797,
											"end": 6864,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 6861,
											"end": 6863,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 6856,
											"end": 6859,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6797,
											"end": 6864,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 6797,
											"end": 6864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6797,
											"end": 6864,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 6797,
											"end": 6864,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6790,
											"end": 6864,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6790,
											"end": 6864,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6873,
											"end": 6966,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 6962,
											"end": 6965,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6873,
											"end": 6966,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 6873,
											"end": 6966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6873,
											"end": 6966,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 6873,
											"end": 6966,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6991,
											"end": 6993,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6986,
											"end": 6989,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6982,
											"end": 6994,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6975,
											"end": 6994,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6975,
											"end": 6994,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6634,
											"end": 7000,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6634,
											"end": 7000,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6634,
											"end": 7000,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6634,
											"end": 7000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7006,
											"end": 7425,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 7006,
											"end": 7425,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7172,
											"end": 7176,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7210,
											"end": 7212,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7199,
											"end": 7208,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7195,
											"end": 7213,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7187,
											"end": 7213,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7187,
											"end": 7213,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7259,
											"end": 7268,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7253,
											"end": 7257,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7249,
											"end": 7269,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7245,
											"end": 7246,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7234,
											"end": 7243,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7230,
											"end": 7247,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7223,
											"end": 7270,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7287,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 7413,
											"end": 7417,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7287,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 7287,
											"end": 7418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7287,
											"end": 7418,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 7287,
											"end": 7418,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7279,
											"end": 7418,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7279,
											"end": 7418,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7006,
											"end": 7425,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7006,
											"end": 7425,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7006,
											"end": 7425,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7006,
											"end": 7425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7431,
											"end": 7613,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 7431,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7571,
											"end": 7605,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 7567,
											"end": 7568,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7559,
											"end": 7565,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7555,
											"end": 7569,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7548,
											"end": 7606,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7431,
											"end": 7613,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7431,
											"end": 7613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7619,
											"end": 7985,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 7619,
											"end": 7985,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7761,
											"end": 7764,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7782,
											"end": 7849,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 7846,
											"end": 7848,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7841,
											"end": 7844,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7782,
											"end": 7849,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 7782,
											"end": 7849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7782,
											"end": 7849,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 7782,
											"end": 7849,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7775,
											"end": 7849,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7775,
											"end": 7849,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7858,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 7947,
											"end": 7950,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7858,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 7858,
											"end": 7951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7858,
											"end": 7951,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 7858,
											"end": 7951,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7976,
											"end": 7978,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7971,
											"end": 7974,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7967,
											"end": 7979,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7960,
											"end": 7979,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7960,
											"end": 7979,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7619,
											"end": 7985,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7619,
											"end": 7985,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7619,
											"end": 7985,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7619,
											"end": 7985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7991,
											"end": 8410,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 7991,
											"end": 8410,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8157,
											"end": 8161,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8195,
											"end": 8197,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8184,
											"end": 8193,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8198,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8172,
											"end": 8198,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8172,
											"end": 8198,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8244,
											"end": 8253,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8238,
											"end": 8242,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8234,
											"end": 8254,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8230,
											"end": 8231,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8219,
											"end": 8228,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8215,
											"end": 8232,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8208,
											"end": 8255,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8272,
											"end": 8403,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 8398,
											"end": 8402,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8272,
											"end": 8403,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 8272,
											"end": 8403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8272,
											"end": 8403,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 8272,
											"end": 8403,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8264,
											"end": 8403,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8264,
											"end": 8403,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7991,
											"end": 8410,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7991,
											"end": 8410,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7991,
											"end": 8410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7991,
											"end": 8410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8416,
											"end": 8657,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 8416,
											"end": 8657,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8556,
											"end": 8590,
											"name": "PUSH",
											"source": 9,
											"value": "5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F"
										},
										{
											"begin": 8552,
											"end": 8553,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8544,
											"end": 8550,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8540,
											"end": 8554,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8533,
											"end": 8591,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8625,
											"end": 8649,
											"name": "PUSH",
											"source": 9,
											"value": "20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000"
										},
										{
											"begin": 8620,
											"end": 8622,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8612,
											"end": 8618,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8608,
											"end": 8623,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8601,
											"end": 8650,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8416,
											"end": 8657,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8416,
											"end": 8657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8663,
											"end": 9029,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 8663,
											"end": 9029,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8805,
											"end": 8808,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8826,
											"end": 8893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 8890,
											"end": 8892,
											"name": "PUSH",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 8885,
											"end": 8888,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8826,
											"end": 8893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 8826,
											"end": 8893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8826,
											"end": 8893,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 8826,
											"end": 8893,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8819,
											"end": 8893,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8819,
											"end": 8893,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8902,
											"end": 8995,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 8991,
											"end": 8994,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8902,
											"end": 8995,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 8902,
											"end": 8995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8902,
											"end": 8995,
											"name": "tag",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 8902,
											"end": 8995,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9020,
											"end": 9022,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9015,
											"end": 9018,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9011,
											"end": 9023,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9004,
											"end": 9023,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9004,
											"end": 9023,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8663,
											"end": 9029,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8663,
											"end": 9029,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8663,
											"end": 9029,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8663,
											"end": 9029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9035,
											"end": 9454,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 9035,
											"end": 9454,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9201,
											"end": 9205,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9239,
											"end": 9241,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9228,
											"end": 9237,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9224,
											"end": 9242,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9216,
											"end": 9242,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9216,
											"end": 9242,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9288,
											"end": 9297,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9282,
											"end": 9286,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9278,
											"end": 9298,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9274,
											"end": 9275,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9263,
											"end": 9272,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9259,
											"end": 9276,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9252,
											"end": 9299,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9316,
											"end": 9447,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 9442,
											"end": 9446,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9316,
											"end": 9447,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 9316,
											"end": 9447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9316,
											"end": 9447,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 9316,
											"end": 9447,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9308,
											"end": 9447,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9308,
											"end": 9447,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9035,
											"end": 9454,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9035,
											"end": 9454,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9035,
											"end": 9454,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9035,
											"end": 9454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9460,
											"end": 9792,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 9460,
											"end": 9792,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9581,
											"end": 9585,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9619,
											"end": 9621,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9608,
											"end": 9617,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9604,
											"end": 9622,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9596,
											"end": 9622,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9596,
											"end": 9622,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9632,
											"end": 9703,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 9700,
											"end": 9701,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9689,
											"end": 9698,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9685,
											"end": 9702,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9676,
											"end": 9682,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9632,
											"end": 9703,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 9632,
											"end": 9703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9632,
											"end": 9703,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 9632,
											"end": 9703,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9713,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 9781,
											"end": 9783,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9770,
											"end": 9779,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9766,
											"end": 9784,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9757,
											"end": 9763,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9713,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 9713,
											"end": 9785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9713,
											"end": 9785,
											"name": "tag",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 9713,
											"end": 9785,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9460,
											"end": 9792,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9460,
											"end": 9792,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9460,
											"end": 9792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9460,
											"end": 9792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9460,
											"end": 9792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9460,
											"end": 9792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9798,
											"end": 9978,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 9798,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9846,
											"end": 9923,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9843,
											"end": 9844,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9924,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9943,
											"end": 9947,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 9940,
											"end": 9941,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9933,
											"end": 9948,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9967,
											"end": 9971,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9957,
											"end": 9972,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9984,
											"end": 10175,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 9984,
											"end": 10175,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10024,
											"end": 10027,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10043,
											"end": 10063,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 10061,
											"end": 10062,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10043,
											"end": 10063,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 10043,
											"end": 10063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10043,
											"end": 10063,
											"name": "tag",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 10043,
											"end": 10063,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10038,
											"end": 10063,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10038,
											"end": 10063,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10077,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 10095,
											"end": 10096,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10077,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 10077,
											"end": 10097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10077,
											"end": 10097,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 10077,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10072,
											"end": 10097,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10072,
											"end": 10097,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10120,
											"end": 10121,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10117,
											"end": 10118,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10122,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10106,
											"end": 10122,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10106,
											"end": 10122,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10141,
											"end": 10144,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10138,
											"end": 10139,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10135,
											"end": 10145,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 10132,
											"end": 10168,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10132,
											"end": 10168,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 10132,
											"end": 10168,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10148,
											"end": 10166,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 10148,
											"end": 10166,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 10148,
											"end": 10166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10148,
											"end": 10166,
											"name": "tag",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 10148,
											"end": 10166,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10132,
											"end": 10168,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 10132,
											"end": 10168,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9984,
											"end": 10175,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9984,
											"end": 10175,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9984,
											"end": 10175,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9984,
											"end": 10175,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9984,
											"end": 10175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10181,
											"end": 10297,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 10181,
											"end": 10297,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10251,
											"end": 10272,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10251,
											"end": 10272,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 10251,
											"end": 10272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10251,
											"end": 10272,
											"name": "tag",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 10251,
											"end": 10272,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10244,
											"end": 10249,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10241,
											"end": 10273,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 10231,
											"end": 10291,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10287,
											"end": 10288,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10284,
											"end": 10285,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10277,
											"end": 10289,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10291,
											"name": "tag",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 10231,
											"end": 10291,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10181,
											"end": 10297,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10181,
											"end": 10297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10303,
											"end": 10440,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 10303,
											"end": 10440,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10357,
											"end": 10362,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10388,
											"end": 10394,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10382,
											"end": 10395,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10373,
											"end": 10395,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10373,
											"end": 10395,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10404,
											"end": 10434,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 10428,
											"end": 10433,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10404,
											"end": 10434,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 10404,
											"end": 10434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10404,
											"end": 10434,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 10404,
											"end": 10434,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10303,
											"end": 10440,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10303,
											"end": 10440,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10303,
											"end": 10440,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10303,
											"end": 10440,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10303,
											"end": 10440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10446,
											"end": 10791,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 10446,
											"end": 10791,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10513,
											"end": 10519,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10562,
											"end": 10564,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10550,
											"end": 10559,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10541,
											"end": 10548,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10537,
											"end": 10560,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10533,
											"end": 10565,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 10530,
											"end": 10649,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10530,
											"end": 10649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 10530,
											"end": 10649,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10568,
											"end": 10647,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 10568,
											"end": 10647,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 10568,
											"end": 10647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10568,
											"end": 10647,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 10568,
											"end": 10647,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10530,
											"end": 10649,
											"name": "tag",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 10530,
											"end": 10649,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10688,
											"end": 10689,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10713,
											"end": 10774,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 10766,
											"end": 10773,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10757,
											"end": 10763,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10746,
											"end": 10755,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10742,
											"end": 10764,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10713,
											"end": 10774,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 10713,
											"end": 10774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10713,
											"end": 10774,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 10713,
											"end": 10774,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10703,
											"end": 10774,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10703,
											"end": 10774,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10659,
											"end": 10784,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10446,
											"end": 10791,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10446,
											"end": 10791,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10446,
											"end": 10791,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10446,
											"end": 10791,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10446,
											"end": 10791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10797,
											"end": 11026,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 10797,
											"end": 11026,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10937,
											"end": 10971,
											"name": "PUSH",
											"source": 9,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 10933,
											"end": 10934,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10925,
											"end": 10931,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10921,
											"end": 10935,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10914,
											"end": 10972,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11006,
											"end": 11018,
											"name": "PUSH",
											"source": 9,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 11001,
											"end": 11003,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10993,
											"end": 10999,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10989,
											"end": 11004,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10982,
											"end": 11019,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10797,
											"end": 11026,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10797,
											"end": 11026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11032,
											"end": 11398,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 11032,
											"end": 11398,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11174,
											"end": 11177,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11195,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 11259,
											"end": 11261,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 11254,
											"end": 11257,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11195,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 11195,
											"end": 11262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11195,
											"end": 11262,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 11195,
											"end": 11262,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11188,
											"end": 11262,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11188,
											"end": 11262,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11271,
											"end": 11364,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 11360,
											"end": 11363,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11271,
											"end": 11364,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 11271,
											"end": 11364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11271,
											"end": 11364,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 11271,
											"end": 11364,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11389,
											"end": 11391,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11384,
											"end": 11387,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11380,
											"end": 11392,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11373,
											"end": 11392,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11373,
											"end": 11392,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11032,
											"end": 11398,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11032,
											"end": 11398,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11032,
											"end": 11398,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11032,
											"end": 11398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11404,
											"end": 11823,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 11404,
											"end": 11823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11570,
											"end": 11574,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11608,
											"end": 11610,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11597,
											"end": 11606,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11593,
											"end": 11611,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11585,
											"end": 11611,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11585,
											"end": 11611,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11657,
											"end": 11666,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11651,
											"end": 11655,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11647,
											"end": 11667,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11643,
											"end": 11644,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11632,
											"end": 11641,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11628,
											"end": 11645,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11621,
											"end": 11668,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11685,
											"end": 11816,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 11811,
											"end": 11815,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11685,
											"end": 11816,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 11685,
											"end": 11816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11685,
											"end": 11816,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 11685,
											"end": 11816,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11677,
											"end": 11816,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11677,
											"end": 11816,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11404,
											"end": 11823,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11404,
											"end": 11823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11404,
											"end": 11823,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11404,
											"end": 11823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11829,
											"end": 12054,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 11829,
											"end": 12054,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11969,
											"end": 12003,
											"name": "PUSH",
											"source": 9,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 11965,
											"end": 11966,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11957,
											"end": 11963,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11953,
											"end": 11967,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11946,
											"end": 12004,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12038,
											"end": 12046,
											"name": "PUSH",
											"source": 9,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12033,
											"end": 12035,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12025,
											"end": 12031,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12021,
											"end": 12036,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12014,
											"end": 12047,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11829,
											"end": 12054,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11829,
											"end": 12054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12060,
											"end": 12426,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 12060,
											"end": 12426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12202,
											"end": 12205,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12223,
											"end": 12290,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 12287,
											"end": 12289,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 12282,
											"end": 12285,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12223,
											"end": 12290,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 12223,
											"end": 12290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12223,
											"end": 12290,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 12223,
											"end": 12290,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12216,
											"end": 12290,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12216,
											"end": 12290,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12299,
											"end": 12392,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 12388,
											"end": 12391,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12299,
											"end": 12392,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 12299,
											"end": 12392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12299,
											"end": 12392,
											"name": "tag",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 12299,
											"end": 12392,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12417,
											"end": 12419,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12412,
											"end": 12415,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12408,
											"end": 12420,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12401,
											"end": 12420,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12401,
											"end": 12420,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12060,
											"end": 12426,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12060,
											"end": 12426,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12060,
											"end": 12426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12060,
											"end": 12426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12432,
											"end": 12851,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 12432,
											"end": 12851,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12598,
											"end": 12602,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12636,
											"end": 12638,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12625,
											"end": 12634,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12621,
											"end": 12639,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12613,
											"end": 12639,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12613,
											"end": 12639,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12685,
											"end": 12694,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12683,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12675,
											"end": 12695,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12671,
											"end": 12672,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12660,
											"end": 12669,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12656,
											"end": 12673,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12649,
											"end": 12696,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12713,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 12839,
											"end": 12843,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12713,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 12713,
											"end": 12844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12713,
											"end": 12844,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 12713,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12705,
											"end": 12844,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12705,
											"end": 12844,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12432,
											"end": 12851,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12432,
											"end": 12851,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12432,
											"end": 12851,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12432,
											"end": 12851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12857,
											"end": 12955,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 12857,
											"end": 12955,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12908,
											"end": 12914,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12942,
											"end": 12947,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12936,
											"end": 12948,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12926,
											"end": 12948,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12926,
											"end": 12948,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12857,
											"end": 12955,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12857,
											"end": 12955,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12857,
											"end": 12955,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12857,
											"end": 12955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12961,
											"end": 13108,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 12961,
											"end": 13108,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13062,
											"end": 13073,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13099,
											"end": 13102,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13084,
											"end": 13102,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13084,
											"end": 13102,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12961,
											"end": 13108,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12961,
											"end": 13108,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12961,
											"end": 13108,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12961,
											"end": 13108,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12961,
											"end": 13108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13360,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 13114,
											"end": 13360,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13195,
											"end": 13196,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13205,
											"end": 13318,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 13205,
											"end": 13318,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13219,
											"end": 13225,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13216,
											"end": 13217,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13213,
											"end": 13226,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 13205,
											"end": 13318,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13205,
											"end": 13318,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 13205,
											"end": 13318,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13304,
											"end": 13305,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13299,
											"end": 13302,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13295,
											"end": 13306,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13289,
											"end": 13307,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13285,
											"end": 13286,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13280,
											"end": 13283,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13276,
											"end": 13287,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13308,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13241,
											"end": 13243,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13238,
											"end": 13239,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13234,
											"end": 13244,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13229,
											"end": 13244,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13229,
											"end": 13244,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13205,
											"end": 13318,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 13205,
											"end": 13318,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13205,
											"end": 13318,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 13205,
											"end": 13318,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13352,
											"end": 13353,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13343,
											"end": 13349,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13338,
											"end": 13341,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13334,
											"end": 13350,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13327,
											"end": 13354,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13176,
											"end": 13360,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13360,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13360,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13360,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13366,
											"end": 13752,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 13366,
											"end": 13752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13470,
											"end": 13473,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13498,
											"end": 13536,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 13530,
											"end": 13535,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13498,
											"end": 13536,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 13498,
											"end": 13536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13498,
											"end": 13536,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 13498,
											"end": 13536,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13552,
											"end": 13640,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 13633,
											"end": 13639,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13628,
											"end": 13631,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13552,
											"end": 13640,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 13552,
											"end": 13640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13552,
											"end": 13640,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 13552,
											"end": 13640,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13545,
											"end": 13640,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 13545,
											"end": 13640,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13649,
											"end": 13714,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 13707,
											"end": 13713,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13702,
											"end": 13705,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13695,
											"end": 13699,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13688,
											"end": 13693,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 13684,
											"end": 13700,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13649,
											"end": 13714,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 13649,
											"end": 13714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13649,
											"end": 13714,
											"name": "tag",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 13649,
											"end": 13714,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13739,
											"end": 13745,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13734,
											"end": 13737,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13730,
											"end": 13746,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13723,
											"end": 13746,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13723,
											"end": 13746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13474,
											"end": 13752,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13366,
											"end": 13752,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13366,
											"end": 13752,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13366,
											"end": 13752,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13366,
											"end": 13752,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13366,
											"end": 13752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13758,
											"end": 14029,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 13758,
											"end": 14029,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13888,
											"end": 13891,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13910,
											"end": 14003,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 13999,
											"end": 14002,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13990,
											"end": 13996,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13910,
											"end": 14003,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 13910,
											"end": 14003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13910,
											"end": 14003,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 13910,
											"end": 14003,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13903,
											"end": 14003,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13903,
											"end": 14003,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14020,
											"end": 14023,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14013,
											"end": 14023,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14013,
											"end": 14023,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13758,
											"end": 14029,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13758,
											"end": 14029,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13758,
											"end": 14029,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13758,
											"end": 14029,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13758,
											"end": 14029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14035,
											"end": 14214,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 14035,
											"end": 14214,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14175,
											"end": 14206,
											"name": "PUSH",
											"source": 9,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 14171,
											"end": 14172,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14163,
											"end": 14169,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14159,
											"end": 14173,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14152,
											"end": 14207,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14035,
											"end": 14214,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14035,
											"end": 14214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14220,
											"end": 14586,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 14220,
											"end": 14586,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14362,
											"end": 14365,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14383,
											"end": 14450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 14447,
											"end": 14449,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 14442,
											"end": 14445,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14383,
											"end": 14450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 14383,
											"end": 14450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14383,
											"end": 14450,
											"name": "tag",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 14383,
											"end": 14450,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14376,
											"end": 14450,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14376,
											"end": 14450,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14459,
											"end": 14552,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 14548,
											"end": 14551,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14459,
											"end": 14552,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 14459,
											"end": 14552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14459,
											"end": 14552,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 14459,
											"end": 14552,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14577,
											"end": 14579,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14572,
											"end": 14575,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14568,
											"end": 14580,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14561,
											"end": 14580,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14561,
											"end": 14580,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14220,
											"end": 14586,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14220,
											"end": 14586,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14220,
											"end": 14586,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14220,
											"end": 14586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14592,
											"end": 15011,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 14592,
											"end": 15011,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14758,
											"end": 14762,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14796,
											"end": 14798,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14785,
											"end": 14794,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14781,
											"end": 14799,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14773,
											"end": 14799,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14773,
											"end": 14799,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14845,
											"end": 14854,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14839,
											"end": 14843,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14835,
											"end": 14855,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14831,
											"end": 14832,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14820,
											"end": 14829,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14816,
											"end": 14833,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14809,
											"end": 14856,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14873,
											"end": 15004,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 14999,
											"end": 15003,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14873,
											"end": 15004,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 14873,
											"end": 15004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14873,
											"end": 15004,
											"name": "tag",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 14873,
											"end": 15004,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14865,
											"end": 15004,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14865,
											"end": 15004,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14592,
											"end": 15011,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14592,
											"end": 15011,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14592,
											"end": 15011,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14592,
											"end": 15011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15017,
											"end": 15116,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 15017,
											"end": 15116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15069,
											"end": 15075,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15103,
											"end": 15108,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15097,
											"end": 15109,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15087,
											"end": 15109,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15087,
											"end": 15109,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15017,
											"end": 15116,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15017,
											"end": 15116,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15017,
											"end": 15116,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15017,
											"end": 15116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15122,
											"end": 15224,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 15122,
											"end": 15224,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15163,
											"end": 15169,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15214,
											"end": 15216,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 15210,
											"end": 15217,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 15205,
											"end": 15207,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 15198,
											"end": 15203,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15194,
											"end": 15208,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15190,
											"end": 15218,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15180,
											"end": 15218,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15180,
											"end": 15218,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15122,
											"end": 15224,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15122,
											"end": 15224,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15122,
											"end": 15224,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15122,
											"end": 15224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15230,
											"end": 15607,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 15230,
											"end": 15607,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15318,
											"end": 15321,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15385,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 15379,
											"end": 15384,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15346,
											"end": 15385,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 15346,
											"end": 15385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15346,
											"end": 15385,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 15346,
											"end": 15385,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15401,
											"end": 15472,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 15465,
											"end": 15471,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15460,
											"end": 15463,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 15401,
											"end": 15472,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 15401,
											"end": 15472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15401,
											"end": 15472,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 15401,
											"end": 15472,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15394,
											"end": 15472,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 15394,
											"end": 15472,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15481,
											"end": 15546,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 15539,
											"end": 15545,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15534,
											"end": 15537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 15527,
											"end": 15531,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15520,
											"end": 15525,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 15516,
											"end": 15532,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15481,
											"end": 15546,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 15481,
											"end": 15546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15481,
											"end": 15546,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 15481,
											"end": 15546,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15571,
											"end": 15600,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 15593,
											"end": 15599,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15571,
											"end": 15600,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 15571,
											"end": 15600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15571,
											"end": 15600,
											"name": "tag",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 15571,
											"end": 15600,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15566,
											"end": 15569,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 15562,
											"end": 15601,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15555,
											"end": 15601,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15555,
											"end": 15601,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15322,
											"end": 15607,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15230,
											"end": 15607,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15230,
											"end": 15607,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15230,
											"end": 15607,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15230,
											"end": 15607,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15230,
											"end": 15607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15613,
											"end": 15926,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 15613,
											"end": 15926,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15726,
											"end": 15730,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15764,
											"end": 15766,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15753,
											"end": 15762,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15749,
											"end": 15767,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15741,
											"end": 15767,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15741,
											"end": 15767,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15813,
											"end": 15822,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15807,
											"end": 15811,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15803,
											"end": 15823,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15799,
											"end": 15800,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15788,
											"end": 15797,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15784,
											"end": 15801,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15777,
											"end": 15824,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15841,
											"end": 15919,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 15914,
											"end": 15918,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15905,
											"end": 15911,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 15841,
											"end": 15919,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 15841,
											"end": 15919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15841,
											"end": 15919,
											"name": "tag",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 15841,
											"end": 15919,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15833,
											"end": 15919,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15833,
											"end": 15919,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15613,
											"end": 15926,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15613,
											"end": 15926,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15613,
											"end": 15926,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15613,
											"end": 15926,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15613,
											"end": 15926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Auth.sol",
								"contracts/Stake.sol",
								"contracts/interfae/IConstant.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_approve()": "6d101d50",
							"_balanceOf(address)": "cca3e832",
							"_increaseAllowance()": "c8f72c84",
							"_initToken(address,address)": "04dd06f5",
							"_stake(address,uint256)": "aa0d97b3",
							"_unStake(address,uint256)": "03974908",
							"_withdraw(address,uint256)": "b790a77b",
							"addAdmin(address)": "70480275",
							"delAdmin(address)": "62d91855",
							"getValue()": "20965255",
							"isAdmin(address)": "24d7806c",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"cons\",\"type\":\"address\"}],\"name\":\"InitTokenEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UnStakeEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"when\",\"type\":\"uint256\"}],\"name\":\"WithdrawalEvent\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"_balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_increaseAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"consAddress\",\"type\":\"address\"}],\"name\":\"_initToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"acc\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"_stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"acc\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"_unStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"acc\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"_withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"delAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Stake.sol\":\"Stake\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/Auth.sol\":{\"keccak256\":\"0x11fb0d14797e98848ce8c68672bbd10797995cb67ab6bdfec6d23b2da01c9ad5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://1fd71bbdc0fdcec6c4e866faec2aa107b392970711c68c8573df1c97c15a377f\",\"dweb:/ipfs/QmeHLWEGWuF29RCSuBLu3xmJ8cHzk7SVbV3fpYtvRrVRkW\"]},\"contracts/Stake.sol\":{\"keccak256\":\"0x24fc491e78d163da44965995c990814ff137dcae2768c0150f2876fd77304220\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d9166c02adcaa891ff43663d51945c4ae6ea1afe4a91bd4efb893ee9b67f5c4c\",\"dweb:/ipfs/Qma1AbpxKXoETGgonz4rqu5uX8B52EFS9NieaqAEoL9U6m\"]},\"contracts/interfae/IConstant.sol\":{\"keccak256\":\"0xe6d2d54f6e20b9ff076e90c523a1e2cb5cde1f0f88bfaed297de7cb635e61ffe\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c6bb721a2a56b26d5140c38740199bcf9b4bcedd1a3f612505ac33cd31e0c616\",\"dweb:/ipfs/QmSDbtTQ7S2yj4Yfsx4h3cYvUTZR6K6L1i4LKPJRgGhVWi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/Stake.sol:Stake",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 868,
								"contract": "contracts/Stake.sol:Stake",
								"label": "_admins",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1001,
								"contract": "contracts/Stake.sol:Stake",
								"label": "token",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)190"
							},
							{
								"astId": 1010,
								"contract": "contracts/Stake.sol:Stake",
								"label": "cons",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IConstant)1323"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IConstant)1323": {
								"encoding": "inplace",
								"label": "contract IConstant",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)190": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfae/IConstant.sol": {
				"IConstant": {
					"abi": [
						{
							"inputs": [],
							"name": "getAllCons",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCpu",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCpuWeights",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getGraphicsCard",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getGraphicsCardWeights",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getHardDisk",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getHardDiskWeights",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getIP",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMemWeights",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMemory",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOffline",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOnline",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRendering",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStakeAmountLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalTokenIssuance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "setStakeAmountLimit",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAllCons()": "8e41abab",
							"getCpu()": "afc1c88e",
							"getCpuWeights()": "3bf331cd",
							"getGraphicsCard()": "a63b6188",
							"getGraphicsCardWeights()": "927e00e8",
							"getHardDisk()": "b10186fd",
							"getHardDiskWeights()": "092afee3",
							"getIP()": "96355b2e",
							"getMemWeights()": "ba852775",
							"getMemory()": "3f4702c0",
							"getOffline()": "5809cdb5",
							"getOnline()": "64693b87",
							"getRendering()": "331b4cda",
							"getStakeAmountLimit()": "9a403ff6",
							"getTotalTokenIssuance()": "36ffc86d",
							"setStakeAmountLimit(uint256)": "c5fc66a4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getAllCons\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCpu\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCpuWeights\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGraphicsCard\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGraphicsCardWeights\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHardDisk\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHardDiskWeights\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIP\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMemWeights\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMemory\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOffline\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOnline\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRendering\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakeAmountLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalTokenIssuance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setStakeAmountLimit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfae/IConstant.sol\":\"IConstant\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfae/IConstant.sol\":{\"keccak256\":\"0xe6d2d54f6e20b9ff076e90c523a1e2cb5cde1f0f88bfaed297de7cb635e61ffe\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c6bb721a2a56b26d5140c38740199bcf9b4bcedd1a3f612505ac33cd31e0c616\",\"dweb:/ipfs/QmSDbtTQ7S2yj4Yfsx4h3cYvUTZR6K6L1i4LKPJRgGhVWi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							859
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 860,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 859,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								859
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 849,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 849,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							190
						]
					},
					"id": 191,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 190,
							"linearizedBaseContracts": [
								190
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 124,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 133,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 190,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 190,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 154,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 190,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 190,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 174,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 190,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 190,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 191,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							226
						]
					},
					"id": 227,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 192,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "114:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 193,
								"nodeType": "StructuredDocumentation",
								"src": "139:480:2",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 226,
							"linearizedBaseContracts": [
								226
							],
							"name": "IERC20Permit",
							"nameLocation": "630:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "649:792:2",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1455:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1479:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1471:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1502:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1494:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1527:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1519:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1550:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1542:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1574:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1568:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 203,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1568:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1593:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1585:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 205,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1612:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1604:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 207,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1604:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:158:2"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1628:0:2"
									},
									"scope": 226,
									"src": "1446:183:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "1635:294:2",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1943:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1958:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "1950:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1950:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1949:15:2"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "1988:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1988:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:9:2"
									},
									"scope": 226,
									"src": "1934:63:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "2003:128:2",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 225,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2198:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2214:2:2"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "2240:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 222,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2239:9:2"
									},
									"scope": 226,
									"src": "2189:60:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 227,
							"src": "620:1631:2",
							"usedErrors": []
						}
					],
					"src": "114:2138:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							837
						],
						"IERC20": [
							190
						],
						"IERC20Permit": [
							226
						],
						"SafeERC20": [
							507
						]
					},
					"id": 508,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 228,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 229,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 508,
							"sourceUnit": 191,
							"src": "140:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
							"file": "../extensions/draft-IERC20Permit.sol",
							"id": 230,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 508,
							"sourceUnit": 227,
							"src": "164:46:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 231,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 508,
							"sourceUnit": 838,
							"src": "211:36:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 232,
								"nodeType": "StructuredDocumentation",
								"src": "249:457:3",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 507,
							"linearizedBaseContracts": [
								507
							],
							"name": "SafeERC20",
							"nameLocation": "715:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 235,
									"libraryName": {
										"id": 233,
										"name": "Address",
										"nameLocations": [
											"737:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 837,
										"src": "737:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "731:26:3",
									"typeName": {
										"id": 234,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "749:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "865:103:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 246,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "895:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 249,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 238,
																			"src": "925:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$190",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "931:8:3",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 157,
																		"src": "925:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "940:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "925:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 252,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 240,
																	"src": "950:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 253,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "954:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 247,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "902:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "906:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "902:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "902:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 245,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "875:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "875:86:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "875:86:3"
											}
										]
									},
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "772:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "801:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "794:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 237,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 236,
														"name": "IERC20",
														"nameLocations": [
															"794:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "794:6:3"
													},
													"referencedDeclaration": 190,
													"src": "794:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "824:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "816:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "844:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "836:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:71:3"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:0:3"
									},
									"scope": 507,
									"src": "763:205:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "1102:113:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 271,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "1132:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 274,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 261,
																			"src": "1162:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$190",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1168:12:3",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 189,
																		"src": "1162:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1181:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1162:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 277,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 263,
																	"src": "1191:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 278,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 265,
																	"src": "1197:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 279,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "1201:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 272,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1139:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1143:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1139:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1139:68:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 270,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "1112:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1112:96:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 282,
												"nodeType": "ExpressionStatement",
												"src": "1112:96:3"
											}
										]
									},
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "983:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1016:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1009:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 260,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 259,
														"name": "IERC20",
														"nameLocations": [
															"1009:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "1009:6:3"
													},
													"referencedDeclaration": 190,
													"src": "1009:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1039:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1031:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1061:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1053:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1081:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1073:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "999:93:3"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:0:3"
									},
									"scope": 507,
									"src": "974:241:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "1581:497:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 296,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 292,
																			"src": "1830:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 297,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1839:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1830:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 299,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1829:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 304,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1870:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$507",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$507",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 303,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1862:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 302,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1862:7:3",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 305,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1862:13:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 306,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 290,
																					"src": "1877:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 300,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 288,
																					"src": "1846:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$190",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 301,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1852:9:3",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 167,
																				"src": "1846:15:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 307,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1846:39:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1889:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1846:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 310,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1845:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1829:62:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1905:56:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 295,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1808:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1808:163:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 314,
												"nodeType": "ExpressionStatement",
												"src": "1808:163:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 316,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "2001:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 319,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 288,
																			"src": "2031:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$190",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2037:7:3",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 177,
																		"src": "2031:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2045:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2031:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 322,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 290,
																	"src": "2055:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 323,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "2064:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 317,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2008:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 318,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2012:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2008:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2008:62:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 315,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "1981:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1981:90:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "1981:90:3"
											}
										]
									},
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "1221:249:3",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1484:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1512:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1505:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 287,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 286,
														"name": "IERC20",
														"nameLocations": [
															"1505:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "1505:6:3"
													},
													"referencedDeclaration": 190,
													"src": "1505:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1535:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1527:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1560:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1552:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:76:3"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1581:0:3"
									},
									"scope": 507,
									"src": "1475:603:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "2200:194:3",
										"statements": [
											{
												"assignments": [
													339
												],
												"declarations": [
													{
														"constant": false,
														"id": 339,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2218:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 363,
														"src": "2210:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 338,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2210:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 350,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 344,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2257:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$507",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$507",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2249:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 342,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2249:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2249:13:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 346,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "2264:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 340,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 331,
																"src": "2233:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$190",
																	"typeString": "contract IERC20"
																}
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2239:9:3",
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 167,
															"src": "2233:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2233:39:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 348,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "2275:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2233:47:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2210:70:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 352,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "2310:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 355,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 331,
																			"src": "2340:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$190",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2346:7:3",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 177,
																		"src": "2340:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2354:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2340:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 358,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 333,
																	"src": "2364:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 359,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 339,
																	"src": "2373:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 353,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2317:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2321:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2317:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2317:69:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 351,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "2290:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:97:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "2290:97:3"
											}
										]
									},
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2093:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2131:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2124:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 330,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 329,
														"name": "IERC20",
														"nameLocations": [
															"2124:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "2124:6:3"
													},
													"referencedDeclaration": 190,
													"src": "2124:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2154:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2146:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2146:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2179:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2171:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:76:3"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2200:0:3"
									},
									"scope": 507,
									"src": "2084:310:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "2516:370:3",
										"statements": [
											{
												"id": 410,
												"nodeType": "UncheckedBlock",
												"src": "2526:354:3",
												"statements": [
													{
														"assignments": [
															375
														],
														"declarations": [
															{
																"constant": false,
																"id": 375,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2558:12:3",
																"nodeType": "VariableDeclaration",
																"scope": 410,
																"src": "2550:20:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 374,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2550:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 384,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 380,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2597:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$507",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$507",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2589:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 378,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2589:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2589:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 382,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "2604:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 376,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 367,
																	"src": "2573:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2579:9:3",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 167,
																"src": "2573:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2573:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2550:62:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 386,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 375,
																		"src": "2634:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 387,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 371,
																		"src": "2650:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2634:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2657:43:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 385,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2626:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2626:75:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 391,
														"nodeType": "ExpressionStatement",
														"src": "2626:75:3"
													},
													{
														"assignments": [
															393
														],
														"declarations": [
															{
																"constant": false,
																"id": 393,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2723:12:3",
																"nodeType": "VariableDeclaration",
																"scope": 410,
																"src": "2715:20:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 392,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2715:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 397,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 394,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "2738:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 395,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 371,
																"src": "2753:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2738:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2715:43:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 399,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 367,
																	"src": "2792:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 402,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 367,
																					"src": "2822:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$190",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 403,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2828:7:3",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 177,
																				"src": "2822:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 404,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2836:8:3",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2822:22:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 405,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 369,
																			"src": "2846:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 406,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 393,
																			"src": "2855:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 400,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2799:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2803:18:3",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2799:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:69:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 398,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 506,
																"src": "2772:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2772:97:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 409,
														"nodeType": "ExpressionStatement",
														"src": "2772:97:3"
													}
												]
											}
										]
									},
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2409:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2447:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2440:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 366,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 365,
														"name": "IERC20",
														"nameLocations": [
															"2440:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "2440:6:3"
													},
													"referencedDeclaration": 190,
													"src": "2440:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2470:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2462:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2495:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2487:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:76:3"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2516:0:3"
									},
									"scope": 507,
									"src": "2400:486:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "3107:257:3",
										"statements": [
											{
												"assignments": [
													433
												],
												"declarations": [
													{
														"constant": false,
														"id": 433,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "3125:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 467,
														"src": "3117:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 432,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3117:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"arguments": [
														{
															"id": 436,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "3152:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 434,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "3139:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$226",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3145:6:3",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 219,
														"src": "3139:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3139:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3117:41:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "3181:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "3188:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "3197:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 445,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "3204:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 446,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "3214:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 447,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "3217:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 448,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "3220:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 439,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "3168:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$226",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3174:6:3",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 211,
														"src": "3168:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3168:54:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "3168:54:3"
											},
											{
												"assignments": [
													452
												],
												"declarations": [
													{
														"constant": false,
														"id": 452,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "3240:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 467,
														"src": "3232:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 451,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3232:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 457,
												"initialValue": {
													"arguments": [
														{
															"id": 455,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "3266:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 453,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "3253:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$226",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3259:6:3",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 219,
														"src": "3253:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3253:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3232:40:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 459,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "3290:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 460,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "3304:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3318:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3304:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3290:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3321:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 458,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3282:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3282:75:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 466,
												"nodeType": "ExpressionStatement",
												"src": "3282:75:3"
											}
										]
									},
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "2901:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2934:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2921:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$226",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 414,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 413,
														"name": "IERC20Permit",
														"nameLocations": [
															"2921:12:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 226,
														"src": "2921:12:3"
													},
													"referencedDeclaration": 226,
													"src": "2921:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$226",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2957:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2949:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2980:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2972:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2972:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3005:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2997:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2997:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3028:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "3020:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3020:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3052:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "3046:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 424,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3046:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3071:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "3063:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 426,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3090:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "3082:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 428,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3082:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:186:3"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3107:0:3"
									},
									"scope": 507,
									"src": "2892:472:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 505,
										"nodeType": "Block",
										"src": "3817:636:3",
										"statements": [
											{
												"assignments": [
													478
												],
												"declarations": [
													{
														"constant": false,
														"id": 478,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4179:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 505,
														"src": "4166:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 477,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4166:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 487,
												"initialValue": {
													"arguments": [
														{
															"id": 484,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "4220:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4226:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 481,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 472,
																	"src": "4200:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4192:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 479,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4192:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4192:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4207:12:3",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 597,
														"src": "4192:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4192:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4166:95:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 488,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "4275:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4286:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4275:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 490,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4295:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4275:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "IfStatement",
												"src": "4271:176:3",
												"trueBody": {
													"id": 503,
													"nodeType": "Block",
													"src": "4298:149:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 495,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 478,
																				"src": "4370:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 497,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4383:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 496,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "4383:4:3",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 498,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4382:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 493,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4359:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4363:6:3",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "4359:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4359:30:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4391:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 492,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4351:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4351:85:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 502,
															"nodeType": "ExpressionStatement",
															"src": "4351:85:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "3370:372:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3756:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3783:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "3776:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 471,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 470,
														"name": "IERC20",
														"nameLocations": [
															"3776:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "3776:6:3"
													},
													"referencedDeclaration": 190,
													"src": "3776:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3803:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "3790:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 473,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3790:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:33:3"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3817:0:3"
									},
									"scope": 507,
									"src": "3747:706:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 508,
							"src": "707:3748:3",
							"usedErrors": []
						}
					],
					"src": "115:4341:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							837
						]
					},
					"id": 838,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 509,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 510,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 837,
							"linearizedBaseContracts": [
								837
							],
							"name": "Address",
							"nameLocation": "202:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "1241:254:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 518,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 513,
																"src": "1465:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 517,
												"id": 523,
												"nodeType": "Return",
												"src": "1458:30:4"
											}
										]
									},
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "1195:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:4"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "1235:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 515,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:4"
									},
									"scope": 837,
									"src": "1175:320:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "2483:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 536,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$837",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$837",
																				"typeString": "library Address"
																			}
																		],
																		"id": 535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 534,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:7:4",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 539,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 530,
																"src": "2526:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 533,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:4"
											},
											{
												"assignments": [
													545,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 545,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 558,
														"src": "2578:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 544,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 552,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 546,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "2596:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2606:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 548,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 530,
																"src": "2618:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 554,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "2647:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 553,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 557,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:4"
											}
										]
									},
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "2431:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "2458:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:4"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:4"
									},
									"scope": 837,
									"src": "2412:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "3555:96:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 570,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "3594:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 571,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "3602:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3611:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 569,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															617,
															661
														],
														"referencedDeclaration": 661,
														"src": "3572:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:72:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 568,
												"id": 575,
												"nodeType": "Return",
												"src": "3565:79:4"
											}
										]
									},
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "3488:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "3504:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 563,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:4"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "3541:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 566,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:4"
									},
									"scope": 837,
									"src": "3466:185:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 596,
										"nodeType": "Block",
										"src": "4020:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 590,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "4059:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 591,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "4067:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4073:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 593,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "4076:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 589,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															617,
															661
														],
														"referencedDeclaration": 661,
														"src": "4037:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 588,
												"id": 595,
												"nodeType": "Return",
												"src": "4030:59:4"
											}
										]
									},
									"documentation": {
										"id": 578,
										"nodeType": "StructuredDocumentation",
										"src": "3657:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3882:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3912:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "3904:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3941:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "3928:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 581,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3928:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3969:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "3955:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 583,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3955:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3894:93:4"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4006:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 586,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4006:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:14:4"
									},
									"scope": 837,
									"src": "3873:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 616,
										"nodeType": "Block",
										"src": "4601:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 610,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "4640:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 611,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "4648:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 612,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "4654:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4661:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 609,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															617,
															661
														],
														"referencedDeclaration": 661,
														"src": "4618:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 608,
												"id": 615,
												"nodeType": "Return",
												"src": "4611:94:4"
											}
										]
									},
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "4102:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4467:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4506:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "4498:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4498:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4535:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "4522:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 601,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4522:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4557:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "4549:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4549:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4488:80:4"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "4587:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 606,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4587:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:14:4"
									},
									"scope": 837,
									"src": "4458:254:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "5139:267:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 634,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5165:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$837",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$837",
																				"typeString": "library Address"
																			}
																		],
																		"id": 633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5157:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 632,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5157:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5157:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5171:7:4",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5157:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 637,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 624,
																"src": "5182:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5157:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5189:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 631,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5149:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5149:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 641,
												"nodeType": "ExpressionStatement",
												"src": "5149:81:4"
											},
											{
												"assignments": [
													643,
													645
												],
												"declarations": [
													{
														"constant": false,
														"id": 643,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5246:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 660,
														"src": "5241:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 642,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5241:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 645,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5268:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 660,
														"src": "5255:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 644,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5255:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 652,
												"initialValue": {
													"arguments": [
														{
															"id": 650,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "5308:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 646,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 620,
																"src": "5282:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5289:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5282:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 648,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 624,
																"src": "5301:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5282:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5240:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 654,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "5357:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 655,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "5365:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 656,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "5374:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 657,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "5386:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 653,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "5330:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5330:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 630,
												"id": 659,
												"nodeType": "Return",
												"src": "5323:76:4"
											}
										]
									},
									"documentation": {
										"id": 618,
										"nodeType": "StructuredDocumentation",
										"src": "4718:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4969:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5008:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "5000:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5037:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "5024:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 621,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5024:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5059:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "5051:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5051:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5088:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "5074:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 625,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5074:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4990:116:4"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "5125:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 628,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5125:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:14:4"
									},
									"scope": 837,
									"src": "4960:446:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "5683:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 672,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "5719:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 673,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "5727:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5733:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 671,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															678,
															707
														],
														"referencedDeclaration": 707,
														"src": "5700:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5700:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 670,
												"id": 676,
												"nodeType": "Return",
												"src": "5693:80:4"
											}
										]
									},
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "5412:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5592:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5619:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "5611:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5611:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5640:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "5627:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 665,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5627:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5610:35:4"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "5669:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 668,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5669:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5668:14:4"
									},
									"scope": 837,
									"src": "5583:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "6122:168:4",
										"statements": [
											{
												"assignments": [
													691,
													693
												],
												"declarations": [
													{
														"constant": false,
														"id": 691,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6138:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 706,
														"src": "6133:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 690,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6133:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 693,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6160:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 706,
														"src": "6147:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 692,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6147:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 698,
												"initialValue": {
													"arguments": [
														{
															"id": 696,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "6192:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 694,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "6174:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 695,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6181:10:4",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6174:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6174:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 700,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "6241:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 701,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "6249:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 702,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "6258:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 703,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "6270:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 699,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "6214:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6214:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 689,
												"id": 705,
												"nodeType": "Return",
												"src": "6207:76:4"
											}
										]
									},
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "5786:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5973:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6009:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6001:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6001:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6038:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6025:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 682,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6025:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6066:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6052:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 684,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6052:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:93:4"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6108:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 687,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6108:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:14:4"
									},
									"scope": 837,
									"src": "5964:326:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 723,
										"nodeType": "Block",
										"src": "6566:101:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 718,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "6604:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 719,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "6612:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6618:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 717,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															724,
															753
														],
														"referencedDeclaration": 753,
														"src": "6583:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6583:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 716,
												"id": 722,
												"nodeType": "Return",
												"src": "6576:84:4"
											}
										]
									},
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "6296:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6478:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6507:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "6499:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6499:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6528:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "6515:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 711,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6515:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:35:4"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "6552:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 714,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6552:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6551:14:4"
									},
									"scope": 837,
									"src": "6469:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "7008:170:4",
										"statements": [
											{
												"assignments": [
													737,
													739
												],
												"declarations": [
													{
														"constant": false,
														"id": 737,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7024:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 752,
														"src": "7019:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 736,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7019:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 739,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7046:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 752,
														"src": "7033:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 738,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7033:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 744,
												"initialValue": {
													"arguments": [
														{
															"id": 742,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "7080:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 740,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "7060:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 741,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7067:12:4",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7060:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7060:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7018:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 746,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "7129:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 747,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "7137:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 748,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "7146:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 749,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "7158:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 745,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "7102:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7102:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 735,
												"id": 751,
												"nodeType": "Return",
												"src": "7095:76:4"
											}
										]
									},
									"documentation": {
										"id": 725,
										"nodeType": "StructuredDocumentation",
										"src": "6673:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6862:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6900:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "6892:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6892:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6929:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "6916:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 728,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6916:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6957:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "6943:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 730,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6943:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6882:93:4"
									},
									"returnParameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "6994:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 733,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6994:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6993:14:4"
									},
									"scope": 837,
									"src": "6853:325:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "7660:434:4",
										"statements": [
											{
												"condition": {
													"id": 767,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 758,
													"src": "7674:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 789,
													"nodeType": "Block",
													"src": "8030:58:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 785,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 760,
																		"src": "8052:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 786,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 762,
																		"src": "8064:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 784,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 836,
																	"src": "8044:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8044:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 788,
															"nodeType": "ExpressionStatement",
															"src": "8044:33:4"
														}
													]
												},
												"id": 790,
												"nodeType": "IfStatement",
												"src": "7670:418:4",
												"trueBody": {
													"id": 783,
													"nodeType": "Block",
													"src": "7683:341:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 768,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 760,
																		"src": "7701:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7712:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7701:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7722:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7701:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 780,
															"nodeType": "IfStatement",
															"src": "7697:286:4",
															"trueBody": {
																"id": 779,
																"nodeType": "Block",
																"src": "7725:258:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 774,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 756,
																							"src": "7927:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 773,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 525,
																						"src": "7916:10:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 775,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7916:18:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 776,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7936:31:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 772,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7908:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 777,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7908:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 778,
																		"nodeType": "ExpressionStatement",
																		"src": "7908:60:4"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 781,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 760,
																"src": "8003:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 766,
															"id": 782,
															"nodeType": "Return",
															"src": "7996:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 754,
										"nodeType": "StructuredDocumentation",
										"src": "7184:277:4",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7475:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7519:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "7511:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7540:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "7535:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 757,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7535:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7570:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "7557:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 759,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7557:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7604:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "7590:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 761,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7590:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:121:4"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "7646:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 764,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7646:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7645:14:4"
									},
									"scope": 837,
									"src": "7466:628:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 815,
										"nodeType": "Block",
										"src": "8475:135:4",
										"statements": [
											{
												"condition": {
													"id": 804,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 795,
													"src": "8489:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 813,
													"nodeType": "Block",
													"src": "8546:58:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 809,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "8568:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 810,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "8580:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 808,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 836,
																	"src": "8560:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8560:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 812,
															"nodeType": "ExpressionStatement",
															"src": "8560:33:4"
														}
													]
												},
												"id": 814,
												"nodeType": "IfStatement",
												"src": "8485:119:4",
												"trueBody": {
													"id": 807,
													"nodeType": "Block",
													"src": "8498:42:4",
													"statements": [
														{
															"expression": {
																"id": 805,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 797,
																"src": "8519:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 803,
															"id": 806,
															"nodeType": "Return",
															"src": "8512:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "8100:210:4",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8324:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8355:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "8350:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 794,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8350:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8385:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "8372:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 796,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8372:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8419:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "8405:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 798,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8405:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:97:4"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "8461:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 801,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8461:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8460:14:4"
									},
									"scope": 837,
									"src": "8315:295:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "8699:457:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 823,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "8775:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8786:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8775:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 825,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8795:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8775:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 833,
													"nodeType": "Block",
													"src": "9105:45:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 830,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "9126:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 829,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9119:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9119:20:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 832,
															"nodeType": "ExpressionStatement",
															"src": "9119:20:4"
														}
													]
												},
												"id": 834,
												"nodeType": "IfStatement",
												"src": "8771:379:4",
												"trueBody": {
													"id": 828,
													"nodeType": "Block",
													"src": "8798:301:4",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8956:133:4",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8974:40:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9003:10:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8997:5:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8997:17:4"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "8978:15:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9042:2:4",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9046:10:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9038:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9038:19:4"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9059:15:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9031:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9031:44:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9031:44:4"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 818,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9003:10:4",
																	"valueSize": 1
																},
																{
																	"declaration": 818,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9046:10:4",
																	"valueSize": 1
																}
															],
															"id": 827,
															"nodeType": "InlineAssembly",
															"src": "8947:142:4"
														}
													]
												}
											}
										]
									},
									"id": 836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8625:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8646:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "8633:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 817,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8633:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8672:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "8658:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 819,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8658:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8632:53:4"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8699:0:4"
									},
									"scope": 837,
									"src": "8616:540:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 838,
							"src": "194:8964:4",
							"usedErrors": []
						}
					],
					"src": "101:9058:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							859
						]
					},
					"id": 860,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 839,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 840,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 859,
							"linearizedBaseContracts": [
								859
							],
							"name": "Context",
							"nameLocation": "626:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 848,
										"nodeType": "Block",
										"src": "702:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 845,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 844,
												"id": 847,
												"nodeType": "Return",
												"src": "712:17:5"
											}
										]
									},
									"id": 849,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:5"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"scope": 859,
									"src": "640:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 857,
										"nodeType": "Block",
										"src": "809:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 854,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 853,
												"id": 856,
												"nodeType": "Return",
												"src": "819:15:5"
											}
										]
									},
									"id": 858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:5"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "793:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 851,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:5"
									},
									"scope": 859,
									"src": "742:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 860,
							"src": "608:235:5",
							"usedErrors": []
						}
					],
					"src": "86:758:5"
				},
				"id": 5
			},
			"contracts/Auth.sol": {
				"ast": {
					"absolutePath": "contracts/Auth.sol",
					"exportedSymbols": {
						"Admin": [
							921
						],
						"Context": [
							859
						],
						"Ownable": [
							112
						],
						"Server": [
							980
						]
					},
					"id": 981,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 861,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 862,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 981,
							"sourceUnit": 113,
							"src": "64:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 863,
										"name": "Ownable",
										"nameLocations": [
											"136:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "136:7:6"
									},
									"id": 864,
									"nodeType": "InheritanceSpecifier",
									"src": "136:7:6"
								}
							],
							"canonicalName": "Admin",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 921,
							"linearizedBaseContracts": [
								921,
								112,
								859
							],
							"name": "Admin",
							"nameLocation": "127:5:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 868,
									"mutability": "mutable",
									"name": "_admins",
									"nameLocation": "183:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 921,
									"src": "150:40:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 867,
										"keyType": {
											"id": 865,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "158:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "150:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 866,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "169:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 879,
										"nodeType": "Block",
										"src": "218:82:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 871,
																"name": "_admins",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 868,
																"src": "236:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 874,
															"indexExpression": {
																"expression": {
																	"id": 872,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "244:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "248:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "244:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "236:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792061646d696e2063616e2063616c6c206974",
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "257:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_288424b7e28d798860575cd873ad806bb3799a709ef51f2d7e96fe8aa4697b69",
																"typeString": "literal_string \"Only admin can call it\""
															},
															"value": "Only admin can call it"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_288424b7e28d798860575cd873ad806bb3799a709ef51f2d7e96fe8aa4697b69",
																"typeString": "literal_string \"Only admin can call it\""
															}
														],
														"id": 870,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "228:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "228:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 877,
												"nodeType": "ExpressionStatement",
												"src": "228:54:6"
											},
											{
												"id": 878,
												"nodeType": "PlaceholderStatement",
												"src": "292:1:6"
											}
										]
									},
									"id": 880,
									"name": "onlyAdmin",
									"nameLocation": "206:9:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "215:2:6"
									},
									"src": "197:103:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "357:39:6",
										"statements": [
											{
												"expression": {
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 887,
															"name": "_admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "367:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 889,
														"indexExpression": {
															"id": 888,
															"name": "_admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "375:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "367:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 890,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "385:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "367:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 892,
												"nodeType": "ExpressionStatement",
												"src": "367:22:6"
											}
										]
									},
									"functionSelector": "70480275",
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 885,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 884,
												"name": "onlyOwner",
												"nameLocations": [
													"347:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "347:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "347:9:6"
										}
									],
									"name": "addAdmin",
									"nameLocation": "315:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "_admin",
												"nameLocation": "332:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "324:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "324:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "323:16:6"
									},
									"returnParameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "357:0:6"
									},
									"scope": 921,
									"src": "306:90:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "453:40:6",
										"statements": [
											{
												"expression": {
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 901,
															"name": "_admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "463:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 903,
														"indexExpression": {
															"id": 902,
															"name": "_admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "471:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "463:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 904,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "481:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "463:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 906,
												"nodeType": "ExpressionStatement",
												"src": "463:23:6"
											}
										]
									},
									"functionSelector": "62d91855",
									"id": 908,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 899,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 898,
												"name": "onlyOwner",
												"nameLocations": [
													"443:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "443:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "443:9:6"
										}
									],
									"name": "delAdmin",
									"nameLocation": "411:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "_admin",
												"nameLocation": "428:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "420:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "419:16:6"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "453:0:6"
									},
									"scope": 921,
									"src": "402:91:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 919,
										"nodeType": "Block",
										"src": "558:38:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 915,
														"name": "_admins",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "575:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 917,
													"indexExpression": {
														"id": 916,
														"name": "_addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "583:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "575:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 914,
												"id": 918,
												"nodeType": "Return",
												"src": "568:21:6"
											}
										]
									},
									"functionSelector": "24d7806c",
									"id": 920,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAdmin",
									"nameLocation": "508:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "524:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "516:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "516:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "515:15:6"
									},
									"returnParameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "552:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 912,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "552:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "551:6:6"
									},
									"scope": 921,
									"src": "499:97:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 981,
							"src": "118:480:6",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 922,
										"name": "Admin",
										"nameLocations": [
											"619:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 921,
										"src": "619:5:6"
									},
									"id": 923,
									"nodeType": "InheritanceSpecifier",
									"src": "619:5:6"
								}
							],
							"canonicalName": "Server",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 980,
							"linearizedBaseContracts": [
								980,
								921,
								112,
								859
							],
							"name": "Server",
							"nameLocation": "609:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 927,
									"mutability": "mutable",
									"name": "_servers",
									"nameLocation": "664:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 980,
									"src": "631:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 926,
										"keyType": {
											"id": 924,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "639:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "631:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 925,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "650:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 938,
										"nodeType": "Block",
										"src": "701:84:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 930,
																"name": "_servers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 927,
																"src": "719:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 933,
															"indexExpression": {
																"expression": {
																	"id": 931,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "728:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "732:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "728:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "719:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79207365727665722063616e2063616c6c206974",
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "741:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b517e5ec380fc1d67dab7fb1a0a6634dfeeccd50e1a6a4eb80b0561aef14a94",
																"typeString": "literal_string \"Only server can call it\""
															},
															"value": "Only server can call it"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b517e5ec380fc1d67dab7fb1a0a6634dfeeccd50e1a6a4eb80b0561aef14a94",
																"typeString": "literal_string \"Only server can call it\""
															}
														],
														"id": 929,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "711:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "711:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 936,
												"nodeType": "ExpressionStatement",
												"src": "711:56:6"
											},
											{
												"id": 937,
												"nodeType": "PlaceholderStatement",
												"src": "777:1:6"
											}
										]
									},
									"id": 939,
									"name": "onlyServer",
									"nameLocation": "688:10:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "698:2:6"
									},
									"src": "679:106:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 952,
										"nodeType": "Block",
										"src": "844:41:6",
										"statements": [
											{
												"expression": {
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 946,
															"name": "_servers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "854:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 948,
														"indexExpression": {
															"id": 947,
															"name": "_server",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "863:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "854:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 949,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "874:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "854:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 951,
												"nodeType": "ExpressionStatement",
												"src": "854:24:6"
											}
										]
									},
									"functionSelector": "5cbd99d4",
									"id": 953,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 944,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 943,
												"name": "onlyOwner",
												"nameLocations": [
													"834:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "834:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "834:9:6"
										}
									],
									"name": "addServer",
									"nameLocation": "800:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "_server",
												"nameLocation": "818:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "810:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "810:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "809:17:6"
									},
									"returnParameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "844:0:6"
									},
									"scope": 980,
									"src": "791:94:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 966,
										"nodeType": "Block",
										"src": "944:42:6",
										"statements": [
											{
												"expression": {
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 960,
															"name": "_servers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "954:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 962,
														"indexExpression": {
															"id": 961,
															"name": "_server",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "963:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "954:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 963,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "974:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "954:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 965,
												"nodeType": "ExpressionStatement",
												"src": "954:25:6"
											}
										]
									},
									"functionSelector": "3a4159fa",
									"id": 967,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 958,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 957,
												"name": "onlyOwner",
												"nameLocations": [
													"934:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "934:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "934:9:6"
										}
									],
									"name": "delServer",
									"nameLocation": "900:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "_server",
												"nameLocation": "918:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "910:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "909:17:6"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "944:0:6"
									},
									"scope": 980,
									"src": "891:95:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 978,
										"nodeType": "Block",
										"src": "1054:41:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 974,
														"name": "_servers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "1071:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 976,
													"indexExpression": {
														"id": 975,
														"name": "_server",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "1080:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1071:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 973,
												"id": 977,
												"nodeType": "Return",
												"src": "1064:24:6"
											}
										]
									},
									"functionSelector": "fda08958",
									"id": 979,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isServer",
									"nameLocation": "1001:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "_server",
												"nameLocation": "1018:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "1010:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1010:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1009:17:6"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "1048:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 971,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1048:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1047:6:6"
									},
									"scope": 980,
									"src": "992:103:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 981,
							"src": "600:497:6",
							"usedErrors": []
						}
					],
					"src": "39:1059:6"
				},
				"id": 6
			},
			"contracts/Stake.sol": {
				"ast": {
					"absolutePath": "contracts/Stake.sol",
					"exportedSymbols": {
						"Address": [
							837
						],
						"Admin": [
							921
						],
						"Context": [
							859
						],
						"IConstant": [
							1323
						],
						"IERC20": [
							190
						],
						"IERC20Permit": [
							226
						],
						"Ownable": [
							112
						],
						"SafeERC20": [
							507
						],
						"Server": [
							980
						],
						"Stake": [
							1216
						]
					},
					"id": 1217,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 982,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 983,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1217,
							"sourceUnit": 508,
							"src": "65:65:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 984,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1217,
							"sourceUnit": 191,
							"src": "131:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfae/IConstant.sol",
							"file": "./interfae/IConstant.sol",
							"id": 985,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1217,
							"sourceUnit": 1324,
							"src": "188:34:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Auth.sol",
							"file": "./Auth.sol",
							"id": 986,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1217,
							"sourceUnit": 981,
							"src": "223:20:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 987,
										"name": "Admin",
										"nameLocations": [
											"263:5:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 921,
										"src": "263:5:7"
									},
									"id": 988,
									"nodeType": "InheritanceSpecifier",
									"src": "263:5:7"
								}
							],
							"canonicalName": "Stake",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1216,
							"linearizedBaseContracts": [
								1216,
								921,
								112,
								859
							],
							"name": "Stake",
							"nameLocation": "254:5:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 992,
									"libraryName": {
										"id": 989,
										"name": "SafeERC20",
										"nameLocations": [
											"281:9:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 507,
										"src": "281:9:7"
									},
									"nodeType": "UsingForDirective",
									"src": "275:27:7",
									"typeName": {
										"id": 991,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 990,
											"name": "IERC20",
											"nameLocations": [
												"295:6:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 190,
											"src": "295:6:7"
										},
										"referencedDeclaration": 190,
										"src": "295:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$190",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"id": 1001,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "323:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1216,
									"src": "308:90:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$190",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 994,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 993,
											"name": "IERC20",
											"nameLocations": [
												"308:6:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 190,
											"src": "308:6:7"
										},
										"referencedDeclaration": 190,
										"src": "308:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$190",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"hexValue": "307838313641433831463042333234353331353337323161344544384432323344364435363036343362",
														"id": 998,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "354:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x816AC81F0B32453153721a4ED8D223D6D560643b"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													],
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "346:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_address_$",
														"typeString": "type(address)"
													},
													"typeName": {
														"id": 996,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "346:7:7",
														"typeDescriptions": {}
													}
												},
												"id": 999,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "typeConversion",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "346:51:7",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 995,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 190,
											"src": "339:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 1000,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "339:59:7",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$190",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1010,
									"mutability": "mutable",
									"name": "cons",
									"nameLocation": "423:4:7",
									"nodeType": "VariableDeclaration",
									"scope": 1216,
									"src": "405:95:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IConstant_$1323",
										"typeString": "contract IConstant"
									},
									"typeName": {
										"id": 1003,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1002,
											"name": "IConstant",
											"nameLocations": [
												"405:9:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1323,
											"src": "405:9:7"
										},
										"referencedDeclaration": 1323,
										"src": "405:9:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IConstant_$1323",
											"typeString": "contract IConstant"
										}
									},
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"hexValue": "307830353832393535323036624641413465653841626265453339643246366137463444633643333635",
														"id": 1007,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "456:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x0582955206bFAA4ee8AbbeE39d2F6a7F4Dc6C365"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													],
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "448:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_address_$",
														"typeString": "type(address)"
													},
													"typeName": {
														"id": 1005,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "448:7:7",
														"typeDescriptions": {}
													}
												},
												"id": 1008,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "typeConversion",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "448:51:7",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 1004,
											"name": "IConstant",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1323,
											"src": "438:9:7",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IConstant_$1323_$",
												"typeString": "type(contract IConstant)"
											}
										},
										"id": 1009,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "438:62:7",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IConstant_$1323",
											"typeString": "contract IConstant"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "33f0944345b567437b59121ec49e61eac9ab862442c86dece3bf1d1223f485c4",
									"id": 1016,
									"name": "InitTokenEvent",
									"nameLocation": "513:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"indexed": false,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "536:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "528:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "528:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"indexed": false,
												"mutability": "mutable",
												"name": "cons",
												"nameLocation": "551:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "543:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "543:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "527:29:7"
									},
									"src": "507:50:7"
								},
								{
									"anonymous": false,
									"eventSelector": "af5775a6886f31b3abd4f2379c3da25be665d67d744212488d3a7734cbece4e3",
									"id": 1022,
									"name": "WithdrawalEvent",
									"nameLocation": "569:15:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "590:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "585:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "585:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"indexed": false,
												"mutability": "mutable",
												"name": "when",
												"nameLocation": "603:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "598:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1019,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "598:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "584:24:7"
									},
									"src": "563:46:7"
								},
								{
									"anonymous": false,
									"eventSelector": "160ffcaa807f78c8b4983836e2396338d073e75695ac448aa0b5e4a75b210b1d",
									"id": 1030,
									"name": "StakeEvent",
									"nameLocation": "621:10:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"indexed": false,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "640:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "632:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "654:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "646:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "666:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "658:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:42:7"
									},
									"src": "615:59:7"
								},
								{
									"anonymous": false,
									"eventSelector": "a02aba7174f1597e7e78b2ca72d80b37118bfe8012ad5469728b1df72bbf2ac1",
									"id": 1038,
									"name": "UnStakeEvent",
									"nameLocation": "686:12:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"indexed": false,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "707:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "699:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "721:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "713:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "713:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "733:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "725:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:42:7"
									},
									"src": "680:61:7"
								},
								{
									"body": {
										"id": 1064,
										"nodeType": "Block",
										"src": "851:140:7",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1048,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "881:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1049,
															"name": "consAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "895:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1047,
														"name": "InitTokenEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1016,
														"src": "866:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "866:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1051,
												"nodeType": "EmitStatement",
												"src": "861:46:7"
											},
											{
												"expression": {
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1052,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1001,
														"src": "917:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$190",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1054,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1040,
																"src": "932:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1053,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "925:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "925:20:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$190",
															"typeString": "contract IERC20"
														}
													},
													"src": "917:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "917:28:7"
											},
											{
												"expression": {
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1058,
														"name": "cons",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "955:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IConstant_$1323",
															"typeString": "contract IConstant"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1060,
																"name": "consAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1042,
																"src": "972:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1059,
															"name": "IConstant",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "962:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IConstant_$1323_$",
																"typeString": "type(contract IConstant)"
															}
														},
														"id": 1061,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "962:22:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IConstant_$1323",
															"typeString": "contract IConstant"
														}
													},
													"src": "955:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IConstant_$1323",
														"typeString": "contract IConstant"
													}
												},
												"id": 1063,
												"nodeType": "ExpressionStatement",
												"src": "955:29:7"
											}
										]
									},
									"functionSelector": "04dd06f5",
									"id": 1065,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1045,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1044,
												"name": "onlyAdmin",
												"nameLocations": [
													"841:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 880,
												"src": "841:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "841:9:7"
										}
									],
									"name": "_initToken",
									"nameLocation": "756:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "784:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "776:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "776:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "consAddress",
												"nameLocation": "814:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "806:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "806:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "766:65:7"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "851:0:7"
									},
									"scope": 1216,
									"src": "747:244:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1094,
										"nodeType": "Block",
										"src": "1076:122:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1077,
															"name": "acc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "1109:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1080,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1122:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Stake_$1216",
																		"typeString": "contract Stake"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Stake_$1216",
																		"typeString": "contract Stake"
																	}
																],
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1114:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1078,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1114:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1114:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1082,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "1129:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1074,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "1086:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 1076,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1092:16:7",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 284,
														"src": "1086:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$190_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1086:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1084,
												"nodeType": "ExpressionStatement",
												"src": "1086:51:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1086,
															"name": "acc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "1163:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1089,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1176:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Stake_$1216",
																		"typeString": "contract Stake"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Stake_$1216",
																		"typeString": "contract Stake"
																	}
																],
																"id": 1088,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1168:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1087,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1168:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1168:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1091,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "1183:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1085,
														"name": "StakeEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1030,
														"src": "1152:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1152:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1093,
												"nodeType": "EmitStatement",
												"src": "1147:44:7"
											}
										]
									},
									"functionSelector": "aa0d97b3",
									"id": 1095,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1072,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1071,
												"name": "onlyAdmin",
												"nameLocations": [
													"1066:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 880,
												"src": "1066:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1066:9:7"
										}
									],
									"name": "_stake",
									"nameLocation": "1020:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "acc",
												"nameLocation": "1035:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "1027:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1048:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "1040:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1040:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:30:7"
									},
									"returnParameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1076:0:7"
									},
									"scope": 1216,
									"src": "1011:187:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1124,
										"nodeType": "Block",
										"src": "1290:122:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1109,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1331:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Stake_$1216",
																		"typeString": "contract Stake"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Stake_$1216",
																		"typeString": "contract Stake"
																	}
																],
																"id": 1108,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1323:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1107,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1323:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1323:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1111,
															"name": "acc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "1338:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1112,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "1343:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1104,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "1300:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 1106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1306:16:7",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 284,
														"src": "1300:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$190_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1300:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1114,
												"nodeType": "ExpressionStatement",
												"src": "1300:50:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1118,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1386:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Stake_$1216",
																		"typeString": "contract Stake"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Stake_$1216",
																		"typeString": "contract Stake"
																	}
																],
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1378:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1116,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1378:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1378:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1120,
															"name": "acc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "1393:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1121,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "1398:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1115,
														"name": "UnStakeEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "1365:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1365:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1123,
												"nodeType": "EmitStatement",
												"src": "1360:45:7"
											}
										]
									},
									"functionSelector": "03974908",
									"id": 1125,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1102,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1101,
												"name": "onlyAdmin",
												"nameLocations": [
													"1280:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 880,
												"src": "1280:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1280:9:7"
										}
									],
									"name": "_unStake",
									"nameLocation": "1233:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "acc",
												"nameLocation": "1250:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "1242:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1263:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "1255:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1241:29:7"
									},
									"returnParameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1290:0:7"
									},
									"scope": 1216,
									"src": "1224:188:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1155,
										"nodeType": "Block",
										"src": "1506:138:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1139,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1547:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Stake_$1216",
																		"typeString": "contract Stake"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Stake_$1216",
																		"typeString": "contract Stake"
																	}
																],
																"id": 1138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1539:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1137,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1539:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1539:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1141,
															"name": "acc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "1554:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1142,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "1559:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1134,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "1516:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 1136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1522:16:7",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 284,
														"src": "1516:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$190_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1516:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1144,
												"nodeType": "ExpressionStatement",
												"src": "1516:51:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1148,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1606:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Stake_$1216",
																			"typeString": "contract Stake"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Stake_$1216",
																			"typeString": "contract Stake"
																		}
																	],
																	"id": 1147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1598:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1146,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1598:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1598:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1612:7:7",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "1598:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1151,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1621:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1627:9:7",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1621:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1145,
														"name": "WithdrawalEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "1582:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1582:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1154,
												"nodeType": "EmitStatement",
												"src": "1577:60:7"
											}
										]
									},
									"functionSelector": "b790a77b",
									"id": 1156,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1132,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1131,
												"name": "onlyAdmin",
												"nameLocations": [
													"1496:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 880,
												"src": "1496:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1496:9:7"
										}
									],
									"name": "_withdraw",
									"nameLocation": "1447:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "acc",
												"nameLocation": "1465:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "1457:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1457:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1478:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "1470:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1470:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1456:30:7"
									},
									"returnParameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1506:0:7"
									},
									"scope": 1216,
									"src": "1438:206:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1168,
										"nodeType": "Block",
										"src": "1721:50:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1165,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1158,
															"src": "1754:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1163,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "1738:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 1164,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1744:9:7",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 147,
														"src": "1738:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1738:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1162,
												"id": 1167,
												"nodeType": "Return",
												"src": "1731:33:7"
											}
										]
									},
									"functionSelector": "cca3e832",
									"id": 1169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_balanceOf",
									"nameLocation": "1659:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "msgSender",
												"nameLocation": "1678:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "1670:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1670:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1669:19:7"
									},
									"returnParameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "1712:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1712:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1711:9:7"
									},
									"scope": 1216,
									"src": "1650:121:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1186,
										"nodeType": "Block",
										"src": "1816:79:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1179,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1852:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Stake_$1216",
																		"typeString": "contract Stake"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Stake_$1216",
																		"typeString": "contract Stake"
																	}
																],
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1844:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1177,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1844:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1844:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 1181,
																	"name": "cons",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1010,
																	"src": "1859:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IConstant_$1323",
																		"typeString": "contract IConstant"
																	}
																},
																"id": 1182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1864:21:7",
																"memberName": "getTotalTokenIssuance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1310,
																"src": "1859:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1859:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1174,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "1826:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 1176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1832:11:7",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 328,
														"src": "1826:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$190_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1826:62:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1185,
												"nodeType": "ExpressionStatement",
												"src": "1826:62:7"
											}
										]
									},
									"functionSelector": "6d101d50",
									"id": 1187,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1172,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1171,
												"name": "onlyAdmin",
												"nameLocations": [
													"1806:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 880,
												"src": "1806:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1806:9:7"
										}
									],
									"name": "_approve",
									"nameLocation": "1786:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1794:2:7"
									},
									"returnParameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:0:7"
									},
									"scope": 1216,
									"src": "1777:118:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1204,
										"nodeType": "Block",
										"src": "1950:123:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1197,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2009:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Stake_$1216",
																		"typeString": "contract Stake"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Stake_$1216",
																		"typeString": "contract Stake"
																	}
																],
																"id": 1196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2001:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1195,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2001:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2001:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 1199,
																	"name": "cons",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1010,
																	"src": "2028:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IConstant_$1323",
																		"typeString": "contract IConstant"
																	}
																},
																"id": 1200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2033:21:7",
																"memberName": "getTotalTokenIssuance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1310,
																"src": "2028:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2028:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1192,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "1960:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 1194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1966:21:7",
														"memberName": "safeIncreaseAllowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 364,
														"src": "1960:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$190_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1960:106:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1203,
												"nodeType": "ExpressionStatement",
												"src": "1960:106:7"
											}
										]
									},
									"functionSelector": "c8f72c84",
									"id": 1205,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1190,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1189,
												"name": "onlyAdmin",
												"nameLocations": [
													"1940:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 880,
												"src": "1940:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1940:9:7"
										}
									],
									"name": "_increaseAllowance",
									"nameLocation": "1910:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1928:2:7"
									},
									"returnParameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1950:0:7"
									},
									"scope": 1216,
									"src": "1901:172:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1214,
										"nodeType": "Block",
										"src": "2126:51:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1210,
															"name": "cons",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "2142:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IConstant_$1323",
																"typeString": "contract IConstant"
															}
														},
														"id": 1211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2147:21:7",
														"memberName": "getTotalTokenIssuance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1310,
														"src": "2142:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2142:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1209,
												"id": 1213,
												"nodeType": "Return",
												"src": "2135:35:7"
											}
										]
									},
									"functionSelector": "20965255",
									"id": 1215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getValue",
									"nameLocation": "2088:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2096:2:7"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "2118:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2118:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2117:9:7"
									},
									"scope": 1216,
									"src": "2079:98:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1217,
							"src": "245:1938:7",
							"usedErrors": []
						}
					],
					"src": "39:2145:7"
				},
				"id": 7
			},
			"contracts/interfae/IConstant.sol": {
				"ast": {
					"absolutePath": "contracts/interfae/IConstant.sol",
					"exportedSymbols": {
						"IConstant": [
							1323
						]
					},
					"id": 1324,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1218,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IConstant",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1323,
							"linearizedBaseContracts": [
								1323
							],
							"name": "IConstant",
							"nameLocation": "74:9:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "8e41abab",
									"id": 1245,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAllCons",
									"nameLocation": "99:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "109:2:8"
									},
									"returnParameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "172:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1220,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "172:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "192:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1222,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "192:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "212:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1224,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "212:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "232:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1226,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "232:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "252:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1228,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "252:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "272:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1230,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "272:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "292:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1232,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "292:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "312:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1234,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "312:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "332:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1236,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "332:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "352:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1238,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "352:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "372:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1240,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "372:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "392:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1242,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "392:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "158:250:8"
									},
									"scope": 1323,
									"src": "90:319:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "64693b87",
									"id": 1250,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOnline",
									"nameLocation": "424:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "433:2:8"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "459:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1247,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "459:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "458:8:8"
									},
									"scope": 1323,
									"src": "415:52:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "331b4cda",
									"id": 1255,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRendering",
									"nameLocation": "482:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "494:2:8"
									},
									"returnParameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "520:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1252,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "520:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "519:8:8"
									},
									"scope": 1323,
									"src": "473:55:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5809cdb5",
									"id": 1260,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOffline",
									"nameLocation": "543:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "553:2:8"
									},
									"returnParameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "579:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1257,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "579:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "578:8:8"
									},
									"scope": 1323,
									"src": "534:53:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "afc1c88e",
									"id": 1265,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCpu",
									"nameLocation": "602:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "608:2:8"
									},
									"returnParameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "634:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1262,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "634:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:8:8"
									},
									"scope": 1323,
									"src": "593:49:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3f4702c0",
									"id": 1270,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMemory",
									"nameLocation": "657:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "666:2:8"
									},
									"returnParameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "692:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1267,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "692:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "691:8:8"
									},
									"scope": 1323,
									"src": "648:52:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a63b6188",
									"id": 1275,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getGraphicsCard",
									"nameLocation": "715:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "730:2:8"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "756:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1272,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "755:8:8"
									},
									"scope": 1323,
									"src": "706:58:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b10186fd",
									"id": 1280,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getHardDisk",
									"nameLocation": "779:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "790:2:8"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "816:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1277,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "816:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "815:8:8"
									},
									"scope": 1323,
									"src": "770:54:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "96355b2e",
									"id": 1285,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getIP",
									"nameLocation": "839:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "844:2:8"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "870:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1282,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "870:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "869:8:8"
									},
									"scope": 1323,
									"src": "830:48:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3bf331cd",
									"id": 1290,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCpuWeights",
									"nameLocation": "893:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:8"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "932:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1287,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "932:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:8:8"
									},
									"scope": 1323,
									"src": "884:56:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ba852775",
									"id": 1295,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMemWeights",
									"nameLocation": "955:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "968:2:8"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "994:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1292,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "994:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:8:8"
									},
									"scope": 1323,
									"src": "946:56:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "927e00e8",
									"id": 1300,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getGraphicsCardWeights",
									"nameLocation": "1017:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1039:2:8"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "1065:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1297,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1065:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1064:8:8"
									},
									"scope": 1323,
									"src": "1008:65:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "092afee3",
									"id": 1305,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getHardDiskWeights",
									"nameLocation": "1088:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1106:2:8"
									},
									"returnParameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "1132:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1302,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1132:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1131:8:8"
									},
									"scope": 1323,
									"src": "1079:61:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "36ffc86d",
									"id": 1310,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalTokenIssuance",
									"nameLocation": "1155:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1176:2:8"
									},
									"returnParameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "1202:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1201:9:8"
									},
									"scope": 1323,
									"src": "1146:65:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a403ff6",
									"id": 1315,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getStakeAmountLimit",
									"nameLocation": "1226:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1245:2:8"
									},
									"returnParameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "1271:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1271:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1270:9:8"
									},
									"scope": 1323,
									"src": "1217:63:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c5fc66a4",
									"id": 1322,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setStakeAmountLimit",
									"nameLocation": "1295:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1323:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "1315:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1315:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1314:15:8"
									},
									"returnParameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "1348:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1319,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1348:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1347:6:8"
									},
									"scope": 1323,
									"src": "1286:68:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1324,
							"src": "64:1292:8",
							"usedErrors": []
						}
					],
					"src": "39:1318:8"
				},
				"id": 8
			}
		}
	}
}