{
	"id": "e67357318ad8cb01c80cc9af32673f0b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/stake.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.9;\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract Stake {\n    using SafeERC20 for IERC20;\n\n    IERC20 private token;\n\n     uint256 public stakeAmount;\n\n     event Withdrawal(uint amount, uint when);\n\n    event StakeEvent(address from, address to, uint256 amount);\n\n    constructor(\n        address tokenAddress,\n        uint256 value\n    )  {\n        token = IERC20(tokenAddress);\n        stakeAmount = value * 10 ** 18;\n        token.safeIncreaseAllowance(address(this),100000000000 * 10 ** 18);\n    }\n\n     receive() external payable {}\n\n     // 质押\n    function stake(uint256 _amount) external {\n        require(_amount > 0, \"amount not zero\");\n        require(token.balanceOf(msg.sender) >= _amount,\"staking faild\");\n        emit StakeEvent(msg.sender, address(this), _amount * 10 ** 18);\n        token.safeTransferFrom(msg.sender, address(this), _amount * 10 ** 18);\n    }\n\n     // 解除质押\n    function unStake() external {\n        token.safeTransferFrom(\n            address(this),\n            msg.sender,\n            stakeAmount\n        );\n    }\n\n\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206cf88f5263029175b3545a48eae10b12554cc86876c6445b3e4e83cc514c8f4264736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206cf88f5263029175b3545a48eae10b12554cc86876c6445b3e4e83cc514c8f4264736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0xF88F5263029175B3545A48EAE1 SIGNEXTEND SLT SSTORE 0x4C 0xC8 PUSH9 0x76C6445B3E4E83CC51 0x4C DUP16 TIMESTAMP PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "707:3748:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206cf88f5263029175b3545a48eae10b12554cc86876c6445b3e4e83cc514c8f4264736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0xF88F5263029175B3545A48EAE1 SIGNEXTEND SLT SSTORE 0x4C 0xC8 PUSH9 0x76C6445B3E4E83CC51 0x4C DUP16 TIMESTAMP PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "707:3748:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206cf88f5263029175b3545a48eae10b12554cc86876c6445b3e4e83cc514c8f4264736f6c63430008110033",
									".code": [
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"contracts/stake.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201456f7767f46f239da11f81368573b480f6d8de2e2a321dadf5bcd65d1c39d7564736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201456f7767f46f239da11f81368573b480f6d8de2e2a321dadf5bcd65d1c39d7564736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ JUMP 0xF7 PUSH23 0x7F46F239DA11F81368573B480F6D8DE2E2A321DADF5BCD PUSH6 0xD1C39D756473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "194:8964:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201456f7767f46f239da11f81368573b480f6d8de2e2a321dadf5bcd65d1c39d7564736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ JUMP 0xF7 PUSH23 0x7F46F239DA11F81368573B480F6D8DE2E2A321DADF5BCD PUSH6 0xD1C39D756473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "194:8964:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201456f7767f46f239da11f81368573b480f6d8de2e2a321dadf5bcd65d1c39d7564736f6c63430008110033",
									".code": [
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"contracts/stake.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/stake.sol": {
				"Stake": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "StakeEvent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "when",
									"type": "uint256"
								}
							],
							"name": "Withdrawal",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakeAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/stake.sol\":187:1210  contract Stake {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/stake.sol\":415:648  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/stake.sol\":512:524  tokenAddress */\n  dup2\n    /* \"contracts/stake.sol\":497:502  token */\n  0x00\n  dup1\n    /* \"contracts/stake.sol\":497:525  token = IERC20(tokenAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/stake.sol\":557:565  10 ** 18 */\n  0x0de0b6b3a7640000\n    /* \"contracts/stake.sol\":549:554  value */\n  dup2\n    /* \"contracts/stake.sol\":549:565  value * 10 ** 18 */\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n    /* \"contracts/stake.sol\":535:546  stakeAmount */\n  0x01\n    /* \"contracts/stake.sol\":535:565  stakeAmount = value * 10 ** 18 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/stake.sol\":575:641  token.safeIncreaseAllowance(address(this),100000000000 * 10 ** 18) */\n  tag_8\n    /* \"contracts/stake.sol\":611:615  this */\n  address\n    /* \"contracts/stake.sol\":617:640  100000000000 * 10 ** 18 */\n  0x01431e0fae6d7217caa0000000\n    /* \"contracts/stake.sol\":575:580  token */\n  0x00\n  dup1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/stake.sol\":575:602  token.safeIncreaseAllowance */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  or(tag_0_21, shl(0x20, tag_9))\n  swap1\n    /* \"contracts/stake.sol\":575:641  token.safeIncreaseAllowance(address(this),100000000000 * 10 ** 18) */\n  swap3\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"contracts/stake.sol\":415:648  constructor(... */\n  pop\n  pop\n    /* \"contracts/stake.sol\":187:1210  contract Stake {... */\n  jump(tag_10)\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2084:2394  function safeIncreaseAllowance(... */\ntag_9:\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2210:2230  uint256 newAllowance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2275:2280  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2233:2238  token */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2233:2248  token.allowance */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xdd62ed3e\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2257:2261  this */\n  address\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2264:2271  spender */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2233:2272  token.allowance(address(this), spender) */\n  mload(0x40)\n  dup4\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  tag_12\n  swap3\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_15\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2233:2280  token.allowance(address(this), spender) + value */\n  tag_18\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2210:2280  uint256 newAllowance = token.allowance(address(this), spender) + value */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2290:2387  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance)) */\n  tag_20\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2310:2315  token */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2340:2362  token.approve.selector */\n  shl(0xe0, 0x095ea7b3)\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2364:2371  spender */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2373:2385  newAllowance */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2317:2386  abi.encodeWithSelector(token.approve.selector, spender, newAllowance) */\n  add(0x24, mload(0x40))\n  tag_21\n  swap3\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n  swap1\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n  0x20\n  dup3\n  add\n  dup1\n  mload\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n  dup4\n  dup2\n  dup4\n  and\n  or\n  dup4\n  mstore\n  pop\n  pop\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2290:2309  _callOptionalReturn */\n  shl(0x20, tag_23)\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2290:2387  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance)) */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2200:2394  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2084:2394  function safeIncreaseAllowance(... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3747:4453  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4189  bytes memory returndata */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n  tag_25\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4220:4224  data */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x20\n  dup2\n  mstore\n  0x20\n  add\n  0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4200:4205  token */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4219  address(token).functionCall */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  or(tag_0_22, shl(0x20, tag_26))\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n  swap3\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4261  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4295:4296  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4285  returndata */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4292  returndata.length */\n  mload\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4296  returndata.length > 0 */\n  gt\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4271:4447  if (returndata.length > 0) {... */\n  iszero\n  tag_27\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4370:4380  returndata */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4359:4389  abi.decode(returndata, (bool)) */\n  dup1\n  0x20\n  add\n  swap1\n  mload\n  dup2\n  add\n  swap1\n  tag_28\n  swap2\n  swap1\n  tag_29\n  jump\t// in\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n  tag_30\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_31\n  swap1\n  tag_32\n  jump\t// in\ntag_31:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4271:4447  if (returndata.length > 0) {... */\ntag_27:\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3817:4453  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3747:4453  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":3873:4096  function functionCall(... */\ntag_26:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4006:4018  bytes memory */\n  0x60\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4089  functionCallWithValue(target, data, 0, errorMessage) */\n  tag_34\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4059:4065  target */\n  dup5\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4067:4071  data */\n  dup5\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4073:4074  0 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4076:4088  errorMessage */\n  dup6\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4058  functionCallWithValue */\n  shl(0x20, tag_35)\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4089  functionCallWithValue(target, data, 0, errorMessage) */\n  0x20\n  shr\n  jump\t// in\ntag_34:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4030:4089  return functionCallWithValue(target, data, 0, errorMessage) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Address.sol\":3873:4096  function functionCall(... */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4960:5406  function functionCallWithValue(... */\ntag_35:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5125:5137  bytes memory */\n  0x60\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5182:5187  value */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5157:5178  address(this).balance */\n  selfbalance\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5157:5187  address(this).balance >= value */\n  lt\n  iszero\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5149:5230  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n  tag_37\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_38\n  swap1\n  tag_39\n  jump\t// in\ntag_38:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_37:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5241:5253  bool success */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5255:5278  bytes memory returndata */\n  dup1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5288  target */\n  dup7\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5293  target.call */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5301:5306  value */\n  dup6\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5308:5312  data */\n  dup8\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5313  target.call{value: value}(data) */\n  mload(0x40)\n  tag_40\n  swap2\n  swap1\n  tag_41\n  jump\t// in\ntag_40:\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  dup8\n  gas\n  call\n  swap3\n  pop\n  pop\n  pop\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_44\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_43)\ntag_44:\n  0x60\n  swap2\n  pop\ntag_43:\n  pop\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5240:5313  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n  swap2\n  pop\n  swap2\n  pop\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5399  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n  tag_45\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5357:5363  target */\n  dup8\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5365:5372  success */\n  dup4\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5374:5384  returndata */\n  dup4\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5386:5398  errorMessage */\n  dup8\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5356  verifyCallResultFromTarget */\n  shl(0x20, tag_46)\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5399  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n  0x20\n  shr\n  jump\t// in\ntag_45:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5323:5399  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n  swap3\n  pop\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4960:5406  function functionCallWithValue(... */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7466:8094  function verifyCallResultFromTarget(... */\ntag_46:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7646:7658  bytes memory */\n  0x60\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7674:7681  success */\n  dup4\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7670:8088  if (success) {... */\n  iszero\n  tag_48\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7722:7723  0 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7711  returndata */\n  dup4\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7718  returndata.length */\n  mload\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7723  returndata.length == 0 */\n  sub\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7697:7983  if (returndata.length == 0) {... */\n  tag_49\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7916:7934  isContract(target) */\n  tag_50\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7927:7933  target */\n  dup6\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7916:7926  isContract */\n  shl(0x20, tag_51)\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7916:7934  isContract(target) */\n  0x20\n  shr\n  jump\t// in\ntag_50:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7908:7968  require(isContract(target), \"Address: call to non-contract\") */\n  tag_52\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_53\n  swap1\n  tag_54\n  jump\t// in\ntag_53:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_52:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7697:7983  if (returndata.length == 0) {... */\ntag_49:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":8003:8013  returndata */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7996:8013  return returndata */\n  swap1\n  pop\n  jump(tag_47)\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7670:8088  if (success) {... */\ntag_48:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":8044:8077  _revert(returndata, errorMessage) */\n  tag_56\n    /* \"@openzeppelin/contracts/utils/Address.sol\":8052:8062  returndata */\n  dup4\n    /* \"@openzeppelin/contracts/utils/Address.sol\":8064:8076  errorMessage */\n  dup4\n    /* \"@openzeppelin/contracts/utils/Address.sol\":8044:8051  _revert */\n  shl(0x20, tag_57)\n    /* \"@openzeppelin/contracts/utils/Address.sol\":8044:8077  _revert(returndata, errorMessage) */\n  0x20\n  shr\n  jump\t// in\ntag_56:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7466:8094  function verifyCallResultFromTarget(... */\ntag_47:\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\ntag_51:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n  dup1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  extcodesize\n    /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n  gt\n    /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":8616:9156  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\ntag_57:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":8795:8796  0 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8785  returndata */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8792  returndata.length */\n  mload\n    /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8796  returndata.length > 0 */\n  gt\n    /* \"@openzeppelin/contracts/utils/Address.sol\":8771:9150  if (returndata.length > 0) {... */\n  iszero\n  tag_60\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":9003:9013  returndata */\n  dup2\n    /* \"@openzeppelin/contracts/utils/Address.sol\":8997:9014  mload(returndata) */\n  mload\n    /* \"@openzeppelin/contracts/utils/Address.sol\":9059:9074  returndata_size */\n  dup1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":9046:9056  returndata */\n  dup4\n    /* \"@openzeppelin/contracts/utils/Address.sol\":9042:9044  32 */\n  0x20\n    /* \"@openzeppelin/contracts/utils/Address.sol\":9038:9057  add(32, returndata) */\n  add\n    /* \"@openzeppelin/contracts/utils/Address.sol\":9031:9075  revert(add(32, returndata), returndata_size) */\n  revert\n    /* \"@openzeppelin/contracts/utils/Address.sol\":8771:9150  if (returndata.length > 0) {... */\ntag_60:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":9126:9138  errorMessage */\n  dup1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":9119:9139  revert(errorMessage) */\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_62\n  swap2\n  swap1\n  tag_63\n  jump\t// in\ntag_62:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"#utility.yul\":88:205   */\ntag_65:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_67:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_68:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_100\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_67\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_69:\n    /* \"#utility.yul\":641:665   */\n  tag_102\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_68\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_103\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_103:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_70:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_105\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_69\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_71:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_72:\n    /* \"#utility.yul\":1001:1025   */\n  tag_108\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_71\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_109\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_109:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_73:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_111\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_72\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1712   */\ntag_3:\n    /* \"#utility.yul\":1284:1290   */\n  0x00\n    /* \"#utility.yul\":1292:1298   */\n  dup1\n    /* \"#utility.yul\":1341:1343   */\n  0x40\n    /* \"#utility.yul\":1329:1338   */\n  dup4\n    /* \"#utility.yul\":1320:1327   */\n  dup6\n    /* \"#utility.yul\":1316:1339   */\n  sub\n    /* \"#utility.yul\":1312:1344   */\n  slt\n    /* \"#utility.yul\":1309:1428   */\n  iszero\n  tag_113\n  jumpi\n    /* \"#utility.yul\":1347:1426   */\n  tag_114\n  tag_65\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":1309:1428   */\ntag_113:\n    /* \"#utility.yul\":1467:1468   */\n  0x00\n    /* \"#utility.yul\":1492:1556   */\n  tag_115\n    /* \"#utility.yul\":1548:1555   */\n  dup6\n    /* \"#utility.yul\":1539:1545   */\n  dup3\n    /* \"#utility.yul\":1528:1537   */\n  dup7\n    /* \"#utility.yul\":1524:1546   */\n  add\n    /* \"#utility.yul\":1492:1556   */\n  tag_70\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":1482:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1438:1566   */\n  pop\n    /* \"#utility.yul\":1605:1607   */\n  0x20\n    /* \"#utility.yul\":1631:1695   */\n  tag_116\n    /* \"#utility.yul\":1687:1694   */\n  dup6\n    /* \"#utility.yul\":1678:1684   */\n  dup3\n    /* \"#utility.yul\":1667:1676   */\n  dup7\n    /* \"#utility.yul\":1663:1685   */\n  add\n    /* \"#utility.yul\":1631:1695   */\n  tag_73\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":1621:1695   */\n  swap2\n  pop\n    /* \"#utility.yul\":1576:1705   */\n  pop\n    /* \"#utility.yul\":1205:1712   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1718:1898   */\ntag_74:\n    /* \"#utility.yul\":1766:1843   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1763:1764   */\n  0x00\n    /* \"#utility.yul\":1756:1844   */\n  mstore\n    /* \"#utility.yul\":1863:1867   */\n  0x11\n    /* \"#utility.yul\":1860:1861   */\n  0x04\n    /* \"#utility.yul\":1853:1868   */\n  mstore\n    /* \"#utility.yul\":1887:1891   */\n  0x24\n    /* \"#utility.yul\":1884:1885   */\n  0x00\n    /* \"#utility.yul\":1877:1892   */\n  revert\n    /* \"#utility.yul\":1904:2314   */\ntag_7:\n    /* \"#utility.yul\":1944:1951   */\n  0x00\n    /* \"#utility.yul\":1967:1987   */\n  tag_119\n    /* \"#utility.yul\":1985:1986   */\n  dup3\n    /* \"#utility.yul\":1967:1987   */\n  tag_71\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":1962:1987   */\n  swap2\n  pop\n    /* \"#utility.yul\":2001:2021   */\n  tag_120\n    /* \"#utility.yul\":2019:2020   */\n  dup4\n    /* \"#utility.yul\":2001:2021   */\n  tag_71\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":1996:2021   */\n  swap3\n  pop\n    /* \"#utility.yul\":2056:2057   */\n  dup3\n    /* \"#utility.yul\":2053:2054   */\n  dup3\n    /* \"#utility.yul\":2049:2058   */\n  mul\n    /* \"#utility.yul\":2078:2108   */\n  tag_121\n    /* \"#utility.yul\":2096:2107   */\n  dup2\n    /* \"#utility.yul\":2078:2108   */\n  tag_71\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":2067:2108   */\n  swap2\n  pop\n    /* \"#utility.yul\":2257:2258   */\n  dup3\n    /* \"#utility.yul\":2248:2255   */\n  dup3\n    /* \"#utility.yul\":2244:2259   */\n  div\n    /* \"#utility.yul\":2241:2242   */\n  dup5\n    /* \"#utility.yul\":2238:2260   */\n  eq\n    /* \"#utility.yul\":2218:2219   */\n  dup4\n    /* \"#utility.yul\":2211:2220   */\n  iszero\n    /* \"#utility.yul\":2191:2274   */\n  or\n    /* \"#utility.yul\":2168:2307   */\n  tag_122\n  jumpi\n    /* \"#utility.yul\":2287:2305   */\n  tag_123\n  tag_74\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":2168:2307   */\ntag_122:\n    /* \"#utility.yul\":1952:2314   */\n  pop\n    /* \"#utility.yul\":1904:2314   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2320:2438   */\ntag_75:\n    /* \"#utility.yul\":2407:2431   */\n  tag_125\n    /* \"#utility.yul\":2425:2430   */\n  dup2\n    /* \"#utility.yul\":2407:2431   */\n  tag_68\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":2402:2405   */\n  dup3\n    /* \"#utility.yul\":2395:2432   */\n  mstore\n    /* \"#utility.yul\":2320:2438   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2444:2776   */\ntag_13:\n    /* \"#utility.yul\":2565:2569   */\n  0x00\n    /* \"#utility.yul\":2603:2605   */\n  0x40\n    /* \"#utility.yul\":2592:2601   */\n  dup3\n    /* \"#utility.yul\":2588:2606   */\n  add\n    /* \"#utility.yul\":2580:2606   */\n  swap1\n  pop\n    /* \"#utility.yul\":2616:2687   */\n  tag_127\n    /* \"#utility.yul\":2684:2685   */\n  0x00\n    /* \"#utility.yul\":2673:2682   */\n  dup4\n    /* \"#utility.yul\":2669:2686   */\n  add\n    /* \"#utility.yul\":2660:2666   */\n  dup6\n    /* \"#utility.yul\":2616:2687   */\n  tag_75\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":2697:2769   */\n  tag_128\n    /* \"#utility.yul\":2765:2767   */\n  0x20\n    /* \"#utility.yul\":2754:2763   */\n  dup4\n    /* \"#utility.yul\":2750:2768   */\n  add\n    /* \"#utility.yul\":2741:2747   */\n  dup5\n    /* \"#utility.yul\":2697:2769   */\n  tag_75\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":2444:2776   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2782:3133   */\ntag_17:\n    /* \"#utility.yul\":2852:2858   */\n  0x00\n    /* \"#utility.yul\":2901:2903   */\n  0x20\n    /* \"#utility.yul\":2889:2898   */\n  dup3\n    /* \"#utility.yul\":2880:2887   */\n  dup5\n    /* \"#utility.yul\":2876:2899   */\n  sub\n    /* \"#utility.yul\":2872:2904   */\n  slt\n    /* \"#utility.yul\":2869:2988   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":2907:2986   */\n  tag_131\n  tag_65\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":2869:2988   */\ntag_130:\n    /* \"#utility.yul\":3027:3028   */\n  0x00\n    /* \"#utility.yul\":3052:3116   */\n  tag_132\n    /* \"#utility.yul\":3108:3115   */\n  dup5\n    /* \"#utility.yul\":3099:3105   */\n  dup3\n    /* \"#utility.yul\":3088:3097   */\n  dup6\n    /* \"#utility.yul\":3084:3106   */\n  add\n    /* \"#utility.yul\":3052:3116   */\n  tag_73\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":3042:3116   */\n  swap2\n  pop\n    /* \"#utility.yul\":2998:3126   */\n  pop\n    /* \"#utility.yul\":2782:3133   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3139:3330   */\ntag_19:\n    /* \"#utility.yul\":3179:3182   */\n  0x00\n    /* \"#utility.yul\":3198:3218   */\n  tag_134\n    /* \"#utility.yul\":3216:3217   */\n  dup3\n    /* \"#utility.yul\":3198:3218   */\n  tag_71\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":3193:3218   */\n  swap2\n  pop\n    /* \"#utility.yul\":3232:3252   */\n  tag_135\n    /* \"#utility.yul\":3250:3251   */\n  dup4\n    /* \"#utility.yul\":3232:3252   */\n  tag_71\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":3227:3252   */\n  swap3\n  pop\n    /* \"#utility.yul\":3275:3276   */\n  dup3\n    /* \"#utility.yul\":3272:3273   */\n  dup3\n    /* \"#utility.yul\":3268:3277   */\n  add\n    /* \"#utility.yul\":3261:3277   */\n  swap1\n  pop\n    /* \"#utility.yul\":3296:3299   */\n  dup1\n    /* \"#utility.yul\":3293:3294   */\n  dup3\n    /* \"#utility.yul\":3290:3300   */\n  gt\n    /* \"#utility.yul\":3287:3323   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":3303:3321   */\n  tag_137\n  tag_74\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":3287:3323   */\ntag_136:\n    /* \"#utility.yul\":3139:3330   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3336:3454   */\ntag_76:\n    /* \"#utility.yul\":3423:3447   */\n  tag_139\n    /* \"#utility.yul\":3441:3446   */\n  dup2\n    /* \"#utility.yul\":3423:3447   */\n  tag_71\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":3418:3421   */\n  dup3\n    /* \"#utility.yul\":3411:3448   */\n  mstore\n    /* \"#utility.yul\":3336:3454   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3460:3792   */\ntag_22:\n    /* \"#utility.yul\":3581:3585   */\n  0x00\n    /* \"#utility.yul\":3619:3621   */\n  0x40\n    /* \"#utility.yul\":3608:3617   */\n  dup3\n    /* \"#utility.yul\":3604:3622   */\n  add\n    /* \"#utility.yul\":3596:3622   */\n  swap1\n  pop\n    /* \"#utility.yul\":3632:3703   */\n  tag_141\n    /* \"#utility.yul\":3700:3701   */\n  0x00\n    /* \"#utility.yul\":3689:3698   */\n  dup4\n    /* \"#utility.yul\":3685:3702   */\n  add\n    /* \"#utility.yul\":3676:3682   */\n  dup6\n    /* \"#utility.yul\":3632:3703   */\n  tag_75\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":3713:3785   */\n  tag_142\n    /* \"#utility.yul\":3781:3783   */\n  0x20\n    /* \"#utility.yul\":3770:3779   */\n  dup4\n    /* \"#utility.yul\":3766:3784   */\n  add\n    /* \"#utility.yul\":3757:3763   */\n  dup5\n    /* \"#utility.yul\":3713:3785   */\n  tag_76\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":3460:3792   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3798:3888   */\ntag_77:\n    /* \"#utility.yul\":3832:3839   */\n  0x00\n    /* \"#utility.yul\":3875:3880   */\n  dup2\n    /* \"#utility.yul\":3868:3881   */\n  iszero\n    /* \"#utility.yul\":3861:3882   */\n  iszero\n    /* \"#utility.yul\":3850:3882   */\n  swap1\n  pop\n    /* \"#utility.yul\":3798:3888   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3894:4010   */\ntag_78:\n    /* \"#utility.yul\":3964:3985   */\n  tag_145\n    /* \"#utility.yul\":3979:3984   */\n  dup2\n    /* \"#utility.yul\":3964:3985   */\n  tag_77\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":3957:3962   */\n  dup2\n    /* \"#utility.yul\":3954:3986   */\n  eq\n    /* \"#utility.yul\":3944:4004   */\n  tag_146\n  jumpi\n    /* \"#utility.yul\":4000:4001   */\n  0x00\n    /* \"#utility.yul\":3997:3998   */\n  dup1\n    /* \"#utility.yul\":3990:4002   */\n  revert\n    /* \"#utility.yul\":3944:4004   */\ntag_146:\n    /* \"#utility.yul\":3894:4010   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4016:4153   */\ntag_79:\n    /* \"#utility.yul\":4070:4075   */\n  0x00\n    /* \"#utility.yul\":4101:4107   */\n  dup2\n    /* \"#utility.yul\":4095:4108   */\n  mload\n    /* \"#utility.yul\":4086:4108   */\n  swap1\n  pop\n    /* \"#utility.yul\":4117:4147   */\n  tag_148\n    /* \"#utility.yul\":4141:4146   */\n  dup2\n    /* \"#utility.yul\":4117:4147   */\n  tag_78\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":4016:4153   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4159:4504   */\ntag_29:\n    /* \"#utility.yul\":4226:4232   */\n  0x00\n    /* \"#utility.yul\":4275:4277   */\n  0x20\n    /* \"#utility.yul\":4263:4272   */\n  dup3\n    /* \"#utility.yul\":4254:4261   */\n  dup5\n    /* \"#utility.yul\":4250:4273   */\n  sub\n    /* \"#utility.yul\":4246:4278   */\n  slt\n    /* \"#utility.yul\":4243:4362   */\n  iszero\n  tag_150\n  jumpi\n    /* \"#utility.yul\":4281:4360   */\n  tag_151\n  tag_65\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":4243:4362   */\ntag_150:\n    /* \"#utility.yul\":4401:4402   */\n  0x00\n    /* \"#utility.yul\":4426:4487   */\n  tag_152\n    /* \"#utility.yul\":4479:4486   */\n  dup5\n    /* \"#utility.yul\":4470:4476   */\n  dup3\n    /* \"#utility.yul\":4459:4468   */\n  dup6\n    /* \"#utility.yul\":4455:4477   */\n  add\n    /* \"#utility.yul\":4426:4487   */\n  tag_79\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":4416:4487   */\n  swap2\n  pop\n    /* \"#utility.yul\":4372:4497   */\n  pop\n    /* \"#utility.yul\":4159:4504   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4510:4679   */\ntag_80:\n    /* \"#utility.yul\":4594:4605   */\n  0x00\n    /* \"#utility.yul\":4628:4634   */\n  dup3\n    /* \"#utility.yul\":4623:4626   */\n  dup3\n    /* \"#utility.yul\":4616:4635   */\n  mstore\n    /* \"#utility.yul\":4668:4672   */\n  0x20\n    /* \"#utility.yul\":4663:4666   */\n  dup3\n    /* \"#utility.yul\":4659:4673   */\n  add\n    /* \"#utility.yul\":4644:4673   */\n  swap1\n  pop\n    /* \"#utility.yul\":4510:4679   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4685:4914   */\ntag_81:\n    /* \"#utility.yul\":4825:4859   */\n  0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n    /* \"#utility.yul\":4821:4822   */\n  0x00\n    /* \"#utility.yul\":4813:4819   */\n  dup3\n    /* \"#utility.yul\":4809:4823   */\n  add\n    /* \"#utility.yul\":4802:4860   */\n  mstore\n    /* \"#utility.yul\":4894:4906   */\n  0x6f74207375636365656400000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4889:4891   */\n  0x20\n    /* \"#utility.yul\":4881:4887   */\n  dup3\n    /* \"#utility.yul\":4877:4892   */\n  add\n    /* \"#utility.yul\":4870:4907   */\n  mstore\n    /* \"#utility.yul\":4685:4914   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4920:5286   */\ntag_82:\n    /* \"#utility.yul\":5062:5065   */\n  0x00\n    /* \"#utility.yul\":5083:5150   */\n  tag_156\n    /* \"#utility.yul\":5147:5149   */\n  0x2a\n    /* \"#utility.yul\":5142:5145   */\n  dup4\n    /* \"#utility.yul\":5083:5150   */\n  tag_80\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":5076:5150   */\n  swap2\n  pop\n    /* \"#utility.yul\":5159:5252   */\n  tag_157\n    /* \"#utility.yul\":5248:5251   */\n  dup3\n    /* \"#utility.yul\":5159:5252   */\n  tag_81\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":5277:5279   */\n  0x40\n    /* \"#utility.yul\":5272:5275   */\n  dup3\n    /* \"#utility.yul\":5268:5280   */\n  add\n    /* \"#utility.yul\":5261:5280   */\n  swap1\n  pop\n    /* \"#utility.yul\":4920:5286   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5292:5711   */\ntag_32:\n    /* \"#utility.yul\":5458:5462   */\n  0x00\n    /* \"#utility.yul\":5496:5498   */\n  0x20\n    /* \"#utility.yul\":5485:5494   */\n  dup3\n    /* \"#utility.yul\":5481:5499   */\n  add\n    /* \"#utility.yul\":5473:5499   */\n  swap1\n  pop\n    /* \"#utility.yul\":5545:5554   */\n  dup2\n    /* \"#utility.yul\":5539:5543   */\n  dup2\n    /* \"#utility.yul\":5535:5555   */\n  sub\n    /* \"#utility.yul\":5531:5532   */\n  0x00\n    /* \"#utility.yul\":5520:5529   */\n  dup4\n    /* \"#utility.yul\":5516:5533   */\n  add\n    /* \"#utility.yul\":5509:5556   */\n  mstore\n    /* \"#utility.yul\":5573:5704   */\n  tag_159\n    /* \"#utility.yul\":5699:5703   */\n  dup2\n    /* \"#utility.yul\":5573:5704   */\n  tag_82\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":5565:5704   */\n  swap1\n  pop\n    /* \"#utility.yul\":5292:5711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5717:5942   */\ntag_83:\n    /* \"#utility.yul\":5857:5891   */\n  0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n    /* \"#utility.yul\":5853:5854   */\n  0x00\n    /* \"#utility.yul\":5845:5851   */\n  dup3\n    /* \"#utility.yul\":5841:5855   */\n  add\n    /* \"#utility.yul\":5834:5892   */\n  mstore\n    /* \"#utility.yul\":5926:5934   */\n  0x722063616c6c0000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5921:5923   */\n  0x20\n    /* \"#utility.yul\":5913:5919   */\n  dup3\n    /* \"#utility.yul\":5909:5924   */\n  add\n    /* \"#utility.yul\":5902:5935   */\n  mstore\n    /* \"#utility.yul\":5717:5942   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5948:6314   */\ntag_84:\n    /* \"#utility.yul\":6090:6093   */\n  0x00\n    /* \"#utility.yul\":6111:6178   */\n  tag_162\n    /* \"#utility.yul\":6175:6177   */\n  0x26\n    /* \"#utility.yul\":6170:6173   */\n  dup4\n    /* \"#utility.yul\":6111:6178   */\n  tag_80\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":6104:6178   */\n  swap2\n  pop\n    /* \"#utility.yul\":6187:6280   */\n  tag_163\n    /* \"#utility.yul\":6276:6279   */\n  dup3\n    /* \"#utility.yul\":6187:6280   */\n  tag_83\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":6305:6307   */\n  0x40\n    /* \"#utility.yul\":6300:6303   */\n  dup3\n    /* \"#utility.yul\":6296:6308   */\n  add\n    /* \"#utility.yul\":6289:6308   */\n  swap1\n  pop\n    /* \"#utility.yul\":5948:6314   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6320:6739   */\ntag_39:\n    /* \"#utility.yul\":6486:6490   */\n  0x00\n    /* \"#utility.yul\":6524:6526   */\n  0x20\n    /* \"#utility.yul\":6513:6522   */\n  dup3\n    /* \"#utility.yul\":6509:6527   */\n  add\n    /* \"#utility.yul\":6501:6527   */\n  swap1\n  pop\n    /* \"#utility.yul\":6573:6582   */\n  dup2\n    /* \"#utility.yul\":6567:6571   */\n  dup2\n    /* \"#utility.yul\":6563:6583   */\n  sub\n    /* \"#utility.yul\":6559:6560   */\n  0x00\n    /* \"#utility.yul\":6548:6557   */\n  dup4\n    /* \"#utility.yul\":6544:6561   */\n  add\n    /* \"#utility.yul\":6537:6584   */\n  mstore\n    /* \"#utility.yul\":6601:6732   */\n  tag_165\n    /* \"#utility.yul\":6727:6731   */\n  dup2\n    /* \"#utility.yul\":6601:6732   */\n  tag_84\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":6593:6732   */\n  swap1\n  pop\n    /* \"#utility.yul\":6320:6739   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6745:6843   */\ntag_85:\n    /* \"#utility.yul\":6796:6802   */\n  0x00\n    /* \"#utility.yul\":6830:6835   */\n  dup2\n    /* \"#utility.yul\":6824:6836   */\n  mload\n    /* \"#utility.yul\":6814:6836   */\n  swap1\n  pop\n    /* \"#utility.yul\":6745:6843   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6849:6996   */\ntag_86:\n    /* \"#utility.yul\":6950:6961   */\n  0x00\n    /* \"#utility.yul\":6987:6990   */\n  dup2\n    /* \"#utility.yul\":6972:6990   */\n  swap1\n  pop\n    /* \"#utility.yul\":6849:6996   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7002:7248   */\ntag_87:\n    /* \"#utility.yul\":7083:7084   */\n  0x00\n    /* \"#utility.yul\":7093:7206   */\ntag_169:\n    /* \"#utility.yul\":7107:7113   */\n  dup4\n    /* \"#utility.yul\":7104:7105   */\n  dup2\n    /* \"#utility.yul\":7101:7114   */\n  lt\n    /* \"#utility.yul\":7093:7206   */\n  iszero\n  tag_171\n  jumpi\n    /* \"#utility.yul\":7192:7193   */\n  dup1\n    /* \"#utility.yul\":7187:7190   */\n  dup3\n    /* \"#utility.yul\":7183:7194   */\n  add\n    /* \"#utility.yul\":7177:7195   */\n  mload\n    /* \"#utility.yul\":7173:7174   */\n  dup2\n    /* \"#utility.yul\":7168:7171   */\n  dup5\n    /* \"#utility.yul\":7164:7175   */\n  add\n    /* \"#utility.yul\":7157:7196   */\n  mstore\n    /* \"#utility.yul\":7129:7131   */\n  0x20\n    /* \"#utility.yul\":7126:7127   */\n  dup2\n    /* \"#utility.yul\":7122:7132   */\n  add\n    /* \"#utility.yul\":7117:7132   */\n  swap1\n  pop\n    /* \"#utility.yul\":7093:7206   */\n  jump(tag_169)\ntag_171:\n    /* \"#utility.yul\":7240:7241   */\n  0x00\n    /* \"#utility.yul\":7231:7237   */\n  dup5\n    /* \"#utility.yul\":7226:7229   */\n  dup5\n    /* \"#utility.yul\":7222:7238   */\n  add\n    /* \"#utility.yul\":7215:7242   */\n  mstore\n    /* \"#utility.yul\":7064:7248   */\n  pop\n    /* \"#utility.yul\":7002:7248   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7254:7640   */\ntag_88:\n    /* \"#utility.yul\":7358:7361   */\n  0x00\n    /* \"#utility.yul\":7386:7424   */\n  tag_173\n    /* \"#utility.yul\":7418:7423   */\n  dup3\n    /* \"#utility.yul\":7386:7424   */\n  tag_85\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":7440:7528   */\n  tag_174\n    /* \"#utility.yul\":7521:7527   */\n  dup2\n    /* \"#utility.yul\":7516:7519   */\n  dup6\n    /* \"#utility.yul\":7440:7528   */\n  tag_86\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":7433:7528   */\n  swap4\n  pop\n    /* \"#utility.yul\":7537:7602   */\n  tag_175\n    /* \"#utility.yul\":7595:7601   */\n  dup2\n    /* \"#utility.yul\":7590:7593   */\n  dup6\n    /* \"#utility.yul\":7583:7587   */\n  0x20\n    /* \"#utility.yul\":7576:7581   */\n  dup7\n    /* \"#utility.yul\":7572:7588   */\n  add\n    /* \"#utility.yul\":7537:7602   */\n  tag_87\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":7627:7633   */\n  dup1\n    /* \"#utility.yul\":7622:7625   */\n  dup5\n    /* \"#utility.yul\":7618:7634   */\n  add\n    /* \"#utility.yul\":7611:7634   */\n  swap2\n  pop\n    /* \"#utility.yul\":7362:7640   */\n  pop\n    /* \"#utility.yul\":7254:7640   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7646:7917   */\ntag_41:\n    /* \"#utility.yul\":7776:7779   */\n  0x00\n    /* \"#utility.yul\":7798:7891   */\n  tag_177\n    /* \"#utility.yul\":7887:7890   */\n  dup3\n    /* \"#utility.yul\":7878:7884   */\n  dup5\n    /* \"#utility.yul\":7798:7891   */\n  tag_88\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":7791:7891   */\n  swap2\n  pop\n    /* \"#utility.yul\":7908:7911   */\n  dup2\n    /* \"#utility.yul\":7901:7911   */\n  swap1\n  pop\n    /* \"#utility.yul\":7646:7917   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7923:8102   */\ntag_89:\n    /* \"#utility.yul\":8063:8094   */\n  0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n    /* \"#utility.yul\":8059:8060   */\n  0x00\n    /* \"#utility.yul\":8051:8057   */\n  dup3\n    /* \"#utility.yul\":8047:8061   */\n  add\n    /* \"#utility.yul\":8040:8095   */\n  mstore\n    /* \"#utility.yul\":7923:8102   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8108:8474   */\ntag_90:\n    /* \"#utility.yul\":8250:8253   */\n  0x00\n    /* \"#utility.yul\":8271:8338   */\n  tag_180\n    /* \"#utility.yul\":8335:8337   */\n  0x1d\n    /* \"#utility.yul\":8330:8333   */\n  dup4\n    /* \"#utility.yul\":8271:8338   */\n  tag_80\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":8264:8338   */\n  swap2\n  pop\n    /* \"#utility.yul\":8347:8440   */\n  tag_181\n    /* \"#utility.yul\":8436:8439   */\n  dup3\n    /* \"#utility.yul\":8347:8440   */\n  tag_89\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":8465:8467   */\n  0x20\n    /* \"#utility.yul\":8460:8463   */\n  dup3\n    /* \"#utility.yul\":8456:8468   */\n  add\n    /* \"#utility.yul\":8449:8468   */\n  swap1\n  pop\n    /* \"#utility.yul\":8108:8474   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8480:8899   */\ntag_54:\n    /* \"#utility.yul\":8646:8650   */\n  0x00\n    /* \"#utility.yul\":8684:8686   */\n  0x20\n    /* \"#utility.yul\":8673:8682   */\n  dup3\n    /* \"#utility.yul\":8669:8687   */\n  add\n    /* \"#utility.yul\":8661:8687   */\n  swap1\n  pop\n    /* \"#utility.yul\":8733:8742   */\n  dup2\n    /* \"#utility.yul\":8727:8731   */\n  dup2\n    /* \"#utility.yul\":8723:8743   */\n  sub\n    /* \"#utility.yul\":8719:8720   */\n  0x00\n    /* \"#utility.yul\":8708:8717   */\n  dup4\n    /* \"#utility.yul\":8704:8721   */\n  add\n    /* \"#utility.yul\":8697:8744   */\n  mstore\n    /* \"#utility.yul\":8761:8892   */\n  tag_183\n    /* \"#utility.yul\":8887:8891   */\n  dup2\n    /* \"#utility.yul\":8761:8892   */\n  tag_90\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":8753:8892   */\n  swap1\n  pop\n    /* \"#utility.yul\":8480:8899   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8905:9004   */\ntag_91:\n    /* \"#utility.yul\":8957:8963   */\n  0x00\n    /* \"#utility.yul\":8991:8996   */\n  dup2\n    /* \"#utility.yul\":8985:8997   */\n  mload\n    /* \"#utility.yul\":8975:8997   */\n  swap1\n  pop\n    /* \"#utility.yul\":8905:9004   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9010:9112   */\ntag_92:\n    /* \"#utility.yul\":9051:9057   */\n  0x00\n    /* \"#utility.yul\":9102:9104   */\n  0x1f\n    /* \"#utility.yul\":9098:9105   */\n  not\n    /* \"#utility.yul\":9093:9095   */\n  0x1f\n    /* \"#utility.yul\":9086:9091   */\n  dup4\n    /* \"#utility.yul\":9082:9096   */\n  add\n    /* \"#utility.yul\":9078:9106   */\n  and\n    /* \"#utility.yul\":9068:9106   */\n  swap1\n  pop\n    /* \"#utility.yul\":9010:9112   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9118:9495   */\ntag_93:\n    /* \"#utility.yul\":9206:9209   */\n  0x00\n    /* \"#utility.yul\":9234:9273   */\n  tag_187\n    /* \"#utility.yul\":9267:9272   */\n  dup3\n    /* \"#utility.yul\":9234:9273   */\n  tag_91\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":9289:9360   */\n  tag_188\n    /* \"#utility.yul\":9353:9359   */\n  dup2\n    /* \"#utility.yul\":9348:9351   */\n  dup6\n    /* \"#utility.yul\":9289:9360   */\n  tag_80\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":9282:9360   */\n  swap4\n  pop\n    /* \"#utility.yul\":9369:9434   */\n  tag_189\n    /* \"#utility.yul\":9427:9433   */\n  dup2\n    /* \"#utility.yul\":9422:9425   */\n  dup6\n    /* \"#utility.yul\":9415:9419   */\n  0x20\n    /* \"#utility.yul\":9408:9413   */\n  dup7\n    /* \"#utility.yul\":9404:9420   */\n  add\n    /* \"#utility.yul\":9369:9434   */\n  tag_87\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":9459:9488   */\n  tag_190\n    /* \"#utility.yul\":9481:9487   */\n  dup2\n    /* \"#utility.yul\":9459:9488   */\n  tag_92\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":9454:9457   */\n  dup5\n    /* \"#utility.yul\":9450:9489   */\n  add\n    /* \"#utility.yul\":9443:9489   */\n  swap2\n  pop\n    /* \"#utility.yul\":9210:9495   */\n  pop\n    /* \"#utility.yul\":9118:9495   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9501:9814   */\ntag_63:\n    /* \"#utility.yul\":9614:9618   */\n  0x00\n    /* \"#utility.yul\":9652:9654   */\n  0x20\n    /* \"#utility.yul\":9641:9650   */\n  dup3\n    /* \"#utility.yul\":9637:9655   */\n  add\n    /* \"#utility.yul\":9629:9655   */\n  swap1\n  pop\n    /* \"#utility.yul\":9701:9710   */\n  dup2\n    /* \"#utility.yul\":9695:9699   */\n  dup2\n    /* \"#utility.yul\":9691:9711   */\n  sub\n    /* \"#utility.yul\":9687:9688   */\n  0x00\n    /* \"#utility.yul\":9676:9685   */\n  dup4\n    /* \"#utility.yul\":9672:9689   */\n  add\n    /* \"#utility.yul\":9665:9712   */\n  mstore\n    /* \"#utility.yul\":9729:9807   */\n  tag_192\n    /* \"#utility.yul\":9802:9806   */\n  dup2\n    /* \"#utility.yul\":9793:9799   */\n  dup5\n    /* \"#utility.yul\":9729:9807   */\n  tag_93\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":9721:9807   */\n  swap1\n  pop\n    /* \"#utility.yul\":9501:9814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/stake.sol\":187:1210  contract Stake {... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/stake.sol\":187:1210  contract Stake {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x60c7dc47\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x73cf575a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/stake.sol\":269:295  uint256 public stakeAmount */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/stake.sol\":1053:1206  function unStake() external {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      stop\n        /* \"contracts/stake.sol\":705:1026  function stake(uint256 _amount) external {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      stop\n        /* \"contracts/stake.sol\":269:295  uint256 public stakeAmount */\n    tag_10:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/stake.sol\":1053:1206  function unStake() external {... */\n    tag_15:\n        /* \"contracts/stake.sol\":1091:1199  token.safeTransferFrom(... */\n      tag_24\n        /* \"contracts/stake.sol\":1135:1139  this */\n      address\n        /* \"contracts/stake.sol\":1154:1164  msg.sender */\n      caller\n        /* \"contracts/stake.sol\":1178:1189  stakeAmount */\n      sload(0x01)\n        /* \"contracts/stake.sol\":1091:1096  token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/stake.sol\":1091:1113  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_25\n      swap1\n        /* \"contracts/stake.sol\":1091:1199  token.safeTransferFrom(... */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_24:\n        /* \"contracts/stake.sol\":1053:1206  function unStake() external {... */\n      jump\t// out\n        /* \"contracts/stake.sol\":705:1026  function stake(uint256 _amount) external {... */\n    tag_20:\n        /* \"contracts/stake.sol\":774:775  0 */\n      0x00\n        /* \"contracts/stake.sol\":764:771  _amount */\n      dup2\n        /* \"contracts/stake.sol\":764:775  _amount > 0 */\n      gt\n        /* \"contracts/stake.sol\":756:795  require(_amount > 0, \"amount not zero\") */\n      tag_27\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_28\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_27:\n        /* \"contracts/stake.sol\":844:851  _amount */\n      dup1\n        /* \"contracts/stake.sol\":813:818  token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/stake.sol\":813:828  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/stake.sol\":829:839  msg.sender */\n      caller\n        /* \"contracts/stake.sol\":813:840  token.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_33\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_33:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"contracts/stake.sol\":813:851  token.balanceOf(msg.sender) >= _amount */\n      lt\n      iszero\n        /* \"contracts/stake.sol\":805:868  require(token.balanceOf(msg.sender) >= _amount,\"staking faild\") */\n      tag_36\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_37\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_36:\n        /* \"contracts/stake.sol\":883:940  StakeEvent(msg.sender, address(this), _amount * 10 ** 18) */\n      0x160ffcaa807f78c8b4983836e2396338d073e75695ac448aa0b5e4a75b210b1d\n        /* \"contracts/stake.sol\":894:904  msg.sender */\n      caller\n        /* \"contracts/stake.sol\":914:918  this */\n      address\n        /* \"contracts/stake.sol\":931:939  10 ** 18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/stake.sol\":921:928  _amount */\n      dup5\n        /* \"contracts/stake.sol\":921:939  _amount * 10 ** 18 */\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"contracts/stake.sol\":883:940  StakeEvent(msg.sender, address(this), _amount * 10 ** 18) */\n      mload(0x40)\n      tag_41\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/stake.sol\":950:1019  token.safeTransferFrom(msg.sender, address(this), _amount * 10 ** 18) */\n      tag_43\n        /* \"contracts/stake.sol\":973:983  msg.sender */\n      caller\n        /* \"contracts/stake.sol\":993:997  this */\n      address\n        /* \"contracts/stake.sol\":1010:1018  10 ** 18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/stake.sol\":1000:1007  _amount */\n      dup5\n        /* \"contracts/stake.sol\":1000:1018  _amount * 10 ** 18 */\n      tag_44\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_44:\n        /* \"contracts/stake.sol\":950:955  token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/stake.sol\":950:972  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_25\n      swap1\n        /* \"contracts/stake.sol\":950:1019  token.safeTransferFrom(msg.sender, address(this), _amount * 10 ** 18) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_43:\n        /* \"contracts/stake.sol\":705:1026  function stake(uint256 _amount) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2084:2394  function safeIncreaseAllowance(... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2210:2230  uint256 newAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2275:2280  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2233:2238  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2233:2248  token.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2257:2261  this */\n      address\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2264:2271  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2233:2272  token.allowance(address(this), spender) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_46\n      swap3\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_49\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_49:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_50:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2233:2280  token.allowance(address(this), spender) + value */\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2210:2280  uint256 newAllowance = token.allowance(address(this), spender) + value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2290:2387  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance)) */\n      tag_53\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2310:2315  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2340:2362  token.approve.selector */\n      shl(0xe0, 0x095ea7b3)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2364:2371  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2373:2385  newAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2317:2386  abi.encodeWithSelector(token.approve.selector, spender, newAllowance) */\n      add(0x24, mload(0x40))\n      tag_54\n      swap3\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2290:2309  _callOptionalReturn */\n      tag_56\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2290:2387  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance)) */\n      jump\t// in\n    tag_53:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2200:2394  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2084:2394  function safeIncreaseAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3873:4096  function functionCall(... */\n    tag_22:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4006:4018  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4089  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_58\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4059:4065  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4067:4071  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4073:4074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4076:4088  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4058  functionCallWithValue */\n      tag_59\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4089  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_58:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4030:4089  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3873:4096  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":974:1215  function safeTransferFrom(... */\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1208  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1132:1137  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1162:1189  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1191:1195  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1197:1199  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1201:1206  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1139:1207  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_62\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1131  _callOptionalReturn */\n      tag_56\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1208  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":974:1215  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3747:4453  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4189  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_64\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4220:4224  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4200:4205  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4219  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_22\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4261  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4295:4296  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4285  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4292  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4296  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4271:4447  if (returndata.length > 0) {... */\n      iszero\n      tag_65\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4370:4380  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4359:4389  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4271:4447  if (returndata.length > 0) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3817:4453  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3747:4453  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4960:5406  function functionCallWithValue(... */\n    tag_59:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5125:5137  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5182:5187  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5157:5178  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5157:5187  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5149:5230  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_72\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_72:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5241:5253  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5255:5278  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5288  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5293  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5301:5306  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5308:5312  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5313  target.call{value: value}(data) */\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_79\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_78)\n    tag_79:\n      0x60\n      swap2\n      pop\n    tag_78:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5240:5313  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5399  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_80\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5357:5363  target */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5365:5372  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5374:5384  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5386:5398  errorMessage */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5356  verifyCallResultFromTarget */\n      tag_81\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5399  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5323:5399  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4960:5406  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7466:8094  function verifyCallResultFromTarget(... */\n    tag_81:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7646:7658  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7674:7681  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7670:8088  if (success) {... */\n      iszero\n      tag_83\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7722:7723  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7711  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7718  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7723  returndata.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7697:7983  if (returndata.length == 0) {... */\n      tag_84\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7916:7934  isContract(target) */\n      tag_85\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7927:7933  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7916:7926  isContract */\n      tag_86\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7916:7934  isContract(target) */\n      jump\t// in\n    tag_85:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7908:7968  require(isContract(target), \"Address: call to non-contract\") */\n      tag_87\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_88\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_87:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7697:7983  if (returndata.length == 0) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8003:8013  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7996:8013  return returndata */\n      swap1\n      pop\n      jump(tag_82)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7670:8088  if (success) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8044:8077  _revert(returndata, errorMessage) */\n      tag_91\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8052:8062  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8064:8076  errorMessage */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8044:8051  _revert */\n      tag_92\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8044:8077  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7466:8094  function verifyCallResultFromTarget(... */\n    tag_82:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8616:9156  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8795:8796  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8785  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8792  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8796  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8771:9150  if (returndata.length > 0) {... */\n      iszero\n      tag_95\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9003:9013  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8997:9014  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9059:9074  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9046:9056  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9042:9044  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9038:9057  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9031:9075  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8771:9150  if (returndata.length > 0) {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9126:9138  errorMessage */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9119:9139  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:84   */\n    tag_99:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_100:\n        /* \"#utility.yul\":177:201   */\n      tag_135\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_99\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_12:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_137\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_100\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_102:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:891   */\n    tag_104:\n        /* \"#utility.yul\":842:866   */\n      tag_142\n        /* \"#utility.yul\":860:865   */\n      dup2\n        /* \"#utility.yul\":842:866   */\n      tag_99\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":835:840   */\n      dup2\n        /* \"#utility.yul\":832:867   */\n      eq\n        /* \"#utility.yul\":822:885   */\n      tag_143\n      jumpi\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":878:879   */\n      dup1\n        /* \"#utility.yul\":871:883   */\n      revert\n        /* \"#utility.yul\":822:885   */\n    tag_143:\n        /* \"#utility.yul\":769:891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1036   */\n    tag_105:\n        /* \"#utility.yul\":943:948   */\n      0x00\n        /* \"#utility.yul\":981:987   */\n      dup2\n        /* \"#utility.yul\":968:988   */\n      calldataload\n        /* \"#utility.yul\":959:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":997:1030   */\n      tag_145\n        /* \"#utility.yul\":1024:1029   */\n      dup2\n        /* \"#utility.yul\":997:1030   */\n      tag_104\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":897:1036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1371   */\n    tag_19:\n        /* \"#utility.yul\":1101:1107   */\n      0x00\n        /* \"#utility.yul\":1150:1152   */\n      0x20\n        /* \"#utility.yul\":1138:1147   */\n      dup3\n        /* \"#utility.yul\":1129:1136   */\n      dup5\n        /* \"#utility.yul\":1125:1148   */\n      sub\n        /* \"#utility.yul\":1121:1153   */\n      slt\n        /* \"#utility.yul\":1118:1237   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":1156:1235   */\n      tag_148\n      tag_102\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":1118:1237   */\n    tag_147:\n        /* \"#utility.yul\":1276:1277   */\n      0x00\n        /* \"#utility.yul\":1301:1354   */\n      tag_149\n        /* \"#utility.yul\":1346:1353   */\n      dup5\n        /* \"#utility.yul\":1337:1343   */\n      dup3\n        /* \"#utility.yul\":1326:1335   */\n      dup6\n        /* \"#utility.yul\":1322:1344   */\n      add\n        /* \"#utility.yul\":1301:1354   */\n      tag_105\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":1291:1354   */\n      swap2\n      pop\n        /* \"#utility.yul\":1247:1364   */\n      pop\n        /* \"#utility.yul\":1042:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1546   */\n    tag_106:\n        /* \"#utility.yul\":1461:1472   */\n      0x00\n        /* \"#utility.yul\":1495:1501   */\n      dup3\n        /* \"#utility.yul\":1490:1493   */\n      dup3\n        /* \"#utility.yul\":1483:1502   */\n      mstore\n        /* \"#utility.yul\":1535:1539   */\n      0x20\n        /* \"#utility.yul\":1530:1533   */\n      dup3\n        /* \"#utility.yul\":1526:1540   */\n      add\n        /* \"#utility.yul\":1511:1540   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1546   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1552:1717   */\n    tag_107:\n        /* \"#utility.yul\":1692:1709   */\n      0x616d6f756e74206e6f74207a65726f0000000000000000000000000000000000\n        /* \"#utility.yul\":1688:1689   */\n      0x00\n        /* \"#utility.yul\":1680:1686   */\n      dup3\n        /* \"#utility.yul\":1676:1690   */\n      add\n        /* \"#utility.yul\":1669:1710   */\n      mstore\n        /* \"#utility.yul\":1552:1717   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1723:2089   */\n    tag_108:\n        /* \"#utility.yul\":1865:1868   */\n      0x00\n        /* \"#utility.yul\":1886:1953   */\n      tag_153\n        /* \"#utility.yul\":1950:1952   */\n      0x0f\n        /* \"#utility.yul\":1945:1948   */\n      dup4\n        /* \"#utility.yul\":1886:1953   */\n      tag_106\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":1879:1953   */\n      swap2\n      pop\n        /* \"#utility.yul\":1962:2055   */\n      tag_154\n        /* \"#utility.yul\":2051:2054   */\n      dup3\n        /* \"#utility.yul\":1962:2055   */\n      tag_107\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":2080:2082   */\n      0x20\n        /* \"#utility.yul\":2075:2078   */\n      dup3\n        /* \"#utility.yul\":2071:2083   */\n      add\n        /* \"#utility.yul\":2064:2083   */\n      swap1\n      pop\n        /* \"#utility.yul\":1723:2089   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2095:2514   */\n    tag_29:\n        /* \"#utility.yul\":2261:2265   */\n      0x00\n        /* \"#utility.yul\":2299:2301   */\n      0x20\n        /* \"#utility.yul\":2288:2297   */\n      dup3\n        /* \"#utility.yul\":2284:2302   */\n      add\n        /* \"#utility.yul\":2276:2302   */\n      swap1\n      pop\n        /* \"#utility.yul\":2348:2357   */\n      dup2\n        /* \"#utility.yul\":2342:2346   */\n      dup2\n        /* \"#utility.yul\":2338:2358   */\n      sub\n        /* \"#utility.yul\":2334:2335   */\n      0x00\n        /* \"#utility.yul\":2323:2332   */\n      dup4\n        /* \"#utility.yul\":2319:2336   */\n      add\n        /* \"#utility.yul\":2312:2359   */\n      mstore\n        /* \"#utility.yul\":2376:2507   */\n      tag_156\n        /* \"#utility.yul\":2502:2506   */\n      dup2\n        /* \"#utility.yul\":2376:2507   */\n      tag_108\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":2368:2507   */\n      swap1\n      pop\n        /* \"#utility.yul\":2095:2514   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2520:2646   */\n    tag_109:\n        /* \"#utility.yul\":2557:2564   */\n      0x00\n        /* \"#utility.yul\":2597:2639   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2590:2595   */\n      dup3\n        /* \"#utility.yul\":2586:2640   */\n      and\n        /* \"#utility.yul\":2575:2640   */\n      swap1\n      pop\n        /* \"#utility.yul\":2520:2646   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2652:2748   */\n    tag_110:\n        /* \"#utility.yul\":2689:2696   */\n      0x00\n        /* \"#utility.yul\":2718:2742   */\n      tag_159\n        /* \"#utility.yul\":2736:2741   */\n      dup3\n        /* \"#utility.yul\":2718:2742   */\n      tag_109\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":2707:2742   */\n      swap1\n      pop\n        /* \"#utility.yul\":2652:2748   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2754:2872   */\n    tag_111:\n        /* \"#utility.yul\":2841:2865   */\n      tag_161\n        /* \"#utility.yul\":2859:2864   */\n      dup2\n        /* \"#utility.yul\":2841:2865   */\n      tag_110\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2836:2839   */\n      dup3\n        /* \"#utility.yul\":2829:2866   */\n      mstore\n        /* \"#utility.yul\":2754:2872   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2878:3100   */\n    tag_31:\n        /* \"#utility.yul\":2971:2975   */\n      0x00\n        /* \"#utility.yul\":3009:3011   */\n      0x20\n        /* \"#utility.yul\":2998:3007   */\n      dup3\n        /* \"#utility.yul\":2994:3012   */\n      add\n        /* \"#utility.yul\":2986:3012   */\n      swap1\n      pop\n        /* \"#utility.yul\":3022:3093   */\n      tag_163\n        /* \"#utility.yul\":3090:3091   */\n      0x00\n        /* \"#utility.yul\":3079:3088   */\n      dup4\n        /* \"#utility.yul\":3075:3092   */\n      add\n        /* \"#utility.yul\":3066:3072   */\n      dup5\n        /* \"#utility.yul\":3022:3093   */\n      tag_111\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2878:3100   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3106:3249   */\n    tag_112:\n        /* \"#utility.yul\":3163:3168   */\n      0x00\n        /* \"#utility.yul\":3194:3200   */\n      dup2\n        /* \"#utility.yul\":3188:3201   */\n      mload\n        /* \"#utility.yul\":3179:3201   */\n      swap1\n      pop\n        /* \"#utility.yul\":3210:3243   */\n      tag_165\n        /* \"#utility.yul\":3237:3242   */\n      dup2\n        /* \"#utility.yul\":3210:3243   */\n      tag_104\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":3106:3249   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3255:3606   */\n    tag_35:\n        /* \"#utility.yul\":3325:3331   */\n      0x00\n        /* \"#utility.yul\":3374:3376   */\n      0x20\n        /* \"#utility.yul\":3362:3371   */\n      dup3\n        /* \"#utility.yul\":3353:3360   */\n      dup5\n        /* \"#utility.yul\":3349:3372   */\n      sub\n        /* \"#utility.yul\":3345:3377   */\n      slt\n        /* \"#utility.yul\":3342:3461   */\n      iszero\n      tag_167\n      jumpi\n        /* \"#utility.yul\":3380:3459   */\n      tag_168\n      tag_102\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":3342:3461   */\n    tag_167:\n        /* \"#utility.yul\":3500:3501   */\n      0x00\n        /* \"#utility.yul\":3525:3589   */\n      tag_169\n        /* \"#utility.yul\":3581:3588   */\n      dup5\n        /* \"#utility.yul\":3572:3578   */\n      dup3\n        /* \"#utility.yul\":3561:3570   */\n      dup6\n        /* \"#utility.yul\":3557:3579   */\n      add\n        /* \"#utility.yul\":3525:3589   */\n      tag_112\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":3515:3589   */\n      swap2\n      pop\n        /* \"#utility.yul\":3471:3599   */\n      pop\n        /* \"#utility.yul\":3255:3606   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3612:3775   */\n    tag_113:\n        /* \"#utility.yul\":3752:3767   */\n      0x7374616b696e67206661696c6400000000000000000000000000000000000000\n        /* \"#utility.yul\":3748:3749   */\n      0x00\n        /* \"#utility.yul\":3740:3746   */\n      dup3\n        /* \"#utility.yul\":3736:3750   */\n      add\n        /* \"#utility.yul\":3729:3768   */\n      mstore\n        /* \"#utility.yul\":3612:3775   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3781:4147   */\n    tag_114:\n        /* \"#utility.yul\":3923:3926   */\n      0x00\n        /* \"#utility.yul\":3944:4011   */\n      tag_172\n        /* \"#utility.yul\":4008:4010   */\n      0x0d\n        /* \"#utility.yul\":4003:4006   */\n      dup4\n        /* \"#utility.yul\":3944:4011   */\n      tag_106\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":3937:4011   */\n      swap2\n      pop\n        /* \"#utility.yul\":4020:4113   */\n      tag_173\n        /* \"#utility.yul\":4109:4112   */\n      dup3\n        /* \"#utility.yul\":4020:4113   */\n      tag_113\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":4138:4140   */\n      0x20\n        /* \"#utility.yul\":4133:4136   */\n      dup3\n        /* \"#utility.yul\":4129:4141   */\n      add\n        /* \"#utility.yul\":4122:4141   */\n      swap1\n      pop\n        /* \"#utility.yul\":3781:4147   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4153:4572   */\n    tag_38:\n        /* \"#utility.yul\":4319:4323   */\n      0x00\n        /* \"#utility.yul\":4357:4359   */\n      0x20\n        /* \"#utility.yul\":4346:4355   */\n      dup3\n        /* \"#utility.yul\":4342:4360   */\n      add\n        /* \"#utility.yul\":4334:4360   */\n      swap1\n      pop\n        /* \"#utility.yul\":4406:4415   */\n      dup2\n        /* \"#utility.yul\":4400:4404   */\n      dup2\n        /* \"#utility.yul\":4396:4416   */\n      sub\n        /* \"#utility.yul\":4392:4393   */\n      0x00\n        /* \"#utility.yul\":4381:4390   */\n      dup4\n        /* \"#utility.yul\":4377:4394   */\n      add\n        /* \"#utility.yul\":4370:4417   */\n      mstore\n        /* \"#utility.yul\":4434:4565   */\n      tag_175\n        /* \"#utility.yul\":4560:4564   */\n      dup2\n        /* \"#utility.yul\":4434:4565   */\n      tag_114\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":4426:4565   */\n      swap1\n      pop\n        /* \"#utility.yul\":4153:4572   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4578:4758   */\n    tag_115:\n        /* \"#utility.yul\":4626:4703   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4623:4624   */\n      0x00\n        /* \"#utility.yul\":4616:4704   */\n      mstore\n        /* \"#utility.yul\":4723:4727   */\n      0x11\n        /* \"#utility.yul\":4720:4721   */\n      0x04\n        /* \"#utility.yul\":4713:4728   */\n      mstore\n        /* \"#utility.yul\":4747:4751   */\n      0x24\n        /* \"#utility.yul\":4744:4745   */\n      0x00\n        /* \"#utility.yul\":4737:4752   */\n      revert\n        /* \"#utility.yul\":4764:5174   */\n    tag_40:\n        /* \"#utility.yul\":4804:4811   */\n      0x00\n        /* \"#utility.yul\":4827:4847   */\n      tag_178\n        /* \"#utility.yul\":4845:4846   */\n      dup3\n        /* \"#utility.yul\":4827:4847   */\n      tag_99\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":4822:4847   */\n      swap2\n      pop\n        /* \"#utility.yul\":4861:4881   */\n      tag_179\n        /* \"#utility.yul\":4879:4880   */\n      dup4\n        /* \"#utility.yul\":4861:4881   */\n      tag_99\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":4856:4881   */\n      swap3\n      pop\n        /* \"#utility.yul\":4916:4917   */\n      dup3\n        /* \"#utility.yul\":4913:4914   */\n      dup3\n        /* \"#utility.yul\":4909:4918   */\n      mul\n        /* \"#utility.yul\":4938:4968   */\n      tag_180\n        /* \"#utility.yul\":4956:4967   */\n      dup2\n        /* \"#utility.yul\":4938:4968   */\n      tag_99\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":4927:4968   */\n      swap2\n      pop\n        /* \"#utility.yul\":5117:5118   */\n      dup3\n        /* \"#utility.yul\":5108:5115   */\n      dup3\n        /* \"#utility.yul\":5104:5119   */\n      div\n        /* \"#utility.yul\":5101:5102   */\n      dup5\n        /* \"#utility.yul\":5098:5120   */\n      eq\n        /* \"#utility.yul\":5078:5079   */\n      dup4\n        /* \"#utility.yul\":5071:5080   */\n      iszero\n        /* \"#utility.yul\":5051:5134   */\n      or\n        /* \"#utility.yul\":5028:5167   */\n      tag_181\n      jumpi\n        /* \"#utility.yul\":5147:5165   */\n      tag_182\n      tag_115\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":5028:5167   */\n    tag_181:\n        /* \"#utility.yul\":4812:5174   */\n      pop\n        /* \"#utility.yul\":4764:5174   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5180:5622   */\n    tag_42:\n        /* \"#utility.yul\":5329:5333   */\n      0x00\n        /* \"#utility.yul\":5367:5369   */\n      0x60\n        /* \"#utility.yul\":5356:5365   */\n      dup3\n        /* \"#utility.yul\":5352:5370   */\n      add\n        /* \"#utility.yul\":5344:5370   */\n      swap1\n      pop\n        /* \"#utility.yul\":5380:5451   */\n      tag_184\n        /* \"#utility.yul\":5448:5449   */\n      0x00\n        /* \"#utility.yul\":5437:5446   */\n      dup4\n        /* \"#utility.yul\":5433:5450   */\n      add\n        /* \"#utility.yul\":5424:5430   */\n      dup7\n        /* \"#utility.yul\":5380:5451   */\n      tag_111\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":5461:5533   */\n      tag_185\n        /* \"#utility.yul\":5529:5531   */\n      0x20\n        /* \"#utility.yul\":5518:5527   */\n      dup4\n        /* \"#utility.yul\":5514:5532   */\n      add\n        /* \"#utility.yul\":5505:5511   */\n      dup6\n        /* \"#utility.yul\":5461:5533   */\n      tag_111\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":5543:5615   */\n      tag_186\n        /* \"#utility.yul\":5611:5613   */\n      0x40\n        /* \"#utility.yul\":5600:5609   */\n      dup4\n        /* \"#utility.yul\":5596:5614   */\n      add\n        /* \"#utility.yul\":5587:5593   */\n      dup5\n        /* \"#utility.yul\":5543:5615   */\n      tag_100\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":5180:5622   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5628:5960   */\n    tag_47:\n        /* \"#utility.yul\":5749:5753   */\n      0x00\n        /* \"#utility.yul\":5787:5789   */\n      0x40\n        /* \"#utility.yul\":5776:5785   */\n      dup3\n        /* \"#utility.yul\":5772:5790   */\n      add\n        /* \"#utility.yul\":5764:5790   */\n      swap1\n      pop\n        /* \"#utility.yul\":5800:5871   */\n      tag_188\n        /* \"#utility.yul\":5868:5869   */\n      0x00\n        /* \"#utility.yul\":5857:5866   */\n      dup4\n        /* \"#utility.yul\":5853:5870   */\n      add\n        /* \"#utility.yul\":5844:5850   */\n      dup6\n        /* \"#utility.yul\":5800:5871   */\n      tag_111\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":5881:5953   */\n      tag_189\n        /* \"#utility.yul\":5949:5951   */\n      0x20\n        /* \"#utility.yul\":5938:5947   */\n      dup4\n        /* \"#utility.yul\":5934:5952   */\n      add\n        /* \"#utility.yul\":5925:5931   */\n      dup5\n        /* \"#utility.yul\":5881:5953   */\n      tag_111\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":5628:5960   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5966:6157   */\n    tag_52:\n        /* \"#utility.yul\":6006:6009   */\n      0x00\n        /* \"#utility.yul\":6025:6045   */\n      tag_191\n        /* \"#utility.yul\":6043:6044   */\n      dup3\n        /* \"#utility.yul\":6025:6045   */\n      tag_99\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":6020:6045   */\n      swap2\n      pop\n        /* \"#utility.yul\":6059:6079   */\n      tag_192\n        /* \"#utility.yul\":6077:6078   */\n      dup4\n        /* \"#utility.yul\":6059:6079   */\n      tag_99\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":6054:6079   */\n      swap3\n      pop\n        /* \"#utility.yul\":6102:6103   */\n      dup3\n        /* \"#utility.yul\":6099:6100   */\n      dup3\n        /* \"#utility.yul\":6095:6104   */\n      add\n        /* \"#utility.yul\":6088:6104   */\n      swap1\n      pop\n        /* \"#utility.yul\":6123:6126   */\n      dup1\n        /* \"#utility.yul\":6120:6121   */\n      dup3\n        /* \"#utility.yul\":6117:6127   */\n      gt\n        /* \"#utility.yul\":6114:6150   */\n      iszero\n      tag_193\n      jumpi\n        /* \"#utility.yul\":6130:6148   */\n      tag_194\n      tag_115\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":6114:6150   */\n    tag_193:\n        /* \"#utility.yul\":5966:6157   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6163:6495   */\n    tag_55:\n        /* \"#utility.yul\":6284:6288   */\n      0x00\n        /* \"#utility.yul\":6322:6324   */\n      0x40\n        /* \"#utility.yul\":6311:6320   */\n      dup3\n        /* \"#utility.yul\":6307:6325   */\n      add\n        /* \"#utility.yul\":6299:6325   */\n      swap1\n      pop\n        /* \"#utility.yul\":6335:6406   */\n      tag_196\n        /* \"#utility.yul\":6403:6404   */\n      0x00\n        /* \"#utility.yul\":6392:6401   */\n      dup4\n        /* \"#utility.yul\":6388:6405   */\n      add\n        /* \"#utility.yul\":6379:6385   */\n      dup6\n        /* \"#utility.yul\":6335:6406   */\n      tag_111\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":6416:6488   */\n      tag_197\n        /* \"#utility.yul\":6484:6486   */\n      0x20\n        /* \"#utility.yul\":6473:6482   */\n      dup4\n        /* \"#utility.yul\":6469:6487   */\n      add\n        /* \"#utility.yul\":6460:6466   */\n      dup5\n        /* \"#utility.yul\":6416:6488   */\n      tag_100\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":6163:6495   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6501:6591   */\n    tag_116:\n        /* \"#utility.yul\":6535:6542   */\n      0x00\n        /* \"#utility.yul\":6578:6583   */\n      dup2\n        /* \"#utility.yul\":6571:6584   */\n      iszero\n        /* \"#utility.yul\":6564:6585   */\n      iszero\n        /* \"#utility.yul\":6553:6585   */\n      swap1\n      pop\n        /* \"#utility.yul\":6501:6591   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6597:6713   */\n    tag_117:\n        /* \"#utility.yul\":6667:6688   */\n      tag_200\n        /* \"#utility.yul\":6682:6687   */\n      dup2\n        /* \"#utility.yul\":6667:6688   */\n      tag_116\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":6660:6665   */\n      dup2\n        /* \"#utility.yul\":6657:6689   */\n      eq\n        /* \"#utility.yul\":6647:6707   */\n      tag_201\n      jumpi\n        /* \"#utility.yul\":6703:6704   */\n      0x00\n        /* \"#utility.yul\":6700:6701   */\n      dup1\n        /* \"#utility.yul\":6693:6705   */\n      revert\n        /* \"#utility.yul\":6647:6707   */\n    tag_201:\n        /* \"#utility.yul\":6597:6713   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6719:6856   */\n    tag_118:\n        /* \"#utility.yul\":6773:6778   */\n      0x00\n        /* \"#utility.yul\":6804:6810   */\n      dup2\n        /* \"#utility.yul\":6798:6811   */\n      mload\n        /* \"#utility.yul\":6789:6811   */\n      swap1\n      pop\n        /* \"#utility.yul\":6820:6850   */\n      tag_203\n        /* \"#utility.yul\":6844:6849   */\n      dup2\n        /* \"#utility.yul\":6820:6850   */\n      tag_117\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":6719:6856   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6862:7207   */\n    tag_67:\n        /* \"#utility.yul\":6929:6935   */\n      0x00\n        /* \"#utility.yul\":6978:6980   */\n      0x20\n        /* \"#utility.yul\":6966:6975   */\n      dup3\n        /* \"#utility.yul\":6957:6964   */\n      dup5\n        /* \"#utility.yul\":6953:6976   */\n      sub\n        /* \"#utility.yul\":6949:6981   */\n      slt\n        /* \"#utility.yul\":6946:7065   */\n      iszero\n      tag_205\n      jumpi\n        /* \"#utility.yul\":6984:7063   */\n      tag_206\n      tag_102\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":6946:7065   */\n    tag_205:\n        /* \"#utility.yul\":7104:7105   */\n      0x00\n        /* \"#utility.yul\":7129:7190   */\n      tag_207\n        /* \"#utility.yul\":7182:7189   */\n      dup5\n        /* \"#utility.yul\":7173:7179   */\n      dup3\n        /* \"#utility.yul\":7162:7171   */\n      dup6\n        /* \"#utility.yul\":7158:7180   */\n      add\n        /* \"#utility.yul\":7129:7190   */\n      tag_118\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":7119:7190   */\n      swap2\n      pop\n        /* \"#utility.yul\":7075:7200   */\n      pop\n        /* \"#utility.yul\":6862:7207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7213:7442   */\n    tag_119:\n        /* \"#utility.yul\":7353:7387   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":7349:7350   */\n      0x00\n        /* \"#utility.yul\":7341:7347   */\n      dup3\n        /* \"#utility.yul\":7337:7351   */\n      add\n        /* \"#utility.yul\":7330:7388   */\n      mstore\n        /* \"#utility.yul\":7422:7434   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7417:7419   */\n      0x20\n        /* \"#utility.yul\":7409:7415   */\n      dup3\n        /* \"#utility.yul\":7405:7420   */\n      add\n        /* \"#utility.yul\":7398:7435   */\n      mstore\n        /* \"#utility.yul\":7213:7442   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7448:7814   */\n    tag_120:\n        /* \"#utility.yul\":7590:7593   */\n      0x00\n        /* \"#utility.yul\":7611:7678   */\n      tag_210\n        /* \"#utility.yul\":7675:7677   */\n      0x2a\n        /* \"#utility.yul\":7670:7673   */\n      dup4\n        /* \"#utility.yul\":7611:7678   */\n      tag_106\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":7604:7678   */\n      swap2\n      pop\n        /* \"#utility.yul\":7687:7780   */\n      tag_211\n        /* \"#utility.yul\":7776:7779   */\n      dup3\n        /* \"#utility.yul\":7687:7780   */\n      tag_119\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":7805:7807   */\n      0x40\n        /* \"#utility.yul\":7800:7803   */\n      dup3\n        /* \"#utility.yul\":7796:7808   */\n      add\n        /* \"#utility.yul\":7789:7808   */\n      swap1\n      pop\n        /* \"#utility.yul\":7448:7814   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7820:8239   */\n    tag_70:\n        /* \"#utility.yul\":7986:7990   */\n      0x00\n        /* \"#utility.yul\":8024:8026   */\n      0x20\n        /* \"#utility.yul\":8013:8022   */\n      dup3\n        /* \"#utility.yul\":8009:8027   */\n      add\n        /* \"#utility.yul\":8001:8027   */\n      swap1\n      pop\n        /* \"#utility.yul\":8073:8082   */\n      dup2\n        /* \"#utility.yul\":8067:8071   */\n      dup2\n        /* \"#utility.yul\":8063:8083   */\n      sub\n        /* \"#utility.yul\":8059:8060   */\n      0x00\n        /* \"#utility.yul\":8048:8057   */\n      dup4\n        /* \"#utility.yul\":8044:8061   */\n      add\n        /* \"#utility.yul\":8037:8084   */\n      mstore\n        /* \"#utility.yul\":8101:8232   */\n      tag_213\n        /* \"#utility.yul\":8227:8231   */\n      dup2\n        /* \"#utility.yul\":8101:8232   */\n      tag_120\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":8093:8232   */\n      swap1\n      pop\n        /* \"#utility.yul\":7820:8239   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8245:8470   */\n    tag_121:\n        /* \"#utility.yul\":8385:8419   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":8381:8382   */\n      0x00\n        /* \"#utility.yul\":8373:8379   */\n      dup3\n        /* \"#utility.yul\":8369:8383   */\n      add\n        /* \"#utility.yul\":8362:8420   */\n      mstore\n        /* \"#utility.yul\":8454:8462   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8449:8451   */\n      0x20\n        /* \"#utility.yul\":8441:8447   */\n      dup3\n        /* \"#utility.yul\":8437:8452   */\n      add\n        /* \"#utility.yul\":8430:8463   */\n      mstore\n        /* \"#utility.yul\":8245:8470   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8476:8842   */\n    tag_122:\n        /* \"#utility.yul\":8618:8621   */\n      0x00\n        /* \"#utility.yul\":8639:8706   */\n      tag_216\n        /* \"#utility.yul\":8703:8705   */\n      0x26\n        /* \"#utility.yul\":8698:8701   */\n      dup4\n        /* \"#utility.yul\":8639:8706   */\n      tag_106\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":8632:8706   */\n      swap2\n      pop\n        /* \"#utility.yul\":8715:8808   */\n      tag_217\n        /* \"#utility.yul\":8804:8807   */\n      dup3\n        /* \"#utility.yul\":8715:8808   */\n      tag_121\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":8833:8835   */\n      0x40\n        /* \"#utility.yul\":8828:8831   */\n      dup3\n        /* \"#utility.yul\":8824:8836   */\n      add\n        /* \"#utility.yul\":8817:8836   */\n      swap1\n      pop\n        /* \"#utility.yul\":8476:8842   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8848:9267   */\n    tag_74:\n        /* \"#utility.yul\":9014:9018   */\n      0x00\n        /* \"#utility.yul\":9052:9054   */\n      0x20\n        /* \"#utility.yul\":9041:9050   */\n      dup3\n        /* \"#utility.yul\":9037:9055   */\n      add\n        /* \"#utility.yul\":9029:9055   */\n      swap1\n      pop\n        /* \"#utility.yul\":9101:9110   */\n      dup2\n        /* \"#utility.yul\":9095:9099   */\n      dup2\n        /* \"#utility.yul\":9091:9111   */\n      sub\n        /* \"#utility.yul\":9087:9088   */\n      0x00\n        /* \"#utility.yul\":9076:9085   */\n      dup4\n        /* \"#utility.yul\":9072:9089   */\n      add\n        /* \"#utility.yul\":9065:9112   */\n      mstore\n        /* \"#utility.yul\":9129:9260   */\n      tag_219\n        /* \"#utility.yul\":9255:9259   */\n      dup2\n        /* \"#utility.yul\":9129:9260   */\n      tag_122\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":9121:9260   */\n      swap1\n      pop\n        /* \"#utility.yul\":8848:9267   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9273:9371   */\n    tag_123:\n        /* \"#utility.yul\":9324:9330   */\n      0x00\n        /* \"#utility.yul\":9358:9363   */\n      dup2\n        /* \"#utility.yul\":9352:9364   */\n      mload\n        /* \"#utility.yul\":9342:9364   */\n      swap1\n      pop\n        /* \"#utility.yul\":9273:9371   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9377:9524   */\n    tag_124:\n        /* \"#utility.yul\":9478:9489   */\n      0x00\n        /* \"#utility.yul\":9515:9518   */\n      dup2\n        /* \"#utility.yul\":9500:9518   */\n      swap1\n      pop\n        /* \"#utility.yul\":9377:9524   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9530:9776   */\n    tag_125:\n        /* \"#utility.yul\":9611:9612   */\n      0x00\n        /* \"#utility.yul\":9621:9734   */\n    tag_223:\n        /* \"#utility.yul\":9635:9641   */\n      dup4\n        /* \"#utility.yul\":9632:9633   */\n      dup2\n        /* \"#utility.yul\":9629:9642   */\n      lt\n        /* \"#utility.yul\":9621:9734   */\n      iszero\n      tag_225\n      jumpi\n        /* \"#utility.yul\":9720:9721   */\n      dup1\n        /* \"#utility.yul\":9715:9718   */\n      dup3\n        /* \"#utility.yul\":9711:9722   */\n      add\n        /* \"#utility.yul\":9705:9723   */\n      mload\n        /* \"#utility.yul\":9701:9702   */\n      dup2\n        /* \"#utility.yul\":9696:9699   */\n      dup5\n        /* \"#utility.yul\":9692:9703   */\n      add\n        /* \"#utility.yul\":9685:9724   */\n      mstore\n        /* \"#utility.yul\":9657:9659   */\n      0x20\n        /* \"#utility.yul\":9654:9655   */\n      dup2\n        /* \"#utility.yul\":9650:9660   */\n      add\n        /* \"#utility.yul\":9645:9660   */\n      swap1\n      pop\n        /* \"#utility.yul\":9621:9734   */\n      jump(tag_223)\n    tag_225:\n        /* \"#utility.yul\":9768:9769   */\n      0x00\n        /* \"#utility.yul\":9759:9765   */\n      dup5\n        /* \"#utility.yul\":9754:9757   */\n      dup5\n        /* \"#utility.yul\":9750:9766   */\n      add\n        /* \"#utility.yul\":9743:9770   */\n      mstore\n        /* \"#utility.yul\":9592:9776   */\n      pop\n        /* \"#utility.yul\":9530:9776   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9782:10168   */\n    tag_126:\n        /* \"#utility.yul\":9886:9889   */\n      0x00\n        /* \"#utility.yul\":9914:9952   */\n      tag_227\n        /* \"#utility.yul\":9946:9951   */\n      dup3\n        /* \"#utility.yul\":9914:9952   */\n      tag_123\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":9968:10056   */\n      tag_228\n        /* \"#utility.yul\":10049:10055   */\n      dup2\n        /* \"#utility.yul\":10044:10047   */\n      dup6\n        /* \"#utility.yul\":9968:10056   */\n      tag_124\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":9961:10056   */\n      swap4\n      pop\n        /* \"#utility.yul\":10065:10130   */\n      tag_229\n        /* \"#utility.yul\":10123:10129   */\n      dup2\n        /* \"#utility.yul\":10118:10121   */\n      dup6\n        /* \"#utility.yul\":10111:10115   */\n      0x20\n        /* \"#utility.yul\":10104:10109   */\n      dup7\n        /* \"#utility.yul\":10100:10116   */\n      add\n        /* \"#utility.yul\":10065:10130   */\n      tag_125\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":10155:10161   */\n      dup1\n        /* \"#utility.yul\":10150:10153   */\n      dup5\n        /* \"#utility.yul\":10146:10162   */\n      add\n        /* \"#utility.yul\":10139:10162   */\n      swap2\n      pop\n        /* \"#utility.yul\":9890:10168   */\n      pop\n        /* \"#utility.yul\":9782:10168   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10174:10445   */\n    tag_76:\n        /* \"#utility.yul\":10304:10307   */\n      0x00\n        /* \"#utility.yul\":10326:10419   */\n      tag_231\n        /* \"#utility.yul\":10415:10418   */\n      dup3\n        /* \"#utility.yul\":10406:10412   */\n      dup5\n        /* \"#utility.yul\":10326:10419   */\n      tag_126\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":10319:10419   */\n      swap2\n      pop\n        /* \"#utility.yul\":10436:10439   */\n      dup2\n        /* \"#utility.yul\":10429:10439   */\n      swap1\n      pop\n        /* \"#utility.yul\":10174:10445   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10451:10630   */\n    tag_127:\n        /* \"#utility.yul\":10591:10622   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":10587:10588   */\n      0x00\n        /* \"#utility.yul\":10579:10585   */\n      dup3\n        /* \"#utility.yul\":10575:10589   */\n      add\n        /* \"#utility.yul\":10568:10623   */\n      mstore\n        /* \"#utility.yul\":10451:10630   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10636:11002   */\n    tag_128:\n        /* \"#utility.yul\":10778:10781   */\n      0x00\n        /* \"#utility.yul\":10799:10866   */\n      tag_234\n        /* \"#utility.yul\":10863:10865   */\n      0x1d\n        /* \"#utility.yul\":10858:10861   */\n      dup4\n        /* \"#utility.yul\":10799:10866   */\n      tag_106\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":10792:10866   */\n      swap2\n      pop\n        /* \"#utility.yul\":10875:10968   */\n      tag_235\n        /* \"#utility.yul\":10964:10967   */\n      dup3\n        /* \"#utility.yul\":10875:10968   */\n      tag_127\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":10993:10995   */\n      0x20\n        /* \"#utility.yul\":10988:10991   */\n      dup3\n        /* \"#utility.yul\":10984:10996   */\n      add\n        /* \"#utility.yul\":10977:10996   */\n      swap1\n      pop\n        /* \"#utility.yul\":10636:11002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11008:11427   */\n    tag_89:\n        /* \"#utility.yul\":11174:11178   */\n      0x00\n        /* \"#utility.yul\":11212:11214   */\n      0x20\n        /* \"#utility.yul\":11201:11210   */\n      dup3\n        /* \"#utility.yul\":11197:11215   */\n      add\n        /* \"#utility.yul\":11189:11215   */\n      swap1\n      pop\n        /* \"#utility.yul\":11261:11270   */\n      dup2\n        /* \"#utility.yul\":11255:11259   */\n      dup2\n        /* \"#utility.yul\":11251:11271   */\n      sub\n        /* \"#utility.yul\":11247:11248   */\n      0x00\n        /* \"#utility.yul\":11236:11245   */\n      dup4\n        /* \"#utility.yul\":11232:11249   */\n      add\n        /* \"#utility.yul\":11225:11272   */\n      mstore\n        /* \"#utility.yul\":11289:11420   */\n      tag_237\n        /* \"#utility.yul\":11415:11419   */\n      dup2\n        /* \"#utility.yul\":11289:11420   */\n      tag_128\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":11281:11420   */\n      swap1\n      pop\n        /* \"#utility.yul\":11008:11427   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11433:11532   */\n    tag_129:\n        /* \"#utility.yul\":11485:11491   */\n      0x00\n        /* \"#utility.yul\":11519:11524   */\n      dup2\n        /* \"#utility.yul\":11513:11525   */\n      mload\n        /* \"#utility.yul\":11503:11525   */\n      swap1\n      pop\n        /* \"#utility.yul\":11433:11532   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11538:11640   */\n    tag_130:\n        /* \"#utility.yul\":11579:11585   */\n      0x00\n        /* \"#utility.yul\":11630:11632   */\n      0x1f\n        /* \"#utility.yul\":11626:11633   */\n      not\n        /* \"#utility.yul\":11621:11623   */\n      0x1f\n        /* \"#utility.yul\":11614:11619   */\n      dup4\n        /* \"#utility.yul\":11610:11624   */\n      add\n        /* \"#utility.yul\":11606:11634   */\n      and\n        /* \"#utility.yul\":11596:11634   */\n      swap1\n      pop\n        /* \"#utility.yul\":11538:11640   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11646:12023   */\n    tag_131:\n        /* \"#utility.yul\":11734:11737   */\n      0x00\n        /* \"#utility.yul\":11762:11801   */\n      tag_241\n        /* \"#utility.yul\":11795:11800   */\n      dup3\n        /* \"#utility.yul\":11762:11801   */\n      tag_129\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":11817:11888   */\n      tag_242\n        /* \"#utility.yul\":11881:11887   */\n      dup2\n        /* \"#utility.yul\":11876:11879   */\n      dup6\n        /* \"#utility.yul\":11817:11888   */\n      tag_106\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":11810:11888   */\n      swap4\n      pop\n        /* \"#utility.yul\":11897:11962   */\n      tag_243\n        /* \"#utility.yul\":11955:11961   */\n      dup2\n        /* \"#utility.yul\":11950:11953   */\n      dup6\n        /* \"#utility.yul\":11943:11947   */\n      0x20\n        /* \"#utility.yul\":11936:11941   */\n      dup7\n        /* \"#utility.yul\":11932:11948   */\n      add\n        /* \"#utility.yul\":11897:11962   */\n      tag_125\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":11987:12016   */\n      tag_244\n        /* \"#utility.yul\":12009:12015   */\n      dup2\n        /* \"#utility.yul\":11987:12016   */\n      tag_130\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":11982:11985   */\n      dup5\n        /* \"#utility.yul\":11978:12017   */\n      add\n        /* \"#utility.yul\":11971:12017   */\n      swap2\n      pop\n        /* \"#utility.yul\":11738:12023   */\n      pop\n        /* \"#utility.yul\":11646:12023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12029:12342   */\n    tag_98:\n        /* \"#utility.yul\":12142:12146   */\n      0x00\n        /* \"#utility.yul\":12180:12182   */\n      0x20\n        /* \"#utility.yul\":12169:12178   */\n      dup3\n        /* \"#utility.yul\":12165:12183   */\n      add\n        /* \"#utility.yul\":12157:12183   */\n      swap1\n      pop\n        /* \"#utility.yul\":12229:12238   */\n      dup2\n        /* \"#utility.yul\":12223:12227   */\n      dup2\n        /* \"#utility.yul\":12219:12239   */\n      sub\n        /* \"#utility.yul\":12215:12216   */\n      0x00\n        /* \"#utility.yul\":12204:12213   */\n      dup4\n        /* \"#utility.yul\":12200:12217   */\n      add\n        /* \"#utility.yul\":12193:12240   */\n      mstore\n        /* \"#utility.yul\":12257:12335   */\n      tag_246\n        /* \"#utility.yul\":12330:12334   */\n      dup2\n        /* \"#utility.yul\":12321:12327   */\n      dup5\n        /* \"#utility.yul\":12257:12335   */\n      tag_131\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":12249:12335   */\n      swap1\n      pop\n        /* \"#utility.yul\":12029:12342   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205fd517c49d24b49052fc6549d8ff041ff3f0314dab2a43dbf7e334a11add3efc64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_787": {
									"entryPoint": null,
									"id": 787,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_callOptionalReturn_393": {
									"entryPoint": 541,
									"id": 393,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revert_723": {
									"entryPoint": 1179,
									"id": 723,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@functionCallWithValue_548": {
									"entryPoint": 785,
									"id": 548,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_484": {
									"entryPoint": 753,
									"id": 484,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@isContract_412": {
									"entryPoint": 1144,
									"id": 412,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeIncreaseAllowance_251": {
									"entryPoint": 250,
									"id": 251,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_679": {
									"entryPoint": 1005,
									"id": 679,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1345,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256_fromMemory": {
									"entryPoint": 1427,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2351,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1791,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 1637,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1808,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 2285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1853,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2307,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 1498,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1262,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 2133,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 2431,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 1981,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1319,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9817:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:5",
														"type": ""
													}
												],
												"src": "696:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "890:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "900:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "911:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "872:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "882:7:5",
														"type": ""
													}
												],
												"src": "845:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "971:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1028:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "984:43:5"
															},
															"nodeType": "YulIf",
															"src": "981:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "964:5:5",
														"type": ""
													}
												],
												"src": "928:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1119:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1129:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1138:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1160:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1097:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1105:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1113:5:5",
														"type": ""
													}
												],
												"src": "1056:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1299:413:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1345:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1347:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1347:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1347:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1320:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1329:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1316:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1316:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1312:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1312:32:5"
															},
															"nodeType": "YulIf",
															"src": "1309:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1438:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1453:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1467:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1457:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1482:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1528:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1539:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1524:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1524:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1548:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1492:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1492:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1482:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1576:129:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1591:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1605:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1595:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1621:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1667:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1678:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1663:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1663:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1687:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1631:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1631:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1621:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1261:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1272:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1284:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1292:6:5",
														"type": ""
													}
												],
												"src": "1205:507:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1746:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1763:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1766:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1756:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1756:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1756:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1860:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1863:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1853:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1884:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1887:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1877:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1877:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1877:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1718:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1952:362:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1962:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1985:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1967:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1967:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1962:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1996:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2019:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2001:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2001:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1996:1:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2030:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2053:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2056:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2049:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2049:9:5"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "2034:11:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2067:41:5",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "2096:11:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2078:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2078:30:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2067:7:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2285:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2287:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2287:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2287:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2218:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2211:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2211:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "2241:1:5"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "2248:7:5"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "2257:1:5"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "2244:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2244:15:5"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "2238:2:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2238:22:5"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "2191:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2191:83:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2171:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2171:113:5"
															},
															"nodeType": "YulIf",
															"src": "2168:139:5"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1935:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1938:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "1944:7:5",
														"type": ""
													}
												],
												"src": "1904:410:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2385:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2402:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2425:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2407:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2407:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2395:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2395:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2395:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2373:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2380:3:5",
														"type": ""
													}
												],
												"src": "2320:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2570:206:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2580:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2592:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2603:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2588:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2588:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2580:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2660:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2673:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2684:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2669:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2669:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2616:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2616:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2616:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2741:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2754:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2765:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2750:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2750:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2697:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2697:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2697:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2534:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2546:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2554:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2565:4:5",
														"type": ""
													}
												],
												"src": "2444:332:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2859:274:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2905:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2907:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2907:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2907:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2880:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2889:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2876:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2876:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2901:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2872:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2872:32:5"
															},
															"nodeType": "YulIf",
															"src": "2869:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "2998:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3013:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3027:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3017:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3042:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3088:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3099:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3084:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3084:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3108:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3052:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3052:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3042:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2829:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2840:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2852:6:5",
														"type": ""
													}
												],
												"src": "2782:351:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3183:147:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3193:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3216:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3198:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3198:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3193:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3227:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3250:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3232:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3232:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3227:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3261:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3272:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3275:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3268:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3268:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3261:3:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3301:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3303:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3303:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3303:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3293:1:5"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "3296:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3290:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3290:10:5"
															},
															"nodeType": "YulIf",
															"src": "3287:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3170:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3173:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3179:3:5",
														"type": ""
													}
												],
												"src": "3139:191:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3401:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3418:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3441:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3423:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3423:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3411:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3411:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3411:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3389:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3396:3:5",
														"type": ""
													}
												],
												"src": "3336:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3586:206:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3596:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3608:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3619:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3604:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3604:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3596:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3676:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3689:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3700:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3685:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3685:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3632:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3632:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3632:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3757:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3770:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3781:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3766:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3766:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3713:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3713:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3713:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3550:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3562:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3570:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3581:4:5",
														"type": ""
													}
												],
												"src": "3460:332:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3840:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3850:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3875:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3868:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3868:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3861:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3861:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3850:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3822:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3832:7:5",
														"type": ""
													}
												],
												"src": "3798:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3934:76:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3988:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3997:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4000:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3990:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3990:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3990:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3957:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3979:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "3964:14:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3964:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3954:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3954:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3947:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3947:40:5"
															},
															"nodeType": "YulIf",
															"src": "3944:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3927:5:5",
														"type": ""
													}
												],
												"src": "3894:116:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4076:77:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4086:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4101:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4095:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4095:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4086:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4141:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "4117:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4117:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4117:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4054:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4062:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4070:5:5",
														"type": ""
													}
												],
												"src": "4016:137:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4233:271:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4279:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4281:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4281:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4281:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4254:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4263:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4250:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4250:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4275:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4246:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4246:32:5"
															},
															"nodeType": "YulIf",
															"src": "4243:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "4372:125:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4387:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4401:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4391:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4416:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4459:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4470:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4455:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4455:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4479:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4426:28:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4426:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4416:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4203:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4214:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4226:6:5",
														"type": ""
													}
												],
												"src": "4159:345:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4606:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4623:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4628:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4616:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4616:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4616:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4644:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4663:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4668:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4659:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4659:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4644:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4578:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4583:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4594:11:5",
														"type": ""
													}
												],
												"src": "4510:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4791:123:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4813:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4821:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4809:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4809:14:5"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4825:34:5",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4802:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4802:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4802:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4881:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4889:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4877:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4877:15:5"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4894:12:5",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4870:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4870:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4870:37:5"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4783:6:5",
														"type": ""
													}
												],
												"src": "4685:229:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5066:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5076:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5142:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5147:2:5",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5083:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5083:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5076:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5248:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "5159:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5159:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5159:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5261:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5272:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5277:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5268:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5268:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5261:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5054:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5062:3:5",
														"type": ""
													}
												],
												"src": "4920:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5463:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5473:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5485:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5496:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5481:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5481:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5473:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5520:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5531:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5516:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5516:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5539:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5545:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5535:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5535:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5509:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5509:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5509:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5565:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5699:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5573:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5573:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5565:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5443:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5458:4:5",
														"type": ""
													}
												],
												"src": "5292:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5823:119:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5845:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5853:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5841:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5841:14:5"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5857:34:5",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5834:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5834:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5834:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5913:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5921:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5909:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5909:15:5"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5926:8:5",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5902:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5902:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5902:33:5"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5815:6:5",
														"type": ""
													}
												],
												"src": "5717:225:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6094:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6104:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6170:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6175:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6111:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6111:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6104:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6276:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "6187:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6187:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6187:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6289:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6300:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6305:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6296:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6296:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6289:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6082:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6090:3:5",
														"type": ""
													}
												],
												"src": "5948:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6491:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6501:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6513:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6524:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6509:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6509:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6501:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6548:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6559:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6544:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6544:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6567:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6573:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6563:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6563:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6537:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6537:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6537:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6593:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6727:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6601:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6601:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6593:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6471:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6486:4:5",
														"type": ""
													}
												],
												"src": "6320:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6803:40:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6814:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6830:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6824:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6824:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6814:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6786:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6796:6:5",
														"type": ""
													}
												],
												"src": "6745:98:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6962:34:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6972:18:5",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6987:3:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6972:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6934:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6939:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6950:11:5",
														"type": ""
													}
												],
												"src": "6849:147:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7064:184:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7074:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7083:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "7078:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7143:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "7168:3:5"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7173:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7164:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7164:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "7187:3:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7192:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7183:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7183:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7177:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7177:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7157:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7157:39:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7157:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7104:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7107:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7101:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7101:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7115:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7117:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "7126:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7129:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7122:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7122:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "7117:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7097:3:5",
																"statements": []
															},
															"src": "7093:113:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7226:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7231:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7222:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7222:16:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7240:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7215:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7215:27:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7215:27:5"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7046:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "7051:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7056:6:5",
														"type": ""
													}
												],
												"src": "7002:246:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7362:278:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7372:52:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7418:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7386:31:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7386:38:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7376:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7433:95:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7516:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7521:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7440:75:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7440:88:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7433:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7576:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7583:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7572:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7572:16:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7590:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7595:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "7537:34:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7537:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7537:65:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7611:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7622:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7627:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7618:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7618:16:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7611:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7343:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7350:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7358:3:5",
														"type": ""
													}
												],
												"src": "7254:386:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7780:137:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7791:100:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7878:6:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7887:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7798:79:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7798:93:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7791:3:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7901:10:5",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7908:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7901:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7759:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7765:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7776:3:5",
														"type": ""
													}
												],
												"src": "7646:271:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8029:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8051:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8059:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8047:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8047:14:5"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8063:31:5",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8040:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8040:55:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8040:55:5"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8021:6:5",
														"type": ""
													}
												],
												"src": "7923:179:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8254:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8264:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8330:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8335:2:5",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8271:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8271:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8264:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8436:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "8347:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8347:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8347:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8449:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8460:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8465:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8456:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8456:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8449:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8242:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8250:3:5",
														"type": ""
													}
												],
												"src": "8108:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8651:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8661:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8673:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8684:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8669:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8669:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8661:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8708:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8719:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8704:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8704:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8727:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8733:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8723:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8723:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8697:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8697:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8697:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8753:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8887:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8761:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8761:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8753:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8631:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8646:4:5",
														"type": ""
													}
												],
												"src": "8480:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8964:40:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8975:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8991:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8985:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8985:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8975:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8947:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8957:6:5",
														"type": ""
													}
												],
												"src": "8905:99:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9058:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9068:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9086:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9093:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9082:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9082:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9102:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9098:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9098:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9078:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9078:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "9068:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9041:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "9051:6:5",
														"type": ""
													}
												],
												"src": "9010:102:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9210:285:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9220:53:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9267:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "9234:32:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9234:39:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "9224:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9282:78:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9348:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9353:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9289:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9289:71:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9282:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9408:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9415:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9404:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9404:16:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9422:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9427:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "9369:34:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9369:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9369:65:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9443:46:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9454:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9481:6:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "9459:21:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9459:29:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9450:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9450:39:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9443:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9191:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9198:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9206:3:5",
														"type": ""
													}
												],
												"src": "9118:377:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9619:195:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9629:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9641:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9652:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9637:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9637:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9629:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9676:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9687:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9672:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9672:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9695:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9701:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9691:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9691:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9665:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9665:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9665:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9721:86:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9793:6:5"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9802:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9729:63:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9729:78:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9721:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9591:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9603:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9614:4:5",
														"type": ""
													}
												],
												"src": "9501:313:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620017f8380380620017f8833981810160405281019062000037919062000593565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a7640000816200008d919062000609565b600181905550620000f2306c01431e0fae6d7217caa000000060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16620000fa60201b620002d6179092919060201c565b505062000a72565b6000818473ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30866040518363ffffffff1660e01b81526004016200013a92919062000665565b602060405180830381865afa15801562000158573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200017e919062000692565b6200018a9190620006c4565b9050620002178463095ea7b360e01b8584604051602401620001ae92919062000710565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200021d60201b60201c565b50505050565b600062000286826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16620002f160201b620003e8179092919060201c565b9050600081511115620002ec5780806020019051810190620002a991906200077a565b620002eb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002e29062000833565b60405180910390fd5b5b505050565b60606200030884846000856200031160201b60201c565b90509392505050565b60608247101562000359576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200035090620008cb565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405162000384919062000966565b60006040518083038185875af1925050503d8060008114620003c3576040519150601f19603f3d011682016040523d82523d6000602084013e620003c8565b606091505b5091509150620003e187838387620003ed60201b60201c565b92505050949350505050565b606083156200045d576000835103620004545762000411856200047860201b60201c565b62000453576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200044a90620009cf565b60405180910390fd5b5b82905062000470565b6200046f83836200049b60201b60201c565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600082511115620004af5781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004e5919062000a4e565b60405180910390fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200052082620004f3565b9050919050565b620005328162000513565b81146200053e57600080fd5b50565b600081519050620005528162000527565b92915050565b6000819050919050565b6200056d8162000558565b81146200057957600080fd5b50565b6000815190506200058d8162000562565b92915050565b60008060408385031215620005ad57620005ac620004ee565b5b6000620005bd8582860162000541565b9250506020620005d0858286016200057c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620006168262000558565b9150620006238362000558565b9250828202620006338162000558565b915082820484148315176200064d576200064c620005da565b5b5092915050565b6200065f8162000513565b82525050565b60006040820190506200067c600083018562000654565b6200068b602083018462000654565b9392505050565b600060208284031215620006ab57620006aa620004ee565b5b6000620006bb848285016200057c565b91505092915050565b6000620006d18262000558565b9150620006de8362000558565b9250828201905080821115620006f957620006f8620005da565b5b92915050565b6200070a8162000558565b82525050565b600060408201905062000727600083018562000654565b620007366020830184620006ff565b9392505050565b60008115159050919050565b62000754816200073d565b81146200076057600080fd5b50565b600081519050620007748162000749565b92915050565b600060208284031215620007935762000792620004ee565b5b6000620007a38482850162000763565b91505092915050565b600082825260208201905092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006200081b602a83620007ac565b91506200082882620007bd565b604082019050919050565b600060208201905081810360008301526200084e816200080c565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000620008b3602683620007ac565b9150620008c08262000855565b604082019050919050565b60006020820190508181036000830152620008e681620008a4565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156200092357808201518184015260208101905062000906565b60008484015250505050565b60006200093c82620008ed565b620009488185620008f8565b93506200095a81856020860162000903565b80840191505092915050565b60006200097482846200092f565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000620009b7601d83620007ac565b9150620009c4826200097f565b602082019050919050565b60006020820190508181036000830152620009ea81620009a8565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b600062000a1a82620009f1565b62000a268185620007ac565b935062000a3881856020860162000903565b62000a4381620009fc565b840191505092915050565b6000602082019050818103600083015262000a6a818462000a0d565b905092915050565b610d768062000a826000396000f3fe6080604052600436106100385760003560e01c806360c7dc471461004457806373cf575a1461006f578063a694fc3a146100865761003f565b3661003f57005b600080fd5b34801561005057600080fd5b506100596100af565b604051610066919061071e565b60405180910390f35b34801561007b57600080fd5b506100846100b5565b005b34801561009257600080fd5b506100ad60048036038101906100a8919061076a565b610106565b005b60015481565b610104303360015460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610400909392919063ffffffff16565b565b60008111610149576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610140906107f4565b60405180910390fd5b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016101a39190610855565b602060405180830381865afa1580156101c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e49190610885565b1015610225576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021c906108fe565b60405180910390fd5b7f160ffcaa807f78c8b4983836e2396338d073e75695ac448aa0b5e4a75b210b1d3330670de0b6b3a76400008461025c919061094d565b60405161026b9392919061098f565b60405180910390a16102d33330670de0b6b3a76400008461028c919061094d565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610400909392919063ffffffff16565b50565b6000818473ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30866040518363ffffffff1660e01b81526004016103149291906109c6565b602060405180830381865afa158015610331573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103559190610885565b61035f91906109ef565b90506103e28463095ea7b360e01b8584604051602401610380929190610a23565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610489565b50505050565b60606103f78484600085610550565b90509392505050565b610483846323b872dd60e01b8585856040516024016104219392919061098f565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610489565b50505050565b60006104eb826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166103e89092919063ffffffff16565b905060008151111561054b578080602001905181019061050b9190610a84565b61054a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054190610b23565b60405180910390fd5b5b505050565b606082471015610595576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058c90610bb5565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516105be9190610c46565b60006040518083038185875af1925050503d80600081146105fb576040519150601f19603f3d011682016040523d82523d6000602084013e610600565b606091505b50915091506106118783838761061d565b92505050949350505050565b6060831561067f5760008351036106775761063785610692565b610676576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066d90610ca9565b60405180910390fd5b5b82905061068a565b61068983836106b5565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156106c85781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fc9190610d1e565b60405180910390fd5b6000819050919050565b61071881610705565b82525050565b6000602082019050610733600083018461070f565b92915050565b600080fd5b61074781610705565b811461075257600080fd5b50565b6000813590506107648161073e565b92915050565b6000602082840312156107805761077f610739565b5b600061078e84828501610755565b91505092915050565b600082825260208201905092915050565b7f616d6f756e74206e6f74207a65726f0000000000000000000000000000000000600082015250565b60006107de600f83610797565b91506107e9826107a8565b602082019050919050565b6000602082019050818103600083015261080d816107d1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061083f82610814565b9050919050565b61084f81610834565b82525050565b600060208201905061086a6000830184610846565b92915050565b60008151905061087f8161073e565b92915050565b60006020828403121561089b5761089a610739565b5b60006108a984828501610870565b91505092915050565b7f7374616b696e67206661696c6400000000000000000000000000000000000000600082015250565b60006108e8600d83610797565b91506108f3826108b2565b602082019050919050565b60006020820190508181036000830152610917816108db565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061095882610705565b915061096383610705565b925082820261097181610705565b915082820484148315176109885761098761091e565b5b5092915050565b60006060820190506109a46000830186610846565b6109b16020830185610846565b6109be604083018461070f565b949350505050565b60006040820190506109db6000830185610846565b6109e86020830184610846565b9392505050565b60006109fa82610705565b9150610a0583610705565b9250828201905080821115610a1d57610a1c61091e565b5b92915050565b6000604082019050610a386000830185610846565b610a45602083018461070f565b9392505050565b60008115159050919050565b610a6181610a4c565b8114610a6c57600080fd5b50565b600081519050610a7e81610a58565b92915050565b600060208284031215610a9a57610a99610739565b5b6000610aa884828501610a6f565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000610b0d602a83610797565b9150610b1882610ab1565b604082019050919050565b60006020820190508181036000830152610b3c81610b00565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000610b9f602683610797565b9150610baa82610b43565b604082019050919050565b60006020820190508181036000830152610bce81610b92565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015610c09578082015181840152602081019050610bee565b60008484015250505050565b6000610c2082610bd5565b610c2a8185610be0565b9350610c3a818560208601610beb565b80840191505092915050565b6000610c528284610c15565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000610c93601d83610797565b9150610c9e82610c5d565b602082019050919050565b60006020820190508181036000830152610cc281610c86565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b6000610cf082610cc9565b610cfa8185610797565b9350610d0a818560208601610beb565b610d1381610cd4565b840191505092915050565b60006020820190508181036000830152610d388184610ce5565b90509291505056fea26469706673582212205fd517c49d24b49052fc6549d8ff041ff3f0314dab2a43dbf7e334a11add3efc64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x17F8 CODESIZE SUB DUP1 PUSH3 0x17F8 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x593 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH8 0xDE0B6B3A7640000 DUP2 PUSH3 0x8D SWAP2 SWAP1 PUSH3 0x609 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH3 0xF2 ADDRESS PUSH13 0x1431E0FAE6D7217CAA0000000 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0xFA PUSH1 0x20 SHL PUSH3 0x2D6 OR SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x13A SWAP3 SWAP2 SWAP1 PUSH3 0x665 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x158 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x17E SWAP2 SWAP1 PUSH3 0x692 JUMP JUMPDEST PUSH3 0x18A SWAP2 SWAP1 PUSH3 0x6C4 JUMP JUMPDEST SWAP1 POP PUSH3 0x217 DUP5 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH3 0x1AE SWAP3 SWAP2 SWAP1 PUSH3 0x710 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH3 0x21D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x286 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x2F1 PUSH1 0x20 SHL PUSH3 0x3E8 OR SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH3 0x2EC JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH3 0x2A9 SWAP2 SWAP1 PUSH3 0x77A JUMP JUMPDEST PUSH3 0x2EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2E2 SWAP1 PUSH3 0x833 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH3 0x308 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH3 0x311 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH3 0x359 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x350 SWAP1 PUSH3 0x8CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH3 0x384 SWAP2 SWAP1 PUSH3 0x966 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH3 0x3C3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x3C8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH3 0x3E1 DUP8 DUP4 DUP4 DUP8 PUSH3 0x3ED PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH3 0x45D JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH3 0x454 JUMPI PUSH3 0x411 DUP6 PUSH3 0x478 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x453 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x44A SWAP1 PUSH3 0x9CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH3 0x470 JUMP JUMPDEST PUSH3 0x46F DUP4 DUP4 PUSH3 0x49B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH3 0x4AF JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4E5 SWAP2 SWAP1 PUSH3 0xA4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x520 DUP3 PUSH3 0x4F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x532 DUP2 PUSH3 0x513 JUMP JUMPDEST DUP2 EQ PUSH3 0x53E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x552 DUP2 PUSH3 0x527 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x56D DUP2 PUSH3 0x558 JUMP JUMPDEST DUP2 EQ PUSH3 0x579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x58D DUP2 PUSH3 0x562 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x5AD JUMPI PUSH3 0x5AC PUSH3 0x4EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x5BD DUP6 DUP3 DUP7 ADD PUSH3 0x541 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x5D0 DUP6 DUP3 DUP7 ADD PUSH3 0x57C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x616 DUP3 PUSH3 0x558 JUMP JUMPDEST SWAP2 POP PUSH3 0x623 DUP4 PUSH3 0x558 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0x633 DUP2 PUSH3 0x558 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0x64D JUMPI PUSH3 0x64C PUSH3 0x5DA JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x65F DUP2 PUSH3 0x513 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x67C PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x654 JUMP JUMPDEST PUSH3 0x68B PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x654 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x6AB JUMPI PUSH3 0x6AA PUSH3 0x4EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x6BB DUP5 DUP3 DUP6 ADD PUSH3 0x57C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6D1 DUP3 PUSH3 0x558 JUMP JUMPDEST SWAP2 POP PUSH3 0x6DE DUP4 PUSH3 0x558 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x6F9 JUMPI PUSH3 0x6F8 PUSH3 0x5DA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x70A DUP2 PUSH3 0x558 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x727 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x654 JUMP JUMPDEST PUSH3 0x736 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x6FF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x754 DUP2 PUSH3 0x73D JUMP JUMPDEST DUP2 EQ PUSH3 0x760 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x774 DUP2 PUSH3 0x749 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x793 JUMPI PUSH3 0x792 PUSH3 0x4EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x7A3 DUP5 DUP3 DUP6 ADD PUSH3 0x763 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x81B PUSH1 0x2A DUP4 PUSH3 0x7AC JUMP JUMPDEST SWAP2 POP PUSH3 0x828 DUP3 PUSH3 0x7BD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x84E DUP2 PUSH3 0x80C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x8B3 PUSH1 0x26 DUP4 PUSH3 0x7AC JUMP JUMPDEST SWAP2 POP PUSH3 0x8C0 DUP3 PUSH3 0x855 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x8E6 DUP2 PUSH3 0x8A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x923 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x906 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x93C DUP3 PUSH3 0x8ED JUMP JUMPDEST PUSH3 0x948 DUP2 DUP6 PUSH3 0x8F8 JUMP JUMPDEST SWAP4 POP PUSH3 0x95A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x903 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x974 DUP3 DUP5 PUSH3 0x92F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x9B7 PUSH1 0x1D DUP4 PUSH3 0x7AC JUMP JUMPDEST SWAP2 POP PUSH3 0x9C4 DUP3 PUSH3 0x97F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x9EA DUP2 PUSH3 0x9A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA1A DUP3 PUSH3 0x9F1 JUMP JUMPDEST PUSH3 0xA26 DUP2 DUP6 PUSH3 0x7AC JUMP JUMPDEST SWAP4 POP PUSH3 0xA38 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x903 JUMP JUMPDEST PUSH3 0xA43 DUP2 PUSH3 0x9FC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0xA6A DUP2 DUP5 PUSH3 0xA0D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD76 DUP1 PUSH3 0xA82 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x60C7DC47 EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x73CF575A EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x86 JUMPI PUSH2 0x3F JUMP JUMPDEST CALLDATASIZE PUSH2 0x3F JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH2 0xAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x71E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x84 PUSH2 0xB5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA8 SWAP2 SWAP1 PUSH2 0x76A JUMP JUMPDEST PUSH2 0x106 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x104 ADDRESS CALLER PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x400 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x149 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x140 SWAP1 PUSH2 0x7F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x885 JUMP JUMPDEST LT ISZERO PUSH2 0x225 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21C SWAP1 PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x160FFCAA807F78C8B4983836E2396338D073E75695AC448AA0B5E4A75B210B1D CALLER ADDRESS PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x94D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x98F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x2D3 CALLER ADDRESS PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x94D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x400 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x314 SWAP3 SWAP2 SWAP1 PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x331 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x355 SWAP2 SWAP1 PUSH2 0x885 JUMP JUMPDEST PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x9EF JUMP JUMPDEST SWAP1 POP PUSH2 0x3E2 DUP5 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x380 SWAP3 SWAP2 SWAP1 PUSH2 0xA23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x489 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3F7 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x550 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x483 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x421 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x98F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x489 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EB DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3E8 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x54B JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x50B SWAP2 SWAP1 PUSH2 0xA84 JUMP JUMPDEST PUSH2 0x54A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x541 SWAP1 PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x595 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58C SWAP1 PUSH2 0xBB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x5BE SWAP2 SWAP1 PUSH2 0xC46 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x5FB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x600 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x611 DUP8 DUP4 DUP4 DUP8 PUSH2 0x61D JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x67F JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x677 JUMPI PUSH2 0x637 DUP6 PUSH2 0x692 JUMP JUMPDEST PUSH2 0x676 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66D SWAP1 PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x68A JUMP JUMPDEST PUSH2 0x689 DUP4 DUP4 PUSH2 0x6B5 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x6C8 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FC SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x718 DUP2 PUSH2 0x705 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x733 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x70F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x747 DUP2 PUSH2 0x705 JUMP JUMPDEST DUP2 EQ PUSH2 0x752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x764 DUP2 PUSH2 0x73E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x780 JUMPI PUSH2 0x77F PUSH2 0x739 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x78E DUP5 DUP3 DUP6 ADD PUSH2 0x755 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x616D6F756E74206E6F74207A65726F0000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7DE PUSH1 0xF DUP4 PUSH2 0x797 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E9 DUP3 PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x80D DUP2 PUSH2 0x7D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x83F DUP3 PUSH2 0x814 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x84F DUP2 PUSH2 0x834 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x86A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x846 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x87F DUP2 PUSH2 0x73E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x89B JUMPI PUSH2 0x89A PUSH2 0x739 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8A9 DUP5 DUP3 DUP6 ADD PUSH2 0x870 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7374616B696E67206661696C6400000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8E8 PUSH1 0xD DUP4 PUSH2 0x797 JUMP JUMPDEST SWAP2 POP PUSH2 0x8F3 DUP3 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x917 DUP2 PUSH2 0x8DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x958 DUP3 PUSH2 0x705 JUMP JUMPDEST SWAP2 POP PUSH2 0x963 DUP4 PUSH2 0x705 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x971 DUP2 PUSH2 0x705 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x988 JUMPI PUSH2 0x987 PUSH2 0x91E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x9A4 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x9B1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x9BE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x70F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x9DB PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x9E8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x846 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9FA DUP3 PUSH2 0x705 JUMP JUMPDEST SWAP2 POP PUSH2 0xA05 DUP4 PUSH2 0x705 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xA1D JUMPI PUSH2 0xA1C PUSH2 0x91E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA38 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x846 JUMP JUMPDEST PUSH2 0xA45 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x70F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA61 DUP2 PUSH2 0xA4C JUMP JUMPDEST DUP2 EQ PUSH2 0xA6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA7E DUP2 PUSH2 0xA58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA9A JUMPI PUSH2 0xA99 PUSH2 0x739 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAA8 DUP5 DUP3 DUP6 ADD PUSH2 0xA6F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0D PUSH1 0x2A DUP4 PUSH2 0x797 JUMP JUMPDEST SWAP2 POP PUSH2 0xB18 DUP3 PUSH2 0xAB1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB3C DUP2 PUSH2 0xB00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB9F PUSH1 0x26 DUP4 PUSH2 0x797 JUMP JUMPDEST SWAP2 POP PUSH2 0xBAA DUP3 PUSH2 0xB43 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBCE DUP2 PUSH2 0xB92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC09 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xBEE JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC20 DUP3 PUSH2 0xBD5 JUMP JUMPDEST PUSH2 0xC2A DUP2 DUP6 PUSH2 0xBE0 JUMP JUMPDEST SWAP4 POP PUSH2 0xC3A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xBEB JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC52 DUP3 DUP5 PUSH2 0xC15 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC93 PUSH1 0x1D DUP4 PUSH2 0x797 JUMP JUMPDEST SWAP2 POP PUSH2 0xC9E DUP3 PUSH2 0xC5D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCC2 DUP2 PUSH2 0xC86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF0 DUP3 PUSH2 0xCC9 JUMP JUMPDEST PUSH2 0xCFA DUP2 DUP6 PUSH2 0x797 JUMP JUMPDEST SWAP4 POP PUSH2 0xD0A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xBEB JUMP JUMPDEST PUSH2 0xD13 DUP2 PUSH2 0xCD4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD38 DUP2 DUP5 PUSH2 0xCE5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0xD5 OR 0xC4 SWAP14 0x24 0xB4 SWAP1 MSTORE 0xFC PUSH6 0x49D8FF041FF3 CREATE BALANCE 0x4D 0xAB 0x2A NUMBER 0xDB 0xF7 0xE3 CALLVALUE LOG1 BYTE 0xDD RETURNDATACOPY 0xFC PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "187:1023:4:-:0;;;415:233;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;512:12;497:5;;:28;;;;;;;;;;;;;;;;;;557:8;549:5;:16;;;;:::i;:::-;535:11;:30;;;;575:66;611:4;617:23;575:5;;;;;;;;;;:27;;;;;;;;:66;;;;;:::i;:::-;415:233;;187:1023;;2084:310:2;2210:20;2275:5;2233;:15;;;2257:4;2264:7;2233:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;;;:::i;:::-;2210:70;;2290:97;2310:5;2340:22;;;2364:7;2373:12;2317:69;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2290:19;;;:97;;:::i;:::-;2200:194;2084:310;;;:::o;3747:706::-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;4192:27;;;;;;;;:69;;;;;:::i;:::-;4166:95;;4295:1;4275:10;:17;:21;4271:176;;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;4271:176;3817:636;3747:706;;:::o;3873:223:3:-;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;;;:52;;:::i;:::-;4030:59;;3873:223;;;;;:::o;4960:446::-;5125:12;5182:5;5157:21;:30;;5149:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5241:12;5255:23;5282:6;:11;;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;;;:69;;:::i;:::-;5323:76;;;;4960:446;;;;;;:::o;7466:628::-;7646:12;7674:7;7670:418;;;7722:1;7701:10;:17;:22;7697:286;;7916:18;7927:6;7916:10;;;:18;;:::i;:::-;7908:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:286;8003:10;7996:17;;;;7670:418;8044:33;8052:10;8064:12;8044:7;;;:33;;:::i;:::-;7466:628;;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;8616:540::-;8795:1;8775:10;:17;:21;8771:379;;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;;;;;;;;;;:::i;:::-;;;;;;;;88:117:5;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:507::-;1284:6;1292;1341:2;1329:9;1320:7;1316:23;1312:32;1309:119;;;1347:79;;:::i;:::-;1309:119;1467:1;1492:64;1548:7;1539:6;1528:9;1524:22;1492:64;:::i;:::-;1482:74;;1438:128;1605:2;1631:64;1687:7;1678:6;1667:9;1663:22;1631:64;:::i;:::-;1621:74;;1576:129;1205:507;;;;;:::o;1718:180::-;1766:77;1763:1;1756:88;1863:4;1860:1;1853:15;1887:4;1884:1;1877:15;1904:410;1944:7;1967:20;1985:1;1967:20;:::i;:::-;1962:25;;2001:20;2019:1;2001:20;:::i;:::-;1996:25;;2056:1;2053;2049:9;2078:30;2096:11;2078:30;:::i;:::-;2067:41;;2257:1;2248:7;2244:15;2241:1;2238:22;2218:1;2211:9;2191:83;2168:139;;2287:18;;:::i;:::-;2168:139;1952:362;1904:410;;;;:::o;2320:118::-;2407:24;2425:5;2407:24;:::i;:::-;2402:3;2395:37;2320:118;;:::o;2444:332::-;2565:4;2603:2;2592:9;2588:18;2580:26;;2616:71;2684:1;2673:9;2669:17;2660:6;2616:71;:::i;:::-;2697:72;2765:2;2754:9;2750:18;2741:6;2697:72;:::i;:::-;2444:332;;;;;:::o;2782:351::-;2852:6;2901:2;2889:9;2880:7;2876:23;2872:32;2869:119;;;2907:79;;:::i;:::-;2869:119;3027:1;3052:64;3108:7;3099:6;3088:9;3084:22;3052:64;:::i;:::-;3042:74;;2998:128;2782:351;;;;:::o;3139:191::-;3179:3;3198:20;3216:1;3198:20;:::i;:::-;3193:25;;3232:20;3250:1;3232:20;:::i;:::-;3227:25;;3275:1;3272;3268:9;3261:16;;3296:3;3293:1;3290:10;3287:36;;;3303:18;;:::i;:::-;3287:36;3139:191;;;;:::o;3336:118::-;3423:24;3441:5;3423:24;:::i;:::-;3418:3;3411:37;3336:118;;:::o;3460:332::-;3581:4;3619:2;3608:9;3604:18;3596:26;;3632:71;3700:1;3689:9;3685:17;3676:6;3632:71;:::i;:::-;3713:72;3781:2;3770:9;3766:18;3757:6;3713:72;:::i;:::-;3460:332;;;;;:::o;3798:90::-;3832:7;3875:5;3868:13;3861:21;3850:32;;3798:90;;;:::o;3894:116::-;3964:21;3979:5;3964:21;:::i;:::-;3957:5;3954:32;3944:60;;4000:1;3997;3990:12;3944:60;3894:116;:::o;4016:137::-;4070:5;4101:6;4095:13;4086:22;;4117:30;4141:5;4117:30;:::i;:::-;4016:137;;;;:::o;4159:345::-;4226:6;4275:2;4263:9;4254:7;4250:23;4246:32;4243:119;;;4281:79;;:::i;:::-;4243:119;4401:1;4426:61;4479:7;4470:6;4459:9;4455:22;4426:61;:::i;:::-;4416:71;;4372:125;4159:345;;;;:::o;4510:169::-;4594:11;4628:6;4623:3;4616:19;4668:4;4663:3;4659:14;4644:29;;4510:169;;;;:::o;4685:229::-;4825:34;4821:1;4813:6;4809:14;4802:58;4894:12;4889:2;4881:6;4877:15;4870:37;4685:229;:::o;4920:366::-;5062:3;5083:67;5147:2;5142:3;5083:67;:::i;:::-;5076:74;;5159:93;5248:3;5159:93;:::i;:::-;5277:2;5272:3;5268:12;5261:19;;4920:366;;;:::o;5292:419::-;5458:4;5496:2;5485:9;5481:18;5473:26;;5545:9;5539:4;5535:20;5531:1;5520:9;5516:17;5509:47;5573:131;5699:4;5573:131;:::i;:::-;5565:139;;5292:419;;;:::o;5717:225::-;5857:34;5853:1;5845:6;5841:14;5834:58;5926:8;5921:2;5913:6;5909:15;5902:33;5717:225;:::o;5948:366::-;6090:3;6111:67;6175:2;6170:3;6111:67;:::i;:::-;6104:74;;6187:93;6276:3;6187:93;:::i;:::-;6305:2;6300:3;6296:12;6289:19;;5948:366;;;:::o;6320:419::-;6486:4;6524:2;6513:9;6509:18;6501:26;;6573:9;6567:4;6563:20;6559:1;6548:9;6544:17;6537:47;6601:131;6727:4;6601:131;:::i;:::-;6593:139;;6320:419;;;:::o;6745:98::-;6796:6;6830:5;6824:12;6814:22;;6745:98;;;:::o;6849:147::-;6950:11;6987:3;6972:18;;6849:147;;;;:::o;7002:246::-;7083:1;7093:113;7107:6;7104:1;7101:13;7093:113;;;7192:1;7187:3;7183:11;7177:18;7173:1;7168:3;7164:11;7157:39;7129:2;7126:1;7122:10;7117:15;;7093:113;;;7240:1;7231:6;7226:3;7222:16;7215:27;7064:184;7002:246;;;:::o;7254:386::-;7358:3;7386:38;7418:5;7386:38;:::i;:::-;7440:88;7521:6;7516:3;7440:88;:::i;:::-;7433:95;;7537:65;7595:6;7590:3;7583:4;7576:5;7572:16;7537:65;:::i;:::-;7627:6;7622:3;7618:16;7611:23;;7362:278;7254:386;;;;:::o;7646:271::-;7776:3;7798:93;7887:3;7878:6;7798:93;:::i;:::-;7791:100;;7908:3;7901:10;;7646:271;;;;:::o;7923:179::-;8063:31;8059:1;8051:6;8047:14;8040:55;7923:179;:::o;8108:366::-;8250:3;8271:67;8335:2;8330:3;8271:67;:::i;:::-;8264:74;;8347:93;8436:3;8347:93;:::i;:::-;8465:2;8460:3;8456:12;8449:19;;8108:366;;;:::o;8480:419::-;8646:4;8684:2;8673:9;8669:18;8661:26;;8733:9;8727:4;8723:20;8719:1;8708:9;8704:17;8697:47;8761:131;8887:4;8761:131;:::i;:::-;8753:139;;8480:419;;;:::o;8905:99::-;8957:6;8991:5;8985:12;8975:22;;8905:99;;;:::o;9010:102::-;9051:6;9102:2;9098:7;9093:2;9086:5;9082:14;9078:28;9068:38;;9010:102;;;:::o;9118:377::-;9206:3;9234:39;9267:5;9234:39;:::i;:::-;9289:71;9353:6;9348:3;9289:71;:::i;:::-;9282:78;;9369:65;9427:6;9422:3;9415:4;9408:5;9404:16;9369:65;:::i;:::-;9459:29;9481:6;9459:29;:::i;:::-;9454:3;9450:39;9443:46;;9210:285;9118:377;;;;:::o;9501:313::-;9614:4;9652:2;9641:9;9637:18;9629:26;;9701:9;9695:4;9691:20;9687:1;9676:9;9672:17;9665:47;9729:78;9802:4;9793:6;9729:78;:::i;:::-;9721:86;;9501:313;;;;:::o;187:1023:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_791": {
									"entryPoint": null,
									"id": 791,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_393": {
									"entryPoint": 1161,
									"id": 393,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revert_723": {
									"entryPoint": 1717,
									"id": 723,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@functionCallWithValue_548": {
									"entryPoint": 1360,
									"id": 548,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_484": {
									"entryPoint": 1000,
									"id": 484,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@isContract_412": {
									"entryPoint": 1682,
									"id": 412,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeIncreaseAllowance_251": {
									"entryPoint": 726,
									"id": 251,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_171": {
									"entryPoint": 1024,
									"id": 171,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@stakeAmount_737": {
									"entryPoint": 175,
									"id": 737,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_845": {
									"entryPoint": 262,
									"id": 845,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unStake_861": {
									"entryPoint": 181,
									"id": 861,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_679": {
									"entryPoint": 1565,
									"id": 679,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_140bae4f8715a807acc7e68bdc7fe377eba924c9bb144e20fce4b39cbf7b2904_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_19eb53a159731d5cd526bcf2b33a4e6a536e0c5ce4dbfdea64f3b575dbfe6291_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2962,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3142,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 2502,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2447,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2595,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_140bae4f8715a807acc7e68bdc7fe377eba924c9bb144e20fce4b39cbf7b2904__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_19eb53a159731d5cd526bcf2b33a4e6a536e0c5ce4dbfdea64f3b575dbfe6291__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2997,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 3029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3273,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3040,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2068,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1797,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3051,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 2334,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1849,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_140bae4f8715a807acc7e68bdc7fe377eba924c9bb144e20fce4b39cbf7b2904": {
									"entryPoint": 1960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_19eb53a159731d5cd526bcf2b33a4e6a536e0c5ce4dbfdea64f3b575dbfe6291": {
									"entryPoint": 2226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 2883,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 3165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 2737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1854,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12345:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:5",
														"type": ""
													}
												],
												"src": "7:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:5",
														"type": ""
													}
												],
												"src": "90:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:5",
														"type": ""
													}
												],
												"src": "214:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "482:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "492:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "475:6:5",
														"type": ""
													}
												],
												"src": "442:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "612:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "629:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "632:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "622:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "752:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "812:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "878:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "881:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "835:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "860:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "842:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "842:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "832:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "832:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "825:43:5"
															},
															"nodeType": "YulIf",
															"src": "822:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "805:5:5",
														"type": ""
													}
												],
												"src": "769:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "949:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "959:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "981:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "968:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "997:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "997:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "997:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "927:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "935:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "943:5:5",
														"type": ""
													}
												],
												"src": "897:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1108:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1154:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1121:32:5"
															},
															"nodeType": "YulIf",
															"src": "1118:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1247:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1291:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1326:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1337:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1322:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1322:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1346:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1301:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1301:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1078:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1089:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1101:6:5",
														"type": ""
													}
												],
												"src": "1042:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1473:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1490:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1495:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1483:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1483:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1483:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1511:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1530:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1535:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1526:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1511:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1445:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1450:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1461:11:5",
														"type": ""
													}
												],
												"src": "1377:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1658:59:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1680:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1688:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1676:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1676:14:5"
																	},
																	{
																		"hexValue": "616d6f756e74206e6f74207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1692:17:5",
																		"type": "",
																		"value": "amount not zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1669:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1669:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1669:41:5"
														}
													]
												},
												"name": "store_literal_in_memory_140bae4f8715a807acc7e68bdc7fe377eba924c9bb144e20fce4b39cbf7b2904",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1650:6:5",
														"type": ""
													}
												],
												"src": "1552:165:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1869:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1879:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1945:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1950:2:5",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1886:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1886:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1879:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2051:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_140bae4f8715a807acc7e68bdc7fe377eba924c9bb144e20fce4b39cbf7b2904",
																	"nodeType": "YulIdentifier",
																	"src": "1962:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1962:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1962:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2064:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2075:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2080:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2071:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2071:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2064:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_140bae4f8715a807acc7e68bdc7fe377eba924c9bb144e20fce4b39cbf7b2904_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1857:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1865:3:5",
														"type": ""
													}
												],
												"src": "1723:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2266:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2276:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2288:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2299:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2284:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2284:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2276:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2323:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2334:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2319:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2319:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2342:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2348:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2338:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2338:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2312:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2312:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2312:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2368:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2502:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_140bae4f8715a807acc7e68bdc7fe377eba924c9bb144e20fce4b39cbf7b2904_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2376:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2376:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2368:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_140bae4f8715a807acc7e68bdc7fe377eba924c9bb144e20fce4b39cbf7b2904__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2246:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2261:4:5",
														"type": ""
													}
												],
												"src": "2095:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2565:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2575:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2590:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2597:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2586:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2586:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2575:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2547:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2557:7:5",
														"type": ""
													}
												],
												"src": "2520:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2697:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2707:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2736:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2718:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2718:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2707:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2679:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2689:7:5",
														"type": ""
													}
												],
												"src": "2652:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2819:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2836:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2859:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2841:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2841:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2829:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2829:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2829:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2807:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2814:3:5",
														"type": ""
													}
												],
												"src": "2754:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2976:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2986:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2998:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3009:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2994:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2986:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3066:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3079:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3090:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3075:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3075:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3022:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3022:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3022:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2948:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2960:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2971:4:5",
														"type": ""
													}
												],
												"src": "2878:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3169:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3179:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3194:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3188:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3188:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3179:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3237:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3210:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3210:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3210:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3147:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3155:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3163:5:5",
														"type": ""
													}
												],
												"src": "3106:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3332:274:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3378:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3380:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3380:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3380:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3353:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3362:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3349:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3349:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3374:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3345:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3345:32:5"
															},
															"nodeType": "YulIf",
															"src": "3342:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "3471:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3486:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3500:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3490:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3515:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3561:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3572:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3557:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3557:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3581:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3525:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3525:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3515:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3302:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3313:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3325:6:5",
														"type": ""
													}
												],
												"src": "3255:351:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3718:57:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3740:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3748:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3736:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3736:14:5"
																	},
																	{
																		"hexValue": "7374616b696e67206661696c64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3752:15:5",
																		"type": "",
																		"value": "staking faild"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3729:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3729:39:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3729:39:5"
														}
													]
												},
												"name": "store_literal_in_memory_19eb53a159731d5cd526bcf2b33a4e6a536e0c5ce4dbfdea64f3b575dbfe6291",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3710:6:5",
														"type": ""
													}
												],
												"src": "3612:163:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3927:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3937:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4003:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4008:2:5",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3944:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3944:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3937:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4109:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_19eb53a159731d5cd526bcf2b33a4e6a536e0c5ce4dbfdea64f3b575dbfe6291",
																	"nodeType": "YulIdentifier",
																	"src": "4020:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4020:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4020:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4122:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4133:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4138:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4129:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4129:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4122:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_19eb53a159731d5cd526bcf2b33a4e6a536e0c5ce4dbfdea64f3b575dbfe6291_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3915:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3923:3:5",
														"type": ""
													}
												],
												"src": "3781:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4324:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4334:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4346:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4357:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4342:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4342:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4334:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4381:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4392:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4377:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4377:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4400:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4406:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4396:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4396:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4370:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4370:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4370:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4426:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4560:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_19eb53a159731d5cd526bcf2b33a4e6a536e0c5ce4dbfdea64f3b575dbfe6291_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4434:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4434:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4426:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_19eb53a159731d5cd526bcf2b33a4e6a536e0c5ce4dbfdea64f3b575dbfe6291__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4304:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4319:4:5",
														"type": ""
													}
												],
												"src": "4153:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4606:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4623:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4626:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4616:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4616:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4616:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4720:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4723:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4713:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4713:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4713:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4744:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4747:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4737:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4737:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4737:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4578:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4812:362:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4822:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4845:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4827:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4827:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4822:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4856:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4879:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4861:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4861:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4856:1:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4890:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4913:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4916:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4909:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4909:9:5"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "4894:11:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4927:41:5",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "4956:11:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4938:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4938:30:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "4927:7:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5145:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5147:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5147:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5147:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5078:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5071:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5071:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "5101:1:5"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "5108:7:5"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "5117:1:5"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "5104:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5104:15:5"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "5098:2:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5098:22:5"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "5051:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5051:83:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5031:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5031:113:5"
															},
															"nodeType": "YulIf",
															"src": "5028:139:5"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4795:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4798:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4804:7:5",
														"type": ""
													}
												],
												"src": "4764:410:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5334:288:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5344:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5356:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5367:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5352:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5352:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5344:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5424:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5437:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5448:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5433:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5433:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5380:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5380:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5380:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5505:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5518:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5529:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5514:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5514:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5461:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5461:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5461:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5587:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5600:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5611:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5596:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5596:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5543:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5543:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5543:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5290:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5302:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5310:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5318:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5329:4:5",
														"type": ""
													}
												],
												"src": "5180:442:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5754:206:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5764:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5776:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5787:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5772:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5772:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5764:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5844:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5857:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5868:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5853:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5853:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5800:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5800:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5800:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5925:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5938:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5949:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5934:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5934:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5881:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5881:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5881:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5718:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5730:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5738:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5749:4:5",
														"type": ""
													}
												],
												"src": "5628:332:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6010:147:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6020:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6043:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6025:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6025:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6020:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6054:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6077:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6059:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6059:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6054:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6088:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6099:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6102:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6095:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6095:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6088:3:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6128:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6130:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6130:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6120:1:5"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "6123:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6117:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6117:10:5"
															},
															"nodeType": "YulIf",
															"src": "6114:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5997:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6000:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6006:3:5",
														"type": ""
													}
												],
												"src": "5966:191:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6289:206:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6299:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6311:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6322:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6307:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6307:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6299:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6379:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6392:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6403:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6388:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6388:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6335:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6335:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6335:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6460:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6473:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6484:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6469:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6469:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6416:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6416:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6416:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6253:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6265:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6273:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6284:4:5",
														"type": ""
													}
												],
												"src": "6163:332:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6543:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6553:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6578:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6571:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6571:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6564:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6564:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6553:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6525:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6535:7:5",
														"type": ""
													}
												],
												"src": "6501:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6637:76:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6691:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6700:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6703:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6693:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6693:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6693:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6660:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6682:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6667:14:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6667:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6657:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6657:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6650:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6650:40:5"
															},
															"nodeType": "YulIf",
															"src": "6647:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6630:5:5",
														"type": ""
													}
												],
												"src": "6597:116:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6779:77:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6789:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6804:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6798:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6798:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6789:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6844:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6820:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6820:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6820:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6757:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6765:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6773:5:5",
														"type": ""
													}
												],
												"src": "6719:137:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6936:271:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6982:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6984:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6984:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6984:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6957:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6966:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6953:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6953:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6978:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6949:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6949:32:5"
															},
															"nodeType": "YulIf",
															"src": "6946:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "7075:125:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7090:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7104:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7094:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7119:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7162:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7173:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7158:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7158:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7182:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7129:28:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7129:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7119:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6906:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6917:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6929:6:5",
														"type": ""
													}
												],
												"src": "6862:345:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7319:123:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7341:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7349:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7337:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7337:14:5"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7353:34:5",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7330:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7330:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7330:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7409:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7417:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7405:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7405:15:5"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7422:12:5",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7398:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7398:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7398:37:5"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7311:6:5",
														"type": ""
													}
												],
												"src": "7213:229:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7594:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7604:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7670:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7675:2:5",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7611:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7611:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7604:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7776:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "7687:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7687:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7687:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7789:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7800:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7805:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7796:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7796:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7789:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7582:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7590:3:5",
														"type": ""
													}
												],
												"src": "7448:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7991:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8001:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8013:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8024:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8009:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8009:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8001:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8048:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8059:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8044:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8044:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8067:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8073:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8063:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8063:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8037:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8037:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8037:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8093:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8227:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8101:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8101:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8093:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7971:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7986:4:5",
														"type": ""
													}
												],
												"src": "7820:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8351:119:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8373:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8381:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8369:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8369:14:5"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8385:34:5",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8362:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8362:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8362:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8441:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8449:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8437:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8437:15:5"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8454:8:5",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8430:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8430:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8430:33:5"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8343:6:5",
														"type": ""
													}
												],
												"src": "8245:225:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8622:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8632:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8698:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8703:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8639:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8639:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8632:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8804:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "8715:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8715:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8715:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8817:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8828:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8833:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8824:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8824:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8817:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8610:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8618:3:5",
														"type": ""
													}
												],
												"src": "8476:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9019:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9029:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9041:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9052:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9037:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9037:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9029:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9076:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9087:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9072:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9072:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9095:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9101:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9091:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9091:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9065:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9065:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9065:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9121:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9255:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9129:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9129:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9121:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8999:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9014:4:5",
														"type": ""
													}
												],
												"src": "8848:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9331:40:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9342:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9358:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9352:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9352:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9342:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9314:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9324:6:5",
														"type": ""
													}
												],
												"src": "9273:98:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9490:34:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9500:18:5",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "9515:3:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9500:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9462:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9467:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9478:11:5",
														"type": ""
													}
												],
												"src": "9377:147:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9592:184:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9602:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9611:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "9606:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9671:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "9696:3:5"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "9701:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9692:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9692:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "9715:3:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "9720:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "9711:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9711:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "9705:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9705:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9685:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9685:39:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9685:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "9632:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9635:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9629:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9629:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "9643:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9645:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "9654:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9657:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9650:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9650:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "9645:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "9625:3:5",
																"statements": []
															},
															"src": "9621:113:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "9754:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9759:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9750:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9750:16:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9768:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9743:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9743:27:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9743:27:5"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "9574:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "9579:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9584:6:5",
														"type": ""
													}
												],
												"src": "9530:246:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9890:278:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9900:52:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9946:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "9914:31:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9914:38:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "9904:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9961:95:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10044:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10049:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9968:75:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9968:88:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9961:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10104:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10111:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10100:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10100:16:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10118:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10123:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "10065:34:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10065:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10065:65:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10139:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10150:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10155:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10146:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10146:16:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10139:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9871:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9878:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9886:3:5",
														"type": ""
													}
												],
												"src": "9782:386:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10308:137:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10319:100:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10406:6:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10415:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10326:79:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10326:93:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10319:3:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10429:10:5",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "10436:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10429:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10287:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10293:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10304:3:5",
														"type": ""
													}
												],
												"src": "10174:271:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10557:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10579:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10587:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10575:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10575:14:5"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10591:31:5",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10568:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10568:55:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10568:55:5"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10549:6:5",
														"type": ""
													}
												],
												"src": "10451:179:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10782:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10792:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10858:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10863:2:5",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10799:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10799:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10792:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10964:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "10875:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10875:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10875:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10977:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10988:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10993:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10984:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10984:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10977:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10770:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10778:3:5",
														"type": ""
													}
												],
												"src": "10636:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11179:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11189:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11201:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11212:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11197:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11197:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11189:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11236:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11247:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11232:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11232:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11255:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11261:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11251:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11251:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11225:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11225:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11225:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11281:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11415:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11289:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11289:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11281:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11159:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11174:4:5",
														"type": ""
													}
												],
												"src": "11008:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11492:40:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11503:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11519:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11513:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11513:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "11503:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11475:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11485:6:5",
														"type": ""
													}
												],
												"src": "11433:99:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11586:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11596:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11614:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11621:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11610:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11610:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11630:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "11626:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11626:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11606:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11606:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "11596:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11569:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "11579:6:5",
														"type": ""
													}
												],
												"src": "11538:102:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11738:285:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11748:53:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11795:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11762:32:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11762:39:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11752:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11810:78:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11876:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11881:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11817:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11817:71:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11810:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11936:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11943:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11932:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11932:16:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11950:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11955:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "11897:34:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11897:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11897:65:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11971:46:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11982:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12009:6:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "11987:21:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11987:29:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11978:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11978:39:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11971:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11719:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11726:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11734:3:5",
														"type": ""
													}
												],
												"src": "11646:377:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12147:195:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12157:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12169:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12180:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12165:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12165:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12157:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12204:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12215:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12200:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12200:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12223:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12229:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12219:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12219:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12193:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12193:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12193:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12249:86:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12321:6:5"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12330:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12257:63:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12257:78:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12249:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12119:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12131:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12142:4:5",
														"type": ""
													}
												],
												"src": "12029:313:5"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_140bae4f8715a807acc7e68bdc7fe377eba924c9bb144e20fce4b39cbf7b2904(memPtr) {\n\n        mstore(add(memPtr, 0), \"amount not zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_140bae4f8715a807acc7e68bdc7fe377eba924c9bb144e20fce4b39cbf7b2904_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_140bae4f8715a807acc7e68bdc7fe377eba924c9bb144e20fce4b39cbf7b2904(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_140bae4f8715a807acc7e68bdc7fe377eba924c9bb144e20fce4b39cbf7b2904__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_140bae4f8715a807acc7e68bdc7fe377eba924c9bb144e20fce4b39cbf7b2904_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_19eb53a159731d5cd526bcf2b33a4e6a536e0c5ce4dbfdea64f3b575dbfe6291(memPtr) {\n\n        mstore(add(memPtr, 0), \"staking faild\")\n\n    }\n\n    function abi_encode_t_stringliteral_19eb53a159731d5cd526bcf2b33a4e6a536e0c5ce4dbfdea64f3b575dbfe6291_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_19eb53a159731d5cd526bcf2b33a4e6a536e0c5ce4dbfdea64f3b575dbfe6291(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_19eb53a159731d5cd526bcf2b33a4e6a536e0c5ce4dbfdea64f3b575dbfe6291__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_19eb53a159731d5cd526bcf2b33a4e6a536e0c5ce4dbfdea64f3b575dbfe6291_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100385760003560e01c806360c7dc471461004457806373cf575a1461006f578063a694fc3a146100865761003f565b3661003f57005b600080fd5b34801561005057600080fd5b506100596100af565b604051610066919061071e565b60405180910390f35b34801561007b57600080fd5b506100846100b5565b005b34801561009257600080fd5b506100ad60048036038101906100a8919061076a565b610106565b005b60015481565b610104303360015460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610400909392919063ffffffff16565b565b60008111610149576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610140906107f4565b60405180910390fd5b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016101a39190610855565b602060405180830381865afa1580156101c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e49190610885565b1015610225576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021c906108fe565b60405180910390fd5b7f160ffcaa807f78c8b4983836e2396338d073e75695ac448aa0b5e4a75b210b1d3330670de0b6b3a76400008461025c919061094d565b60405161026b9392919061098f565b60405180910390a16102d33330670de0b6b3a76400008461028c919061094d565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610400909392919063ffffffff16565b50565b6000818473ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30866040518363ffffffff1660e01b81526004016103149291906109c6565b602060405180830381865afa158015610331573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103559190610885565b61035f91906109ef565b90506103e28463095ea7b360e01b8584604051602401610380929190610a23565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610489565b50505050565b60606103f78484600085610550565b90509392505050565b610483846323b872dd60e01b8585856040516024016104219392919061098f565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610489565b50505050565b60006104eb826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166103e89092919063ffffffff16565b905060008151111561054b578080602001905181019061050b9190610a84565b61054a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054190610b23565b60405180910390fd5b5b505050565b606082471015610595576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058c90610bb5565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516105be9190610c46565b60006040518083038185875af1925050503d80600081146105fb576040519150601f19603f3d011682016040523d82523d6000602084013e610600565b606091505b50915091506106118783838761061d565b92505050949350505050565b6060831561067f5760008351036106775761063785610692565b610676576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066d90610ca9565b60405180910390fd5b5b82905061068a565b61068983836106b5565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156106c85781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fc9190610d1e565b60405180910390fd5b6000819050919050565b61071881610705565b82525050565b6000602082019050610733600083018461070f565b92915050565b600080fd5b61074781610705565b811461075257600080fd5b50565b6000813590506107648161073e565b92915050565b6000602082840312156107805761077f610739565b5b600061078e84828501610755565b91505092915050565b600082825260208201905092915050565b7f616d6f756e74206e6f74207a65726f0000000000000000000000000000000000600082015250565b60006107de600f83610797565b91506107e9826107a8565b602082019050919050565b6000602082019050818103600083015261080d816107d1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061083f82610814565b9050919050565b61084f81610834565b82525050565b600060208201905061086a6000830184610846565b92915050565b60008151905061087f8161073e565b92915050565b60006020828403121561089b5761089a610739565b5b60006108a984828501610870565b91505092915050565b7f7374616b696e67206661696c6400000000000000000000000000000000000000600082015250565b60006108e8600d83610797565b91506108f3826108b2565b602082019050919050565b60006020820190508181036000830152610917816108db565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061095882610705565b915061096383610705565b925082820261097181610705565b915082820484148315176109885761098761091e565b5b5092915050565b60006060820190506109a46000830186610846565b6109b16020830185610846565b6109be604083018461070f565b949350505050565b60006040820190506109db6000830185610846565b6109e86020830184610846565b9392505050565b60006109fa82610705565b9150610a0583610705565b9250828201905080821115610a1d57610a1c61091e565b5b92915050565b6000604082019050610a386000830185610846565b610a45602083018461070f565b9392505050565b60008115159050919050565b610a6181610a4c565b8114610a6c57600080fd5b50565b600081519050610a7e81610a58565b92915050565b600060208284031215610a9a57610a99610739565b5b6000610aa884828501610a6f565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000610b0d602a83610797565b9150610b1882610ab1565b604082019050919050565b60006020820190508181036000830152610b3c81610b00565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000610b9f602683610797565b9150610baa82610b43565b604082019050919050565b60006020820190508181036000830152610bce81610b92565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015610c09578082015181840152602081019050610bee565b60008484015250505050565b6000610c2082610bd5565b610c2a8185610be0565b9350610c3a818560208601610beb565b80840191505092915050565b6000610c528284610c15565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000610c93601d83610797565b9150610c9e82610c5d565b602082019050919050565b60006020820190508181036000830152610cc281610c86565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b6000610cf082610cc9565b610cfa8185610797565b9350610d0a818560208601610beb565b610d1381610cd4565b840191505092915050565b60006020820190508181036000830152610d388184610ce5565b90509291505056fea26469706673582212205fd517c49d24b49052fc6549d8ff041ff3f0314dab2a43dbf7e334a11add3efc64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x60C7DC47 EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x73CF575A EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x86 JUMPI PUSH2 0x3F JUMP JUMPDEST CALLDATASIZE PUSH2 0x3F JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH2 0xAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x71E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x84 PUSH2 0xB5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA8 SWAP2 SWAP1 PUSH2 0x76A JUMP JUMPDEST PUSH2 0x106 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x104 ADDRESS CALLER PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x400 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x149 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x140 SWAP1 PUSH2 0x7F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x885 JUMP JUMPDEST LT ISZERO PUSH2 0x225 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21C SWAP1 PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x160FFCAA807F78C8B4983836E2396338D073E75695AC448AA0B5E4A75B210B1D CALLER ADDRESS PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x94D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x98F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x2D3 CALLER ADDRESS PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x94D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x400 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x314 SWAP3 SWAP2 SWAP1 PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x331 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x355 SWAP2 SWAP1 PUSH2 0x885 JUMP JUMPDEST PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x9EF JUMP JUMPDEST SWAP1 POP PUSH2 0x3E2 DUP5 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x380 SWAP3 SWAP2 SWAP1 PUSH2 0xA23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x489 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3F7 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x550 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x483 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x421 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x98F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x489 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EB DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3E8 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x54B JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x50B SWAP2 SWAP1 PUSH2 0xA84 JUMP JUMPDEST PUSH2 0x54A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x541 SWAP1 PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x595 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58C SWAP1 PUSH2 0xBB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x5BE SWAP2 SWAP1 PUSH2 0xC46 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x5FB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x600 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x611 DUP8 DUP4 DUP4 DUP8 PUSH2 0x61D JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x67F JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x677 JUMPI PUSH2 0x637 DUP6 PUSH2 0x692 JUMP JUMPDEST PUSH2 0x676 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66D SWAP1 PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x68A JUMP JUMPDEST PUSH2 0x689 DUP4 DUP4 PUSH2 0x6B5 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x6C8 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FC SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x718 DUP2 PUSH2 0x705 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x733 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x70F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x747 DUP2 PUSH2 0x705 JUMP JUMPDEST DUP2 EQ PUSH2 0x752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x764 DUP2 PUSH2 0x73E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x780 JUMPI PUSH2 0x77F PUSH2 0x739 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x78E DUP5 DUP3 DUP6 ADD PUSH2 0x755 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x616D6F756E74206E6F74207A65726F0000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7DE PUSH1 0xF DUP4 PUSH2 0x797 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E9 DUP3 PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x80D DUP2 PUSH2 0x7D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x83F DUP3 PUSH2 0x814 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x84F DUP2 PUSH2 0x834 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x86A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x846 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x87F DUP2 PUSH2 0x73E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x89B JUMPI PUSH2 0x89A PUSH2 0x739 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8A9 DUP5 DUP3 DUP6 ADD PUSH2 0x870 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7374616B696E67206661696C6400000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8E8 PUSH1 0xD DUP4 PUSH2 0x797 JUMP JUMPDEST SWAP2 POP PUSH2 0x8F3 DUP3 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x917 DUP2 PUSH2 0x8DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x958 DUP3 PUSH2 0x705 JUMP JUMPDEST SWAP2 POP PUSH2 0x963 DUP4 PUSH2 0x705 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x971 DUP2 PUSH2 0x705 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x988 JUMPI PUSH2 0x987 PUSH2 0x91E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x9A4 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x9B1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x9BE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x70F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x9DB PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x9E8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x846 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9FA DUP3 PUSH2 0x705 JUMP JUMPDEST SWAP2 POP PUSH2 0xA05 DUP4 PUSH2 0x705 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xA1D JUMPI PUSH2 0xA1C PUSH2 0x91E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA38 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x846 JUMP JUMPDEST PUSH2 0xA45 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x70F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA61 DUP2 PUSH2 0xA4C JUMP JUMPDEST DUP2 EQ PUSH2 0xA6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA7E DUP2 PUSH2 0xA58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA9A JUMPI PUSH2 0xA99 PUSH2 0x739 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAA8 DUP5 DUP3 DUP6 ADD PUSH2 0xA6F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0D PUSH1 0x2A DUP4 PUSH2 0x797 JUMP JUMPDEST SWAP2 POP PUSH2 0xB18 DUP3 PUSH2 0xAB1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB3C DUP2 PUSH2 0xB00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB9F PUSH1 0x26 DUP4 PUSH2 0x797 JUMP JUMPDEST SWAP2 POP PUSH2 0xBAA DUP3 PUSH2 0xB43 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBCE DUP2 PUSH2 0xB92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC09 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xBEE JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC20 DUP3 PUSH2 0xBD5 JUMP JUMPDEST PUSH2 0xC2A DUP2 DUP6 PUSH2 0xBE0 JUMP JUMPDEST SWAP4 POP PUSH2 0xC3A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xBEB JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC52 DUP3 DUP5 PUSH2 0xC15 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC93 PUSH1 0x1D DUP4 PUSH2 0x797 JUMP JUMPDEST SWAP2 POP PUSH2 0xC9E DUP3 PUSH2 0xC5D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCC2 DUP2 PUSH2 0xC86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF0 DUP3 PUSH2 0xCC9 JUMP JUMPDEST PUSH2 0xCFA DUP2 DUP6 PUSH2 0x797 JUMP JUMPDEST SWAP4 POP PUSH2 0xD0A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xBEB JUMP JUMPDEST PUSH2 0xD13 DUP2 PUSH2 0xCD4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD38 DUP2 DUP5 PUSH2 0xCE5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0xD5 OR 0xC4 SWAP14 0x24 0xB4 SWAP1 MSTORE 0xFC PUSH6 0x49D8FF041FF3 CREATE BALANCE 0x4D 0xAB 0x2A NUMBER 0xDB 0xF7 0xE3 CALLVALUE LOG1 BYTE 0xDD RETURNDATACOPY 0xFC PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "187:1023:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;269:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1053:153;;;;;;;;;;;;;:::i;:::-;;705:321;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;269:26;;;;:::o;1053:153::-;1091:108;1135:4;1154:10;1178:11;;1091:5;;;;;;;;;;:22;;;;:108;;;;;;:::i;:::-;1053:153::o;705:321::-;774:1;764:7;:11;756:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;844:7;813:5;;;;;;;;;;:15;;;829:10;813:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;;805:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;883:57;894:10;914:4;931:8;921:7;:18;;;;:::i;:::-;883:57;;;;;;;;:::i;:::-;;;;;;;;950:69;973:10;993:4;1010:8;1000:7;:18;;;;:::i;:::-;950:5;;;;;;;;;;:22;;;;:69;;;;;;:::i;:::-;705:321;:::o;2084:310:2:-;2210:20;2275:5;2233;:15;;;2257:4;2264:7;2233:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;;;:::i;:::-;2210:70;;2290:97;2310:5;2340:22;;;2364:7;2373:12;2317:69;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2290:19;:97::i;:::-;2200:194;2084:310;;;:::o;3873:223:3:-;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;;3873:223;;;;;:::o;974:241:2:-;1112:96;1132:5;1162:27;;;1191:4;1197:2;1201:5;1139:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1112:19;:96::i;:::-;974:241;;;;:::o;3747:706::-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;4192:27;;;;:69;;;;;:::i;:::-;4166:95;;4295:1;4275:10;:17;:21;4271:176;;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;4271:176;3817:636;3747:706;;:::o;4960:446:3:-;5125:12;5182:5;5157:21;:30;;5149:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5241:12;5255:23;5282:6;:11;;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;;;;4960:446;;;;;;:::o;7466:628::-;7646:12;7674:7;7670:418;;;7722:1;7701:10;:17;:22;7697:286;;7916:18;7927:6;7916:10;:18::i;:::-;7908:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:286;8003:10;7996:17;;;;7670:418;8044:33;8052:10;8064:12;8044:7;:33::i;:::-;7466:628;;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;8616:540::-;8795:1;8775:10;:17;:21;8771:379;;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;;;;;;;;;;:::i;:::-;;;;;;;;7:77:5;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:169::-;1461:11;1495:6;1490:3;1483:19;1535:4;1530:3;1526:14;1511:29;;1377:169;;;;:::o;1552:165::-;1692:17;1688:1;1680:6;1676:14;1669:41;1552:165;:::o;1723:366::-;1865:3;1886:67;1950:2;1945:3;1886:67;:::i;:::-;1879:74;;1962:93;2051:3;1962:93;:::i;:::-;2080:2;2075:3;2071:12;2064:19;;1723:366;;;:::o;2095:419::-;2261:4;2299:2;2288:9;2284:18;2276:26;;2348:9;2342:4;2338:20;2334:1;2323:9;2319:17;2312:47;2376:131;2502:4;2376:131;:::i;:::-;2368:139;;2095:419;;;:::o;2520:126::-;2557:7;2597:42;2590:5;2586:54;2575:65;;2520:126;;;:::o;2652:96::-;2689:7;2718:24;2736:5;2718:24;:::i;:::-;2707:35;;2652:96;;;:::o;2754:118::-;2841:24;2859:5;2841:24;:::i;:::-;2836:3;2829:37;2754:118;;:::o;2878:222::-;2971:4;3009:2;2998:9;2994:18;2986:26;;3022:71;3090:1;3079:9;3075:17;3066:6;3022:71;:::i;:::-;2878:222;;;;:::o;3106:143::-;3163:5;3194:6;3188:13;3179:22;;3210:33;3237:5;3210:33;:::i;:::-;3106:143;;;;:::o;3255:351::-;3325:6;3374:2;3362:9;3353:7;3349:23;3345:32;3342:119;;;3380:79;;:::i;:::-;3342:119;3500:1;3525:64;3581:7;3572:6;3561:9;3557:22;3525:64;:::i;:::-;3515:74;;3471:128;3255:351;;;;:::o;3612:163::-;3752:15;3748:1;3740:6;3736:14;3729:39;3612:163;:::o;3781:366::-;3923:3;3944:67;4008:2;4003:3;3944:67;:::i;:::-;3937:74;;4020:93;4109:3;4020:93;:::i;:::-;4138:2;4133:3;4129:12;4122:19;;3781:366;;;:::o;4153:419::-;4319:4;4357:2;4346:9;4342:18;4334:26;;4406:9;4400:4;4396:20;4392:1;4381:9;4377:17;4370:47;4434:131;4560:4;4434:131;:::i;:::-;4426:139;;4153:419;;;:::o;4578:180::-;4626:77;4623:1;4616:88;4723:4;4720:1;4713:15;4747:4;4744:1;4737:15;4764:410;4804:7;4827:20;4845:1;4827:20;:::i;:::-;4822:25;;4861:20;4879:1;4861:20;:::i;:::-;4856:25;;4916:1;4913;4909:9;4938:30;4956:11;4938:30;:::i;:::-;4927:41;;5117:1;5108:7;5104:15;5101:1;5098:22;5078:1;5071:9;5051:83;5028:139;;5147:18;;:::i;:::-;5028:139;4812:362;4764:410;;;;:::o;5180:442::-;5329:4;5367:2;5356:9;5352:18;5344:26;;5380:71;5448:1;5437:9;5433:17;5424:6;5380:71;:::i;:::-;5461:72;5529:2;5518:9;5514:18;5505:6;5461:72;:::i;:::-;5543;5611:2;5600:9;5596:18;5587:6;5543:72;:::i;:::-;5180:442;;;;;;:::o;5628:332::-;5749:4;5787:2;5776:9;5772:18;5764:26;;5800:71;5868:1;5857:9;5853:17;5844:6;5800:71;:::i;:::-;5881:72;5949:2;5938:9;5934:18;5925:6;5881:72;:::i;:::-;5628:332;;;;;:::o;5966:191::-;6006:3;6025:20;6043:1;6025:20;:::i;:::-;6020:25;;6059:20;6077:1;6059:20;:::i;:::-;6054:25;;6102:1;6099;6095:9;6088:16;;6123:3;6120:1;6117:10;6114:36;;;6130:18;;:::i;:::-;6114:36;5966:191;;;;:::o;6163:332::-;6284:4;6322:2;6311:9;6307:18;6299:26;;6335:71;6403:1;6392:9;6388:17;6379:6;6335:71;:::i;:::-;6416:72;6484:2;6473:9;6469:18;6460:6;6416:72;:::i;:::-;6163:332;;;;;:::o;6501:90::-;6535:7;6578:5;6571:13;6564:21;6553:32;;6501:90;;;:::o;6597:116::-;6667:21;6682:5;6667:21;:::i;:::-;6660:5;6657:32;6647:60;;6703:1;6700;6693:12;6647:60;6597:116;:::o;6719:137::-;6773:5;6804:6;6798:13;6789:22;;6820:30;6844:5;6820:30;:::i;:::-;6719:137;;;;:::o;6862:345::-;6929:6;6978:2;6966:9;6957:7;6953:23;6949:32;6946:119;;;6984:79;;:::i;:::-;6946:119;7104:1;7129:61;7182:7;7173:6;7162:9;7158:22;7129:61;:::i;:::-;7119:71;;7075:125;6862:345;;;;:::o;7213:229::-;7353:34;7349:1;7341:6;7337:14;7330:58;7422:12;7417:2;7409:6;7405:15;7398:37;7213:229;:::o;7448:366::-;7590:3;7611:67;7675:2;7670:3;7611:67;:::i;:::-;7604:74;;7687:93;7776:3;7687:93;:::i;:::-;7805:2;7800:3;7796:12;7789:19;;7448:366;;;:::o;7820:419::-;7986:4;8024:2;8013:9;8009:18;8001:26;;8073:9;8067:4;8063:20;8059:1;8048:9;8044:17;8037:47;8101:131;8227:4;8101:131;:::i;:::-;8093:139;;7820:419;;;:::o;8245:225::-;8385:34;8381:1;8373:6;8369:14;8362:58;8454:8;8449:2;8441:6;8437:15;8430:33;8245:225;:::o;8476:366::-;8618:3;8639:67;8703:2;8698:3;8639:67;:::i;:::-;8632:74;;8715:93;8804:3;8715:93;:::i;:::-;8833:2;8828:3;8824:12;8817:19;;8476:366;;;:::o;8848:419::-;9014:4;9052:2;9041:9;9037:18;9029:26;;9101:9;9095:4;9091:20;9087:1;9076:9;9072:17;9065:47;9129:131;9255:4;9129:131;:::i;:::-;9121:139;;8848:419;;;:::o;9273:98::-;9324:6;9358:5;9352:12;9342:22;;9273:98;;;:::o;9377:147::-;9478:11;9515:3;9500:18;;9377:147;;;;:::o;9530:246::-;9611:1;9621:113;9635:6;9632:1;9629:13;9621:113;;;9720:1;9715:3;9711:11;9705:18;9701:1;9696:3;9692:11;9685:39;9657:2;9654:1;9650:10;9645:15;;9621:113;;;9768:1;9759:6;9754:3;9750:16;9743:27;9592:184;9530:246;;;:::o;9782:386::-;9886:3;9914:38;9946:5;9914:38;:::i;:::-;9968:88;10049:6;10044:3;9968:88;:::i;:::-;9961:95;;10065:65;10123:6;10118:3;10111:4;10104:5;10100:16;10065:65;:::i;:::-;10155:6;10150:3;10146:16;10139:23;;9890:278;9782:386;;;;:::o;10174:271::-;10304:3;10326:93;10415:3;10406:6;10326:93;:::i;:::-;10319:100;;10436:3;10429:10;;10174:271;;;;:::o;10451:179::-;10591:31;10587:1;10579:6;10575:14;10568:55;10451:179;:::o;10636:366::-;10778:3;10799:67;10863:2;10858:3;10799:67;:::i;:::-;10792:74;;10875:93;10964:3;10875:93;:::i;:::-;10993:2;10988:3;10984:12;10977:19;;10636:366;;;:::o;11008:419::-;11174:4;11212:2;11201:9;11197:18;11189:26;;11261:9;11255:4;11251:20;11247:1;11236:9;11232:17;11225:47;11289:131;11415:4;11289:131;:::i;:::-;11281:139;;11008:419;;;:::o;11433:99::-;11485:6;11519:5;11513:12;11503:22;;11433:99;;;:::o;11538:102::-;11579:6;11630:2;11626:7;11621:2;11614:5;11610:14;11606:28;11596:38;;11538:102;;;:::o;11646:377::-;11734:3;11762:39;11795:5;11762:39;:::i;:::-;11817:71;11881:6;11876:3;11817:71;:::i;:::-;11810:78;;11897:65;11955:6;11950:3;11943:4;11936:5;11932:16;11897:65;:::i;:::-;11987:29;12009:6;11987:29;:::i;:::-;11982:3;11978:39;11971:46;;11738:285;11646:377;;;;:::o;12029:313::-;12142:4;12180:2;12169:9;12165:18;12157:26;;12229:9;12223:4;12219:20;12215:1;12204:9;12200:17;12193:47;12257:78;12330:4;12321:6;12257:78;:::i;:::-;12249:86;;12029:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "689200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"stake(uint256)": "infinite",
								"stakeAmount()": "2407",
								"unStake()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 187,
									"end": 1210,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 187,
									"end": 1210,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 187,
									"end": 1210,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 415,
									"end": 648,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 415,
									"end": 648,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 415,
									"end": 648,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 415,
									"end": 648,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 415,
									"end": 648,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 415,
									"end": 648,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 415,
									"end": 648,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 415,
									"end": 648,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 415,
									"end": 648,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 415,
									"end": 648,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 415,
									"end": 648,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 415,
									"end": 648,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 415,
									"end": 648,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 415,
									"end": 648,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 415,
									"end": 648,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 415,
									"end": 648,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 415,
									"end": 648,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 415,
									"end": 648,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 415,
									"end": 648,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 415,
									"end": 648,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 415,
									"end": 648,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 415,
									"end": 648,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 415,
									"end": 648,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 415,
									"end": 648,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 415,
									"end": 648,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 415,
									"end": 648,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 415,
									"end": 648,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 415,
									"end": 648,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 415,
									"end": 648,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 415,
									"end": 648,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 415,
									"end": 648,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 415,
									"end": 648,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 415,
									"end": 648,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 415,
									"end": 648,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 415,
									"end": 648,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 512,
									"end": 524,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 497,
									"end": 502,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 497,
									"end": 502,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 497,
									"end": 525,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 497,
									"end": 525,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 497,
									"end": 525,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 497,
									"end": 525,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 497,
									"end": 525,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 497,
									"end": 525,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 497,
									"end": 525,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 497,
									"end": 525,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 497,
									"end": 525,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 497,
									"end": 525,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 497,
									"end": 525,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 497,
									"end": 525,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 497,
									"end": 525,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 497,
									"end": 525,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 497,
									"end": 525,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 497,
									"end": 525,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 497,
									"end": 525,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 497,
									"end": 525,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 557,
									"end": 565,
									"name": "PUSH",
									"source": 4,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 549,
									"end": 554,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 549,
									"end": 565,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 549,
									"end": 565,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 549,
									"end": 565,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 549,
									"end": 565,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 549,
									"end": 565,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 549,
									"end": 565,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 549,
									"end": 565,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 535,
									"end": 546,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 535,
									"end": 565,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 535,
									"end": 565,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 535,
									"end": 565,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 535,
									"end": 565,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 575,
									"end": 641,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 611,
									"end": 615,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 617,
									"end": 640,
									"name": "PUSH",
									"source": 4,
									"value": "1431E0FAE6D7217CAA0000000"
								},
								{
									"begin": 575,
									"end": 580,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 575,
									"end": 580,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 575,
									"end": 580,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 575,
									"end": 580,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 575,
									"end": 580,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 575,
									"end": 580,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 575,
									"end": 580,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 575,
									"end": 580,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 575,
									"end": 580,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 575,
									"end": 580,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 575,
									"end": 602,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 575,
									"end": 602,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 575,
									"end": 602,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 575,
									"end": 602,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 575,
									"end": 602,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 575,
									"end": 602,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18446744073709551637"
								},
								{
									"begin": 575,
									"end": 602,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 575,
									"end": 602,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 575,
									"end": 641,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 575,
									"end": 641,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 575,
									"end": 641,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 575,
									"end": 641,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 575,
									"end": 641,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 575,
									"end": 641,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 575,
									"end": 641,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 575,
									"end": 641,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 415,
									"end": 648,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 415,
									"end": 648,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1210,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 187,
									"end": 1210,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2084,
									"end": 2394,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 2084,
									"end": 2394,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2210,
									"end": 2230,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2275,
									"end": 2280,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2238,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2248,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2233,
									"end": 2248,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2248,
									"name": "PUSH",
									"source": 2,
									"value": "DD62ED3E"
								},
								{
									"begin": 2257,
									"end": 2261,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 2264,
									"end": 2271,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFF"
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "PUSH",
									"source": 2,
									"value": "E0"
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 2233,
									"end": 2272,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "GAS",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "STATICCALL",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "RETURNDATACOPY",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 2233,
									"end": 2272,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 2233,
									"end": 2272,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2280,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 2233,
									"end": 2280,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2280,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2280,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 2233,
									"end": 2280,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2233,
									"end": 2280,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 2233,
									"end": 2280,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2210,
									"end": 2280,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2210,
									"end": 2280,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2290,
									"end": 2387,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2310,
									"end": 2315,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2340,
									"end": 2362,
									"name": "PUSH",
									"source": 2,
									"value": "95EA7B3"
								},
								{
									"begin": 2340,
									"end": 2362,
									"name": "PUSH",
									"source": 2,
									"value": "E0"
								},
								{
									"begin": 2340,
									"end": 2362,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 2364,
									"end": 2371,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 2373,
									"end": 2385,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 2317,
									"end": 2386,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2317,
									"end": 2386,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2290,
									"end": 2309,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 2290,
									"end": 2309,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2290,
									"end": 2309,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 2290,
									"end": 2387,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2290,
									"end": 2387,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 2290,
									"end": 2387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2290,
									"end": 2387,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2290,
									"end": 2387,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2200,
									"end": 2394,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2084,
									"end": 2394,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2084,
									"end": 2394,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2084,
									"end": 2394,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2084,
									"end": 2394,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3747,
									"end": 4453,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 3747,
									"end": 4453,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4166,
									"end": 4189,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4192,
									"end": 4261,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 4220,
									"end": 4224,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4192,
									"end": 4261,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 4192,
									"end": 4261,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 4192,
									"end": 4261,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4192,
									"end": 4261,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 4192,
									"end": 4261,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4192,
									"end": 4261,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 4192,
									"end": 4261,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4192,
									"end": 4261,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4192,
									"end": 4261,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4192,
									"end": 4261,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4192,
									"end": 4261,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4192,
									"end": 4261,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4192,
									"end": 4261,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4192,
									"end": 4261,
									"name": "PUSH",
									"source": 2,
									"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
								},
								{
									"begin": 4192,
									"end": 4261,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4192,
									"end": 4261,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4192,
									"end": 4261,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4200,
									"end": 4205,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 4192,
									"end": 4219,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4192,
									"end": 4219,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4192,
									"end": 4219,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 4192,
									"end": 4219,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4192,
									"end": 4219,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 4192,
									"end": 4219,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18446744073709551638"
								},
								{
									"begin": 4192,
									"end": 4219,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 4192,
									"end": 4219,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4192,
									"end": 4261,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 4192,
									"end": 4261,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4192,
									"end": 4261,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4192,
									"end": 4261,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4192,
									"end": 4261,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 4192,
									"end": 4261,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4192,
									"end": 4261,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 4192,
									"end": 4261,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4166,
									"end": 4261,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4166,
									"end": 4261,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4295,
									"end": 4296,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4275,
									"end": 4285,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4275,
									"end": 4292,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 4275,
									"end": 4296,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 4271,
									"end": 4447,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 4271,
									"end": 4447,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 4271,
									"end": 4447,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 4370,
									"end": 4380,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4359,
									"end": 4389,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4359,
									"end": 4389,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4359,
									"end": 4389,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4359,
									"end": 4389,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4359,
									"end": 4389,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 4359,
									"end": 4389,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4359,
									"end": 4389,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4359,
									"end": 4389,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4359,
									"end": 4389,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 4359,
									"end": 4389,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4359,
									"end": 4389,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4359,
									"end": 4389,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 4359,
									"end": 4389,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4359,
									"end": 4389,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 4359,
									"end": 4389,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4351,
									"end": 4436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 4351,
									"end": 4436,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 4351,
									"end": 4436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 4351,
									"end": 4436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 4351,
									"end": 4436,
									"name": "PUSH",
									"source": 2,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4351,
									"end": 4436,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4351,
									"end": 4436,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4351,
									"end": 4436,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 4351,
									"end": 4436,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4351,
									"end": 4436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 4351,
									"end": 4436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4351,
									"end": 4436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 4351,
									"end": 4436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4351,
									"end": 4436,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 4351,
									"end": 4436,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4351,
									"end": 4436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 4351,
									"end": 4436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 4351,
									"end": 4436,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4351,
									"end": 4436,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4351,
									"end": 4436,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 4351,
									"end": 4436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4351,
									"end": 4436,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 4351,
									"end": 4436,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 4351,
									"end": 4436,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4271,
									"end": 4447,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 4271,
									"end": 4447,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3817,
									"end": 4453,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3747,
									"end": 4453,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3747,
									"end": 4453,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3747,
									"end": 4453,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3873,
									"end": 4096,
									"name": "tag",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 3873,
									"end": 4096,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4006,
									"end": 4018,
									"name": "PUSH",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 4037,
									"end": 4089,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 4059,
									"end": 4065,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 4067,
									"end": 4071,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 4073,
									"end": 4074,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4076,
									"end": 4088,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 4037,
									"end": 4058,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 4037,
									"end": 4058,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4037,
									"end": 4058,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 4037,
									"end": 4089,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4037,
									"end": 4089,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 4037,
									"end": 4089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4037,
									"end": 4089,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 4037,
									"end": 4089,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4030,
									"end": 4089,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4030,
									"end": 4089,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3873,
									"end": 4096,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 3873,
									"end": 4096,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 3873,
									"end": 4096,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3873,
									"end": 4096,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3873,
									"end": 4096,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3873,
									"end": 4096,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4960,
									"end": 5406,
									"name": "tag",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 4960,
									"end": 5406,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5125,
									"end": 5137,
									"name": "PUSH",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 5182,
									"end": 5187,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5157,
									"end": 5178,
									"name": "SELFBALANCE",
									"source": 3
								},
								{
									"begin": 5157,
									"end": 5187,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 5157,
									"end": 5187,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 5149,
									"end": 5230,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 5149,
									"end": 5230,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 5149,
									"end": 5230,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5149,
									"end": 5230,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5149,
									"end": 5230,
									"name": "PUSH",
									"source": 3,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5149,
									"end": 5230,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5149,
									"end": 5230,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 5149,
									"end": 5230,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 5149,
									"end": 5230,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5149,
									"end": 5230,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 5149,
									"end": 5230,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5149,
									"end": 5230,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 5149,
									"end": 5230,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5149,
									"end": 5230,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 5149,
									"end": 5230,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5149,
									"end": 5230,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5149,
									"end": 5230,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5149,
									"end": 5230,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5149,
									"end": 5230,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5149,
									"end": 5230,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 5149,
									"end": 5230,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5149,
									"end": 5230,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 5149,
									"end": 5230,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 5149,
									"end": 5230,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5241,
									"end": 5253,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5255,
									"end": 5278,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5288,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5293,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5282,
									"end": 5293,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 5301,
									"end": 5306,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 5308,
									"end": 5312,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 5282,
									"end": 5313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "tag",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "GAS",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "CALL",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "PUSH",
									"source": 3,
									"value": "3F"
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "RETURNDATACOPY",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "tag",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "PUSH",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "tag",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5282,
									"end": 5313,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5313,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5313,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5313,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5313,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5330,
									"end": 5399,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "45"
								},
								{
									"begin": 5357,
									"end": 5363,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 5365,
									"end": 5372,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 5374,
									"end": 5384,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 5386,
									"end": 5398,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 5330,
									"end": 5356,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "46"
								},
								{
									"begin": 5330,
									"end": 5356,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5330,
									"end": 5356,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 5330,
									"end": 5399,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5330,
									"end": 5399,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 5330,
									"end": 5399,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5330,
									"end": 5399,
									"name": "tag",
									"source": 3,
									"value": "45"
								},
								{
									"begin": 5330,
									"end": 5399,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5323,
									"end": 5399,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 5323,
									"end": 5399,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5323,
									"end": 5399,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5323,
									"end": 5399,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4960,
									"end": 5406,
									"name": "SWAP5",
									"source": 3
								},
								{
									"begin": 4960,
									"end": 5406,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 4960,
									"end": 5406,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4960,
									"end": 5406,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4960,
									"end": 5406,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4960,
									"end": 5406,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4960,
									"end": 5406,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7466,
									"end": 8094,
									"name": "tag",
									"source": 3,
									"value": "46"
								},
								{
									"begin": 7466,
									"end": 8094,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7646,
									"end": 7658,
									"name": "PUSH",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 7674,
									"end": 7681,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7670,
									"end": 8088,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 7670,
									"end": 8088,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "48"
								},
								{
									"begin": 7670,
									"end": 8088,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7722,
									"end": 7723,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7701,
									"end": 7711,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7701,
									"end": 7718,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7701,
									"end": 7723,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7697,
									"end": 7983,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 7697,
									"end": 7983,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7916,
									"end": 7934,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "50"
								},
								{
									"begin": 7927,
									"end": 7933,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 7916,
									"end": 7926,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "51"
								},
								{
									"begin": 7916,
									"end": 7926,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7916,
									"end": 7926,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 7916,
									"end": 7934,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7916,
									"end": 7934,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 7916,
									"end": 7934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7916,
									"end": 7934,
									"name": "tag",
									"source": 3,
									"value": "50"
								},
								{
									"begin": 7916,
									"end": 7934,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7908,
									"end": 7968,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "52"
								},
								{
									"begin": 7908,
									"end": 7968,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7908,
									"end": 7968,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7908,
									"end": 7968,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7908,
									"end": 7968,
									"name": "PUSH",
									"source": 3,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7908,
									"end": 7968,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7908,
									"end": 7968,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7908,
									"end": 7968,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7908,
									"end": 7968,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7908,
									"end": 7968,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "53"
								},
								{
									"begin": 7908,
									"end": 7968,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7908,
									"end": 7968,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "54"
								},
								{
									"begin": 7908,
									"end": 7968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7908,
									"end": 7968,
									"name": "tag",
									"source": 3,
									"value": "53"
								},
								{
									"begin": 7908,
									"end": 7968,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7908,
									"end": 7968,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7908,
									"end": 7968,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7908,
									"end": 7968,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7908,
									"end": 7968,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7908,
									"end": 7968,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7908,
									"end": 7968,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7908,
									"end": 7968,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 7908,
									"end": 7968,
									"name": "tag",
									"source": 3,
									"value": "52"
								},
								{
									"begin": 7908,
									"end": 7968,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7697,
									"end": 7983,
									"name": "tag",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 7697,
									"end": 7983,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 8003,
									"end": 8013,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7996,
									"end": 8013,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7996,
									"end": 8013,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7996,
									"end": 8013,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "47"
								},
								{
									"begin": 7996,
									"end": 8013,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7670,
									"end": 8088,
									"name": "tag",
									"source": 3,
									"value": "48"
								},
								{
									"begin": 7670,
									"end": 8088,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 8044,
									"end": 8077,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "56"
								},
								{
									"begin": 8052,
									"end": 8062,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 8064,
									"end": 8076,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 8044,
									"end": 8051,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "57"
								},
								{
									"begin": 8044,
									"end": 8051,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 8044,
									"end": 8051,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 8044,
									"end": 8077,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 8044,
									"end": 8077,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 8044,
									"end": 8077,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 8044,
									"end": 8077,
									"name": "tag",
									"source": 3,
									"value": "56"
								},
								{
									"begin": 8044,
									"end": 8077,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7466,
									"end": 8094,
									"name": "tag",
									"source": 3,
									"value": "47"
								},
								{
									"begin": 7466,
									"end": 8094,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7466,
									"end": 8094,
									"name": "SWAP5",
									"source": 3
								},
								{
									"begin": 7466,
									"end": 8094,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 7466,
									"end": 8094,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7466,
									"end": 8094,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7466,
									"end": 8094,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7466,
									"end": 8094,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7466,
									"end": 8094,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1175,
									"end": 1495,
									"name": "tag",
									"source": 3,
									"value": "51"
								},
								{
									"begin": 1175,
									"end": 1495,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1235,
									"end": 1239,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1487,
									"end": 1488,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1465,
									"end": 1472,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1465,
									"end": 1484,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1465,
									"end": 1484,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1465,
									"end": 1484,
									"name": "EXTCODESIZE",
									"source": 3
								},
								{
									"begin": 1465,
									"end": 1488,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1458,
									"end": 1488,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1458,
									"end": 1488,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1175,
									"end": 1495,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1175,
									"end": 1495,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1175,
									"end": 1495,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1175,
									"end": 1495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 8616,
									"end": 9156,
									"name": "tag",
									"source": 3,
									"value": "57"
								},
								{
									"begin": 8616,
									"end": 9156,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 8795,
									"end": 8796,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 8775,
									"end": 8785,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 8775,
									"end": 8792,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 8775,
									"end": 8796,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 8771,
									"end": 9150,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 8771,
									"end": 9150,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 8771,
									"end": 9150,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 9003,
									"end": 9013,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 8997,
									"end": 9014,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 9059,
									"end": 9074,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 9046,
									"end": 9056,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 9042,
									"end": 9044,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 9038,
									"end": 9057,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 9031,
									"end": 9075,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 8771,
									"end": 9150,
									"name": "tag",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 8771,
									"end": 9150,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 9126,
									"end": 9138,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 9119,
									"end": 9139,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 9119,
									"end": 9139,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 9119,
									"end": 9139,
									"name": "PUSH",
									"source": 3,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9119,
									"end": 9139,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 9119,
									"end": 9139,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 9119,
									"end": 9139,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 9119,
									"end": 9139,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 9119,
									"end": 9139,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "62"
								},
								{
									"begin": 9119,
									"end": 9139,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 9119,
									"end": 9139,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 9119,
									"end": 9139,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "63"
								},
								{
									"begin": 9119,
									"end": 9139,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 9119,
									"end": 9139,
									"name": "tag",
									"source": 3,
									"value": "62"
								},
								{
									"begin": 9119,
									"end": 9139,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 9119,
									"end": 9139,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 9119,
									"end": 9139,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 9119,
									"end": 9139,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 9119,
									"end": 9139,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 9119,
									"end": 9139,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 9119,
									"end": 9139,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 9119,
									"end": 9139,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "67"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "67"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 5,
									"value": "69"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "102"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 5,
									"value": "102"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "103"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 5,
									"value": "103"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 5,
									"value": "70"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "105"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "69"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 5,
									"value": "105"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 5,
									"value": "71"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 5,
									"value": "72"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "108"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "71"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 5,
									"value": "108"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "109"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 5,
									"value": "109"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "111"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "72"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 5,
									"value": "111"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1284,
									"end": 1290,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1292,
									"end": 1298,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1341,
									"end": 1343,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1329,
									"end": 1338,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1320,
									"end": 1327,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1316,
									"end": 1339,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1312,
									"end": 1344,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "113"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "114"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 1347,
									"end": 1426,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "tag",
									"source": 5,
									"value": "114"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "tag",
									"source": 5,
									"value": "113"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1467,
									"end": 1468,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "115"
								},
								{
									"begin": 1548,
									"end": 1555,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1539,
									"end": 1545,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1528,
									"end": 1537,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1524,
									"end": 1546,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "70"
								},
								{
									"begin": 1492,
									"end": 1556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "tag",
									"source": 5,
									"value": "115"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1438,
									"end": 1566,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1605,
									"end": 1607,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "116"
								},
								{
									"begin": 1687,
									"end": 1694,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1678,
									"end": 1684,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1676,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1663,
									"end": 1685,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 1631,
									"end": 1695,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "tag",
									"source": 5,
									"value": "116"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1576,
									"end": 1705,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1712,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1718,
									"end": 1898,
									"name": "tag",
									"source": 5,
									"value": "74"
								},
								{
									"begin": 1718,
									"end": 1898,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1766,
									"end": 1843,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1763,
									"end": 1764,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1756,
									"end": 1844,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1863,
									"end": 1867,
									"name": "PUSH",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1860,
									"end": 1861,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1853,
									"end": 1868,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1887,
									"end": 1891,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1884,
									"end": 1885,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1877,
									"end": 1892,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1904,
									"end": 2314,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1904,
									"end": 2314,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1944,
									"end": 1951,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1967,
									"end": 1987,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "119"
								},
								{
									"begin": 1985,
									"end": 1986,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1967,
									"end": 1987,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "71"
								},
								{
									"begin": 1967,
									"end": 1987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1967,
									"end": 1987,
									"name": "tag",
									"source": 5,
									"value": "119"
								},
								{
									"begin": 1967,
									"end": 1987,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1962,
									"end": 1987,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1962,
									"end": 1987,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2001,
									"end": 2021,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "120"
								},
								{
									"begin": 2019,
									"end": 2020,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2001,
									"end": 2021,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "71"
								},
								{
									"begin": 2001,
									"end": 2021,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2001,
									"end": 2021,
									"name": "tag",
									"source": 5,
									"value": "120"
								},
								{
									"begin": 2001,
									"end": 2021,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1996,
									"end": 2021,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1996,
									"end": 2021,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2056,
									"end": 2057,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2054,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2049,
									"end": 2058,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 2078,
									"end": 2108,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "121"
								},
								{
									"begin": 2096,
									"end": 2107,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2078,
									"end": 2108,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "71"
								},
								{
									"begin": 2078,
									"end": 2108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2078,
									"end": 2108,
									"name": "tag",
									"source": 5,
									"value": "121"
								},
								{
									"begin": 2078,
									"end": 2108,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2067,
									"end": 2108,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2067,
									"end": 2108,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2257,
									"end": 2258,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2248,
									"end": 2255,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2244,
									"end": 2259,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 2241,
									"end": 2242,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2238,
									"end": 2260,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 2218,
									"end": 2219,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2211,
									"end": 2220,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2191,
									"end": 2274,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 2168,
									"end": 2307,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "122"
								},
								{
									"begin": 2168,
									"end": 2307,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2287,
									"end": 2305,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "123"
								},
								{
									"begin": 2287,
									"end": 2305,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "74"
								},
								{
									"begin": 2287,
									"end": 2305,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2287,
									"end": 2305,
									"name": "tag",
									"source": 5,
									"value": "123"
								},
								{
									"begin": 2287,
									"end": 2305,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2168,
									"end": 2307,
									"name": "tag",
									"source": 5,
									"value": "122"
								},
								{
									"begin": 2168,
									"end": 2307,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1952,
									"end": 2314,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1904,
									"end": 2314,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1904,
									"end": 2314,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1904,
									"end": 2314,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1904,
									"end": 2314,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1904,
									"end": 2314,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2320,
									"end": 2438,
									"name": "tag",
									"source": 5,
									"value": "75"
								},
								{
									"begin": 2320,
									"end": 2438,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2407,
									"end": 2431,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "125"
								},
								{
									"begin": 2425,
									"end": 2430,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2407,
									"end": 2431,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 2407,
									"end": 2431,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2407,
									"end": 2431,
									"name": "tag",
									"source": 5,
									"value": "125"
								},
								{
									"begin": 2407,
									"end": 2431,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2402,
									"end": 2405,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2395,
									"end": 2432,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2320,
									"end": 2438,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2320,
									"end": 2438,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2320,
									"end": 2438,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2444,
									"end": 2776,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 2444,
									"end": 2776,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2565,
									"end": 2569,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2603,
									"end": 2605,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2592,
									"end": 2601,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2588,
									"end": 2606,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2580,
									"end": 2606,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2580,
									"end": 2606,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2616,
									"end": 2687,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "127"
								},
								{
									"begin": 2684,
									"end": 2685,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2673,
									"end": 2682,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2669,
									"end": 2686,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2660,
									"end": 2666,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2616,
									"end": 2687,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "75"
								},
								{
									"begin": 2616,
									"end": 2687,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2616,
									"end": 2687,
									"name": "tag",
									"source": 5,
									"value": "127"
								},
								{
									"begin": 2616,
									"end": 2687,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2697,
									"end": 2769,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "128"
								},
								{
									"begin": 2765,
									"end": 2767,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2754,
									"end": 2763,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2750,
									"end": 2768,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2741,
									"end": 2747,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2697,
									"end": 2769,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "75"
								},
								{
									"begin": 2697,
									"end": 2769,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2697,
									"end": 2769,
									"name": "tag",
									"source": 5,
									"value": "128"
								},
								{
									"begin": 2697,
									"end": 2769,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2444,
									"end": 2776,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 2444,
									"end": 2776,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2444,
									"end": 2776,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2444,
									"end": 2776,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2444,
									"end": 2776,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2444,
									"end": 2776,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2782,
									"end": 3133,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 2782,
									"end": 3133,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2852,
									"end": 2858,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2901,
									"end": 2903,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2889,
									"end": 2898,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2880,
									"end": 2887,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2876,
									"end": 2899,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 2872,
									"end": 2904,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 2869,
									"end": 2988,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2869,
									"end": 2988,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "130"
								},
								{
									"begin": 2869,
									"end": 2988,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2907,
									"end": 2986,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "131"
								},
								{
									"begin": 2907,
									"end": 2986,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 2907,
									"end": 2986,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2907,
									"end": 2986,
									"name": "tag",
									"source": 5,
									"value": "131"
								},
								{
									"begin": 2907,
									"end": 2986,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2869,
									"end": 2988,
									"name": "tag",
									"source": 5,
									"value": "130"
								},
								{
									"begin": 2869,
									"end": 2988,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3027,
									"end": 3028,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3052,
									"end": 3116,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "132"
								},
								{
									"begin": 3108,
									"end": 3115,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3088,
									"end": 3097,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3084,
									"end": 3106,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3052,
									"end": 3116,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 3052,
									"end": 3116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3052,
									"end": 3116,
									"name": "tag",
									"source": 5,
									"value": "132"
								},
								{
									"begin": 3052,
									"end": 3116,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3042,
									"end": 3116,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3042,
									"end": 3116,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2998,
									"end": 3126,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2782,
									"end": 3133,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2782,
									"end": 3133,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2782,
									"end": 3133,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2782,
									"end": 3133,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2782,
									"end": 3133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3139,
									"end": 3330,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 3139,
									"end": 3330,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3179,
									"end": 3182,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3198,
									"end": 3218,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "134"
								},
								{
									"begin": 3216,
									"end": 3217,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3198,
									"end": 3218,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "71"
								},
								{
									"begin": 3198,
									"end": 3218,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3198,
									"end": 3218,
									"name": "tag",
									"source": 5,
									"value": "134"
								},
								{
									"begin": 3198,
									"end": 3218,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3193,
									"end": 3218,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3193,
									"end": 3218,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3232,
									"end": 3252,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "135"
								},
								{
									"begin": 3250,
									"end": 3251,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3232,
									"end": 3252,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "71"
								},
								{
									"begin": 3232,
									"end": 3252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3232,
									"end": 3252,
									"name": "tag",
									"source": 5,
									"value": "135"
								},
								{
									"begin": 3232,
									"end": 3252,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3227,
									"end": 3252,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 3227,
									"end": 3252,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3275,
									"end": 3276,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3272,
									"end": 3273,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3268,
									"end": 3277,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3261,
									"end": 3277,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3261,
									"end": 3277,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3296,
									"end": 3299,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3293,
									"end": 3294,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3290,
									"end": 3300,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 3287,
									"end": 3323,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3287,
									"end": 3323,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "136"
								},
								{
									"begin": 3287,
									"end": 3323,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3303,
									"end": 3321,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "137"
								},
								{
									"begin": 3303,
									"end": 3321,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "74"
								},
								{
									"begin": 3303,
									"end": 3321,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3303,
									"end": 3321,
									"name": "tag",
									"source": 5,
									"value": "137"
								},
								{
									"begin": 3303,
									"end": 3321,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3287,
									"end": 3323,
									"name": "tag",
									"source": 5,
									"value": "136"
								},
								{
									"begin": 3287,
									"end": 3323,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3139,
									"end": 3330,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 3139,
									"end": 3330,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3139,
									"end": 3330,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3139,
									"end": 3330,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3139,
									"end": 3330,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3336,
									"end": 3454,
									"name": "tag",
									"source": 5,
									"value": "76"
								},
								{
									"begin": 3336,
									"end": 3454,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3423,
									"end": 3447,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "139"
								},
								{
									"begin": 3441,
									"end": 3446,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3423,
									"end": 3447,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "71"
								},
								{
									"begin": 3423,
									"end": 3447,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3423,
									"end": 3447,
									"name": "tag",
									"source": 5,
									"value": "139"
								},
								{
									"begin": 3423,
									"end": 3447,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3418,
									"end": 3421,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3411,
									"end": 3448,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3336,
									"end": 3454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3336,
									"end": 3454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3336,
									"end": 3454,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3460,
									"end": 3792,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 3460,
									"end": 3792,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3581,
									"end": 3585,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3619,
									"end": 3621,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 3608,
									"end": 3617,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3604,
									"end": 3622,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3596,
									"end": 3622,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3596,
									"end": 3622,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3632,
									"end": 3703,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "141"
								},
								{
									"begin": 3700,
									"end": 3701,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3689,
									"end": 3698,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3685,
									"end": 3702,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3676,
									"end": 3682,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3632,
									"end": 3703,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "75"
								},
								{
									"begin": 3632,
									"end": 3703,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3632,
									"end": 3703,
									"name": "tag",
									"source": 5,
									"value": "141"
								},
								{
									"begin": 3632,
									"end": 3703,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3713,
									"end": 3785,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "142"
								},
								{
									"begin": 3781,
									"end": 3783,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3770,
									"end": 3779,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3766,
									"end": 3784,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3757,
									"end": 3763,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3713,
									"end": 3785,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "76"
								},
								{
									"begin": 3713,
									"end": 3785,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3713,
									"end": 3785,
									"name": "tag",
									"source": 5,
									"value": "142"
								},
								{
									"begin": 3713,
									"end": 3785,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3460,
									"end": 3792,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 3460,
									"end": 3792,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 3460,
									"end": 3792,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3460,
									"end": 3792,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3460,
									"end": 3792,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3460,
									"end": 3792,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3798,
									"end": 3888,
									"name": "tag",
									"source": 5,
									"value": "77"
								},
								{
									"begin": 3798,
									"end": 3888,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3832,
									"end": 3839,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3875,
									"end": 3880,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3868,
									"end": 3881,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3861,
									"end": 3882,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3850,
									"end": 3882,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3850,
									"end": 3882,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3798,
									"end": 3888,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3798,
									"end": 3888,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3798,
									"end": 3888,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3798,
									"end": 3888,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3894,
									"end": 4010,
									"name": "tag",
									"source": 5,
									"value": "78"
								},
								{
									"begin": 3894,
									"end": 4010,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3964,
									"end": 3985,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "145"
								},
								{
									"begin": 3979,
									"end": 3984,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3964,
									"end": 3985,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "77"
								},
								{
									"begin": 3964,
									"end": 3985,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3964,
									"end": 3985,
									"name": "tag",
									"source": 5,
									"value": "145"
								},
								{
									"begin": 3964,
									"end": 3985,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3957,
									"end": 3962,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3954,
									"end": 3986,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 3944,
									"end": 4004,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "146"
								},
								{
									"begin": 3944,
									"end": 4004,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4000,
									"end": 4001,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3997,
									"end": 3998,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3990,
									"end": 4002,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 3944,
									"end": 4004,
									"name": "tag",
									"source": 5,
									"value": "146"
								},
								{
									"begin": 3944,
									"end": 4004,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3894,
									"end": 4010,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3894,
									"end": 4010,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4016,
									"end": 4153,
									"name": "tag",
									"source": 5,
									"value": "79"
								},
								{
									"begin": 4016,
									"end": 4153,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4070,
									"end": 4075,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4101,
									"end": 4107,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4095,
									"end": 4108,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 4086,
									"end": 4108,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4086,
									"end": 4108,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4117,
									"end": 4147,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "148"
								},
								{
									"begin": 4141,
									"end": 4146,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4117,
									"end": 4147,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "78"
								},
								{
									"begin": 4117,
									"end": 4147,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4117,
									"end": 4147,
									"name": "tag",
									"source": 5,
									"value": "148"
								},
								{
									"begin": 4117,
									"end": 4147,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4016,
									"end": 4153,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 4016,
									"end": 4153,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4016,
									"end": 4153,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4016,
									"end": 4153,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4016,
									"end": 4153,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4159,
									"end": 4504,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 4159,
									"end": 4504,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4226,
									"end": 4232,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4275,
									"end": 4277,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4263,
									"end": 4272,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4254,
									"end": 4261,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4250,
									"end": 4273,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 4246,
									"end": 4278,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 4243,
									"end": 4362,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4243,
									"end": 4362,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "150"
								},
								{
									"begin": 4243,
									"end": 4362,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4281,
									"end": 4360,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "151"
								},
								{
									"begin": 4281,
									"end": 4360,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 4281,
									"end": 4360,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4281,
									"end": 4360,
									"name": "tag",
									"source": 5,
									"value": "151"
								},
								{
									"begin": 4281,
									"end": 4360,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4243,
									"end": 4362,
									"name": "tag",
									"source": 5,
									"value": "150"
								},
								{
									"begin": 4243,
									"end": 4362,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4401,
									"end": 4402,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4426,
									"end": 4487,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "152"
								},
								{
									"begin": 4479,
									"end": 4486,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4470,
									"end": 4476,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4459,
									"end": 4468,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 4455,
									"end": 4477,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4426,
									"end": 4487,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "79"
								},
								{
									"begin": 4426,
									"end": 4487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4426,
									"end": 4487,
									"name": "tag",
									"source": 5,
									"value": "152"
								},
								{
									"begin": 4426,
									"end": 4487,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4416,
									"end": 4487,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4416,
									"end": 4487,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4372,
									"end": 4497,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4159,
									"end": 4504,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 4159,
									"end": 4504,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4159,
									"end": 4504,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4159,
									"end": 4504,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4159,
									"end": 4504,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4510,
									"end": 4679,
									"name": "tag",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 4510,
									"end": 4679,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4594,
									"end": 4605,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4628,
									"end": 4634,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4623,
									"end": 4626,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4616,
									"end": 4635,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4668,
									"end": 4672,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4663,
									"end": 4666,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4659,
									"end": 4673,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4644,
									"end": 4673,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4644,
									"end": 4673,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4510,
									"end": 4679,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 4510,
									"end": 4679,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4510,
									"end": 4679,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4510,
									"end": 4679,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4510,
									"end": 4679,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4685,
									"end": 4914,
									"name": "tag",
									"source": 5,
									"value": "81"
								},
								{
									"begin": 4685,
									"end": 4914,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4825,
									"end": 4859,
									"name": "PUSH",
									"source": 5,
									"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
								},
								{
									"begin": 4821,
									"end": 4822,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4813,
									"end": 4819,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4809,
									"end": 4823,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4802,
									"end": 4860,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4894,
									"end": 4906,
									"name": "PUSH",
									"source": 5,
									"value": "6F74207375636365656400000000000000000000000000000000000000000000"
								},
								{
									"begin": 4889,
									"end": 4891,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4881,
									"end": 4887,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4877,
									"end": 4892,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4870,
									"end": 4907,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4685,
									"end": 4914,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4685,
									"end": 4914,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4920,
									"end": 5286,
									"name": "tag",
									"source": 5,
									"value": "82"
								},
								{
									"begin": 4920,
									"end": 5286,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5062,
									"end": 5065,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5083,
									"end": 5150,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "156"
								},
								{
									"begin": 5147,
									"end": 5149,
									"name": "PUSH",
									"source": 5,
									"value": "2A"
								},
								{
									"begin": 5142,
									"end": 5145,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 5083,
									"end": 5150,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 5083,
									"end": 5150,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5083,
									"end": 5150,
									"name": "tag",
									"source": 5,
									"value": "156"
								},
								{
									"begin": 5083,
									"end": 5150,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5076,
									"end": 5150,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 5076,
									"end": 5150,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5159,
									"end": 5252,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "157"
								},
								{
									"begin": 5248,
									"end": 5251,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5159,
									"end": 5252,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "81"
								},
								{
									"begin": 5159,
									"end": 5252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5159,
									"end": 5252,
									"name": "tag",
									"source": 5,
									"value": "157"
								},
								{
									"begin": 5159,
									"end": 5252,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5277,
									"end": 5279,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 5272,
									"end": 5275,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5268,
									"end": 5280,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5261,
									"end": 5280,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5261,
									"end": 5280,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4920,
									"end": 5286,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4920,
									"end": 5286,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4920,
									"end": 5286,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4920,
									"end": 5286,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5292,
									"end": 5711,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 5292,
									"end": 5711,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5458,
									"end": 5462,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5496,
									"end": 5498,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 5485,
									"end": 5494,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5481,
									"end": 5499,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5473,
									"end": 5499,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5473,
									"end": 5499,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5545,
									"end": 5554,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5539,
									"end": 5543,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5535,
									"end": 5555,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 5531,
									"end": 5532,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5520,
									"end": 5529,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 5516,
									"end": 5533,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5509,
									"end": 5556,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5573,
									"end": 5704,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "159"
								},
								{
									"begin": 5699,
									"end": 5703,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5573,
									"end": 5704,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "82"
								},
								{
									"begin": 5573,
									"end": 5704,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5573,
									"end": 5704,
									"name": "tag",
									"source": 5,
									"value": "159"
								},
								{
									"begin": 5573,
									"end": 5704,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5565,
									"end": 5704,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5565,
									"end": 5704,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5292,
									"end": 5711,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 5292,
									"end": 5711,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5292,
									"end": 5711,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5292,
									"end": 5711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5717,
									"end": 5942,
									"name": "tag",
									"source": 5,
									"value": "83"
								},
								{
									"begin": 5717,
									"end": 5942,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5857,
									"end": 5891,
									"name": "PUSH",
									"source": 5,
									"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
								},
								{
									"begin": 5853,
									"end": 5854,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5845,
									"end": 5851,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5841,
									"end": 5855,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5834,
									"end": 5892,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5926,
									"end": 5934,
									"name": "PUSH",
									"source": 5,
									"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5921,
									"end": 5923,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 5913,
									"end": 5919,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5909,
									"end": 5924,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5902,
									"end": 5935,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5717,
									"end": 5942,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5717,
									"end": 5942,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5948,
									"end": 6314,
									"name": "tag",
									"source": 5,
									"value": "84"
								},
								{
									"begin": 5948,
									"end": 6314,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6090,
									"end": 6093,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6111,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "162"
								},
								{
									"begin": 6175,
									"end": 6177,
									"name": "PUSH",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 6170,
									"end": 6173,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 6111,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 6111,
									"end": 6178,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6111,
									"end": 6178,
									"name": "tag",
									"source": 5,
									"value": "162"
								},
								{
									"begin": 6111,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6104,
									"end": 6178,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 6104,
									"end": 6178,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6187,
									"end": 6280,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "163"
								},
								{
									"begin": 6276,
									"end": 6279,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6187,
									"end": 6280,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "83"
								},
								{
									"begin": 6187,
									"end": 6280,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6187,
									"end": 6280,
									"name": "tag",
									"source": 5,
									"value": "163"
								},
								{
									"begin": 6187,
									"end": 6280,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6305,
									"end": 6307,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 6300,
									"end": 6303,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6296,
									"end": 6308,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6289,
									"end": 6308,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6289,
									"end": 6308,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5948,
									"end": 6314,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 5948,
									"end": 6314,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5948,
									"end": 6314,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5948,
									"end": 6314,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6320,
									"end": 6739,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 6320,
									"end": 6739,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6486,
									"end": 6490,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6524,
									"end": 6526,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 6513,
									"end": 6522,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6509,
									"end": 6527,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6501,
									"end": 6527,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6501,
									"end": 6527,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6573,
									"end": 6582,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6567,
									"end": 6571,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6563,
									"end": 6583,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 6559,
									"end": 6560,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6548,
									"end": 6557,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 6544,
									"end": 6561,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6537,
									"end": 6584,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 6601,
									"end": 6732,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "165"
								},
								{
									"begin": 6727,
									"end": 6731,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6601,
									"end": 6732,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "84"
								},
								{
									"begin": 6601,
									"end": 6732,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6601,
									"end": 6732,
									"name": "tag",
									"source": 5,
									"value": "165"
								},
								{
									"begin": 6601,
									"end": 6732,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6593,
									"end": 6732,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6593,
									"end": 6732,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6320,
									"end": 6739,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 6320,
									"end": 6739,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6320,
									"end": 6739,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6320,
									"end": 6739,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6745,
									"end": 6843,
									"name": "tag",
									"source": 5,
									"value": "85"
								},
								{
									"begin": 6745,
									"end": 6843,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6796,
									"end": 6802,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6830,
									"end": 6835,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6824,
									"end": 6836,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 6814,
									"end": 6836,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6814,
									"end": 6836,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6745,
									"end": 6843,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 6745,
									"end": 6843,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6745,
									"end": 6843,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6745,
									"end": 6843,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6849,
									"end": 6996,
									"name": "tag",
									"source": 5,
									"value": "86"
								},
								{
									"begin": 6849,
									"end": 6996,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6950,
									"end": 6961,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6987,
									"end": 6990,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6972,
									"end": 6990,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6972,
									"end": 6990,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6849,
									"end": 6996,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 6849,
									"end": 6996,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 6849,
									"end": 6996,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6849,
									"end": 6996,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6849,
									"end": 6996,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7002,
									"end": 7248,
									"name": "tag",
									"source": 5,
									"value": "87"
								},
								{
									"begin": 7002,
									"end": 7248,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7083,
									"end": 7084,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7093,
									"end": 7206,
									"name": "tag",
									"source": 5,
									"value": "169"
								},
								{
									"begin": 7093,
									"end": 7206,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7107,
									"end": 7113,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 7104,
									"end": 7105,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7101,
									"end": 7114,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 7093,
									"end": 7206,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 7093,
									"end": 7206,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "171"
								},
								{
									"begin": 7093,
									"end": 7206,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 7192,
									"end": 7193,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 7187,
									"end": 7190,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7183,
									"end": 7194,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 7177,
									"end": 7195,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 7173,
									"end": 7174,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7168,
									"end": 7171,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 7164,
									"end": 7175,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 7157,
									"end": 7196,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 7129,
									"end": 7131,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 7126,
									"end": 7127,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7122,
									"end": 7132,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 7117,
									"end": 7132,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7117,
									"end": 7132,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7093,
									"end": 7206,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "169"
								},
								{
									"begin": 7093,
									"end": 7206,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7093,
									"end": 7206,
									"name": "tag",
									"source": 5,
									"value": "171"
								},
								{
									"begin": 7093,
									"end": 7206,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7240,
									"end": 7241,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7231,
									"end": 7237,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 7226,
									"end": 7229,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 7222,
									"end": 7238,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 7215,
									"end": 7242,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 7064,
									"end": 7248,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7002,
									"end": 7248,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7002,
									"end": 7248,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7002,
									"end": 7248,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7002,
									"end": 7248,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7254,
									"end": 7640,
									"name": "tag",
									"source": 5,
									"value": "88"
								},
								{
									"begin": 7254,
									"end": 7640,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7358,
									"end": 7361,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7386,
									"end": 7424,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "173"
								},
								{
									"begin": 7418,
									"end": 7423,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7386,
									"end": 7424,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "85"
								},
								{
									"begin": 7386,
									"end": 7424,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7386,
									"end": 7424,
									"name": "tag",
									"source": 5,
									"value": "173"
								},
								{
									"begin": 7386,
									"end": 7424,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7440,
									"end": 7528,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "174"
								},
								{
									"begin": 7521,
									"end": 7527,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7516,
									"end": 7519,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 7440,
									"end": 7528,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "86"
								},
								{
									"begin": 7440,
									"end": 7528,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7440,
									"end": 7528,
									"name": "tag",
									"source": 5,
									"value": "174"
								},
								{
									"begin": 7440,
									"end": 7528,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7433,
									"end": 7528,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 7433,
									"end": 7528,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7537,
									"end": 7602,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "175"
								},
								{
									"begin": 7595,
									"end": 7601,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7590,
									"end": 7593,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 7583,
									"end": 7587,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 7576,
									"end": 7581,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 7572,
									"end": 7588,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 7537,
									"end": 7602,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "87"
								},
								{
									"begin": 7537,
									"end": 7602,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7537,
									"end": 7602,
									"name": "tag",
									"source": 5,
									"value": "175"
								},
								{
									"begin": 7537,
									"end": 7602,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7627,
									"end": 7633,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 7622,
									"end": 7625,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 7618,
									"end": 7634,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 7611,
									"end": 7634,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7611,
									"end": 7634,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7362,
									"end": 7640,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7254,
									"end": 7640,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 7254,
									"end": 7640,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7254,
									"end": 7640,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7254,
									"end": 7640,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7254,
									"end": 7640,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7646,
									"end": 7917,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 7646,
									"end": 7917,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7776,
									"end": 7779,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7798,
									"end": 7891,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "177"
								},
								{
									"begin": 7887,
									"end": 7890,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7878,
									"end": 7884,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 7798,
									"end": 7891,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "88"
								},
								{
									"begin": 7798,
									"end": 7891,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7798,
									"end": 7891,
									"name": "tag",
									"source": 5,
									"value": "177"
								},
								{
									"begin": 7798,
									"end": 7891,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7791,
									"end": 7891,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7791,
									"end": 7891,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7908,
									"end": 7911,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7901,
									"end": 7911,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7901,
									"end": 7911,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7646,
									"end": 7917,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 7646,
									"end": 7917,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7646,
									"end": 7917,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7646,
									"end": 7917,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7646,
									"end": 7917,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7923,
									"end": 8102,
									"name": "tag",
									"source": 5,
									"value": "89"
								},
								{
									"begin": 7923,
									"end": 8102,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8063,
									"end": 8094,
									"name": "PUSH",
									"source": 5,
									"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
								},
								{
									"begin": 8059,
									"end": 8060,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 8051,
									"end": 8057,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 8047,
									"end": 8061,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 8040,
									"end": 8095,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 7923,
									"end": 8102,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7923,
									"end": 8102,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 8108,
									"end": 8474,
									"name": "tag",
									"source": 5,
									"value": "90"
								},
								{
									"begin": 8108,
									"end": 8474,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8250,
									"end": 8253,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 8271,
									"end": 8338,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "180"
								},
								{
									"begin": 8335,
									"end": 8337,
									"name": "PUSH",
									"source": 5,
									"value": "1D"
								},
								{
									"begin": 8330,
									"end": 8333,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 8271,
									"end": 8338,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 8271,
									"end": 8338,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 8271,
									"end": 8338,
									"name": "tag",
									"source": 5,
									"value": "180"
								},
								{
									"begin": 8271,
									"end": 8338,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8264,
									"end": 8338,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 8264,
									"end": 8338,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8347,
									"end": 8440,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "181"
								},
								{
									"begin": 8436,
									"end": 8439,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 8347,
									"end": 8440,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "89"
								},
								{
									"begin": 8347,
									"end": 8440,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 8347,
									"end": 8440,
									"name": "tag",
									"source": 5,
									"value": "181"
								},
								{
									"begin": 8347,
									"end": 8440,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8465,
									"end": 8467,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 8460,
									"end": 8463,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 8456,
									"end": 8468,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 8449,
									"end": 8468,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 8449,
									"end": 8468,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8108,
									"end": 8474,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 8108,
									"end": 8474,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 8108,
									"end": 8474,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8108,
									"end": 8474,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 8480,
									"end": 8899,
									"name": "tag",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 8480,
									"end": 8899,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8646,
									"end": 8650,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 8684,
									"end": 8686,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 8673,
									"end": 8682,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 8669,
									"end": 8687,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 8661,
									"end": 8687,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 8661,
									"end": 8687,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8733,
									"end": 8742,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 8727,
									"end": 8731,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 8723,
									"end": 8743,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 8719,
									"end": 8720,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 8708,
									"end": 8717,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 8704,
									"end": 8721,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 8697,
									"end": 8744,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 8761,
									"end": 8892,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "183"
								},
								{
									"begin": 8887,
									"end": 8891,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 8761,
									"end": 8892,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "90"
								},
								{
									"begin": 8761,
									"end": 8892,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 8761,
									"end": 8892,
									"name": "tag",
									"source": 5,
									"value": "183"
								},
								{
									"begin": 8761,
									"end": 8892,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8753,
									"end": 8892,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 8753,
									"end": 8892,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8480,
									"end": 8899,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 8480,
									"end": 8899,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 8480,
									"end": 8899,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8480,
									"end": 8899,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 8905,
									"end": 9004,
									"name": "tag",
									"source": 5,
									"value": "91"
								},
								{
									"begin": 8905,
									"end": 9004,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8957,
									"end": 8963,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 8991,
									"end": 8996,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 8985,
									"end": 8997,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 8975,
									"end": 8997,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 8975,
									"end": 8997,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8905,
									"end": 9004,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 8905,
									"end": 9004,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 8905,
									"end": 9004,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8905,
									"end": 9004,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 9010,
									"end": 9112,
									"name": "tag",
									"source": 5,
									"value": "92"
								},
								{
									"begin": 9010,
									"end": 9112,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 9051,
									"end": 9057,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 9102,
									"end": 9104,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 9098,
									"end": 9105,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 9093,
									"end": 9095,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 9086,
									"end": 9091,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 9082,
									"end": 9096,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 9078,
									"end": 9106,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 9068,
									"end": 9106,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 9068,
									"end": 9106,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 9010,
									"end": 9112,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 9010,
									"end": 9112,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 9010,
									"end": 9112,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 9010,
									"end": 9112,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 9118,
									"end": 9495,
									"name": "tag",
									"source": 5,
									"value": "93"
								},
								{
									"begin": 9118,
									"end": 9495,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 9206,
									"end": 9209,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 9234,
									"end": 9273,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "187"
								},
								{
									"begin": 9267,
									"end": 9272,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 9234,
									"end": 9273,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "91"
								},
								{
									"begin": 9234,
									"end": 9273,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 9234,
									"end": 9273,
									"name": "tag",
									"source": 5,
									"value": "187"
								},
								{
									"begin": 9234,
									"end": 9273,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 9289,
									"end": 9360,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "188"
								},
								{
									"begin": 9353,
									"end": 9359,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 9348,
									"end": 9351,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 9289,
									"end": 9360,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 9289,
									"end": 9360,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 9289,
									"end": 9360,
									"name": "tag",
									"source": 5,
									"value": "188"
								},
								{
									"begin": 9289,
									"end": 9360,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 9282,
									"end": 9360,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 9282,
									"end": 9360,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 9369,
									"end": 9434,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "189"
								},
								{
									"begin": 9427,
									"end": 9433,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 9422,
									"end": 9425,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 9415,
									"end": 9419,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 9408,
									"end": 9413,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 9404,
									"end": 9420,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 9369,
									"end": 9434,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "87"
								},
								{
									"begin": 9369,
									"end": 9434,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 9369,
									"end": 9434,
									"name": "tag",
									"source": 5,
									"value": "189"
								},
								{
									"begin": 9369,
									"end": 9434,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 9459,
									"end": 9488,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "190"
								},
								{
									"begin": 9481,
									"end": 9487,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 9459,
									"end": 9488,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "92"
								},
								{
									"begin": 9459,
									"end": 9488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 9459,
									"end": 9488,
									"name": "tag",
									"source": 5,
									"value": "190"
								},
								{
									"begin": 9459,
									"end": 9488,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 9454,
									"end": 9457,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 9450,
									"end": 9489,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 9443,
									"end": 9489,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 9443,
									"end": 9489,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 9210,
									"end": 9495,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 9118,
									"end": 9495,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 9118,
									"end": 9495,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 9118,
									"end": 9495,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 9118,
									"end": 9495,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 9118,
									"end": 9495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 9501,
									"end": 9814,
									"name": "tag",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 9501,
									"end": 9814,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 9614,
									"end": 9618,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 9652,
									"end": 9654,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 9641,
									"end": 9650,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 9637,
									"end": 9655,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 9629,
									"end": 9655,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 9629,
									"end": 9655,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 9701,
									"end": 9710,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 9695,
									"end": 9699,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 9691,
									"end": 9711,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 9687,
									"end": 9688,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 9676,
									"end": 9685,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 9672,
									"end": 9689,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 9665,
									"end": 9712,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 9729,
									"end": 9807,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "192"
								},
								{
									"begin": 9802,
									"end": 9806,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 9793,
									"end": 9799,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 9729,
									"end": 9807,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "93"
								},
								{
									"begin": 9729,
									"end": 9807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 9729,
									"end": 9807,
									"name": "tag",
									"source": 5,
									"value": "192"
								},
								{
									"begin": 9729,
									"end": 9807,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 9721,
									"end": 9807,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 9721,
									"end": 9807,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 9501,
									"end": 9814,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 9501,
									"end": 9814,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 9501,
									"end": 9814,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 9501,
									"end": 9814,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 9501,
									"end": 9814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 187,
									"end": 1210,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 187,
									"end": 1210,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1210,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 1210,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1210,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 1210,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 1210,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1210,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 1210,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205fd517c49d24b49052fc6549d8ff041ff3f0314dab2a43dbf7e334a11add3efc64736f6c63430008110033",
									".code": [
										{
											"begin": 187,
											"end": 1210,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 187,
											"end": 1210,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 1210,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1210,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 187,
											"end": 1210,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1210,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 1210,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1210,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 1210,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1210,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 187,
											"end": 1210,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1210,
											"name": "PUSH",
											"source": 4,
											"value": "60C7DC47"
										},
										{
											"begin": 187,
											"end": 1210,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 187,
											"end": 1210,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1210,
											"name": "PUSH",
											"source": 4,
											"value": "73CF575A"
										},
										{
											"begin": 187,
											"end": 1210,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 187,
											"end": 1210,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1210,
											"name": "PUSH",
											"source": 4,
											"value": "A694FC3A"
										},
										{
											"begin": 187,
											"end": 1210,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 187,
											"end": 1210,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 187,
											"end": 1210,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1210,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1210,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 187,
											"end": 1210,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1210,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1210,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 187,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1210,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 1210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1210,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 269,
											"end": 295,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 269,
											"end": 295,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 269,
											"end": 295,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 269,
											"end": 295,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 269,
											"end": 295,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 269,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 269,
											"end": 295,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 269,
											"end": 295,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 269,
											"end": 295,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 269,
											"end": 295,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 269,
											"end": 295,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 269,
											"end": 295,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 269,
											"end": 295,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 269,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 269,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 269,
											"end": 295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 269,
											"end": 295,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 269,
											"end": 295,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 269,
											"end": 295,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 269,
											"end": 295,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 269,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 269,
											"end": 295,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 269,
											"end": 295,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 269,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 269,
											"end": 295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 269,
											"end": 295,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 269,
											"end": 295,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 269,
											"end": 295,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 269,
											"end": 295,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 269,
											"end": 295,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 269,
											"end": 295,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 269,
											"end": 295,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 269,
											"end": 295,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 269,
											"end": 295,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1053,
											"end": 1206,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1053,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1053,
											"end": 1206,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1053,
											"end": 1206,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1053,
											"end": 1206,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1053,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1053,
											"end": 1206,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1053,
											"end": 1206,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1053,
											"end": 1206,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1053,
											"end": 1206,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1053,
											"end": 1206,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1053,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1053,
											"end": 1206,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1053,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1053,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1053,
											"end": 1206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1053,
											"end": 1206,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1053,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1053,
											"end": 1206,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 705,
											"end": 1026,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 705,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 705,
											"end": 1026,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 705,
											"end": 1026,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 705,
											"end": 1026,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 705,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 705,
											"end": 1026,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 705,
											"end": 1026,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 705,
											"end": 1026,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 705,
											"end": 1026,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 705,
											"end": 1026,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 705,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 705,
											"end": 1026,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 705,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 705,
											"end": 1026,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 705,
											"end": 1026,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 705,
											"end": 1026,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 705,
											"end": 1026,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 705,
											"end": 1026,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 705,
											"end": 1026,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 705,
											"end": 1026,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 705,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 705,
											"end": 1026,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 705,
											"end": 1026,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 705,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 705,
											"end": 1026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 705,
											"end": 1026,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 705,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 705,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 705,
											"end": 1026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 705,
											"end": 1026,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 705,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 705,
											"end": 1026,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 269,
											"end": 295,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 269,
											"end": 295,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 269,
											"end": 295,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 269,
											"end": 295,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 269,
											"end": 295,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 269,
											"end": 295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1053,
											"end": 1206,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1053,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1135,
											"end": 1139,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1154,
											"end": 1164,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1178,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1178,
											"end": 1189,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1096,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1096,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1096,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1096,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1096,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1091,
											"end": 1096,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1096,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1096,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1096,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1091,
											"end": 1096,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1113,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1091,
											"end": 1113,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1091,
											"end": 1113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1199,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1199,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1199,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1199,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1199,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1091,
											"end": 1199,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1199,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1091,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1053,
											"end": 1206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 705,
											"end": 1026,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 705,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 774,
											"end": 775,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 764,
											"end": 771,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 764,
											"end": 775,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 756,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 756,
											"end": 795,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 756,
											"end": 795,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 756,
											"end": 795,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 756,
											"end": 795,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 756,
											"end": 795,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 756,
											"end": 795,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 756,
											"end": 795,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 756,
											"end": 795,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 756,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 756,
											"end": 795,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 756,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 756,
											"end": 795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 756,
											"end": 795,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 756,
											"end": 795,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 756,
											"end": 795,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 756,
											"end": 795,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 756,
											"end": 795,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 756,
											"end": 795,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 756,
											"end": 795,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 756,
											"end": 795,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 756,
											"end": 795,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 756,
											"end": 795,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 756,
											"end": 795,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 813,
											"end": 818,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 813,
											"end": 818,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 813,
											"end": 818,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 813,
											"end": 818,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 813,
											"end": 818,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 813,
											"end": 818,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 813,
											"end": 818,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 813,
											"end": 818,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 813,
											"end": 818,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 813,
											"end": 818,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 813,
											"end": 828,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 813,
											"end": 828,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 813,
											"end": 828,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 840,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 813,
											"end": 840,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 813,
											"end": 840,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 813,
											"end": 840,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 813,
											"end": 840,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 813,
											"end": 840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 813,
											"end": 840,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 813,
											"end": 840,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 840,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 813,
											"end": 840,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 813,
											"end": 840,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 813,
											"end": 840,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 813,
											"end": 840,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 840,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 813,
											"end": 840,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 813,
											"end": 840,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 840,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 813,
											"end": 840,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 813,
											"end": 840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 813,
											"end": 840,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 813,
											"end": 840,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 813,
											"end": 851,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 813,
											"end": 851,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 805,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 805,
											"end": 868,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 805,
											"end": 868,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 805,
											"end": 868,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 805,
											"end": 868,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 805,
											"end": 868,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 805,
											"end": 868,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 805,
											"end": 868,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 805,
											"end": 868,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 805,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 805,
											"end": 868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 805,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 805,
											"end": 868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 805,
											"end": 868,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 805,
											"end": 868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 805,
											"end": 868,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 805,
											"end": 868,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 805,
											"end": 868,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 805,
											"end": 868,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 805,
											"end": 868,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 805,
											"end": 868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 805,
											"end": 868,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 805,
											"end": 868,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 805,
											"end": 868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 883,
											"end": 940,
											"name": "PUSH",
											"source": 4,
											"value": "160FFCAA807F78C8B4983836E2396338D073E75695AC448AA0B5E4A75B210B1D"
										},
										{
											"begin": 894,
											"end": 904,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 914,
											"end": 918,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 931,
											"end": 939,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 921,
											"end": 928,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 921,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 921,
											"end": 939,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 921,
											"end": 939,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 921,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 921,
											"end": 939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 921,
											"end": 939,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 921,
											"end": 939,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 883,
											"end": 940,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 940,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 883,
											"end": 940,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 883,
											"end": 940,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 883,
											"end": 940,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 883,
											"end": 940,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 883,
											"end": 940,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 883,
											"end": 940,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 883,
											"end": 940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 883,
											"end": 940,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 883,
											"end": 940,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 883,
											"end": 940,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 940,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 883,
											"end": 940,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 883,
											"end": 940,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 883,
											"end": 940,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 883,
											"end": 940,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 883,
											"end": 940,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 950,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 973,
											"end": 983,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 993,
											"end": 997,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1010,
											"end": 1018,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1000,
											"end": 1007,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1000,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1000,
											"end": 1018,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1000,
											"end": 1018,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1000,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1000,
											"end": 1018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1000,
											"end": 1018,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1000,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 950,
											"end": 955,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 950,
											"end": 955,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 950,
											"end": 955,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 950,
											"end": 955,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 950,
											"end": 955,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 950,
											"end": 955,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 950,
											"end": 955,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 950,
											"end": 955,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 950,
											"end": 955,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 950,
											"end": 955,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 950,
											"end": 972,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 950,
											"end": 972,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 950,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 950,
											"end": 972,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 950,
											"end": 1019,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 950,
											"end": 1019,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 950,
											"end": 1019,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 950,
											"end": 1019,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 950,
											"end": 1019,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 950,
											"end": 1019,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 950,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 950,
											"end": 1019,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 950,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 705,
											"end": 1026,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 705,
											"end": 1026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2394,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2084,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2210,
											"end": 2230,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2275,
											"end": 2280,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2238,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2248,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2233,
											"end": 2248,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2248,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 2257,
											"end": 2261,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 2264,
											"end": 2271,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2233,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2233,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2233,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2233,
											"end": 2280,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2280,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2233,
											"end": 2280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2280,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2233,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2210,
											"end": 2280,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2210,
											"end": 2280,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2310,
											"end": 2315,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 2340,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2340,
											"end": 2362,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2371,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2373,
											"end": 2385,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2317,
											"end": 2386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2386,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2290,
											"end": 2387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2387,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2290,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2200,
											"end": 2394,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2394,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2394,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2394,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4006,
											"end": 4018,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 4059,
											"end": 4065,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4067,
											"end": 4071,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4073,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4076,
											"end": 4088,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4037,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 4037,
											"end": 4089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4030,
											"end": 4089,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4030,
											"end": 4089,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3873,
											"end": 4096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1132,
											"end": 1137,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1191,
											"end": 1195,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1199,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1206,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1139,
											"end": 1207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1112,
											"end": 1208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 974,
											"end": 1215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4189,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4220,
											"end": 4224,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 2,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4200,
											"end": 4205,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4295,
											"end": 4296,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4275,
											"end": 4285,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4275,
											"end": 4292,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4275,
											"end": 4296,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4370,
											"end": 4380,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 4359,
											"end": 4389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4351,
											"end": 4436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3817,
											"end": 4453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3747,
											"end": 4453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5125,
											"end": 5137,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5182,
											"end": 5187,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5157,
											"end": 5178,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 5157,
											"end": 5187,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5157,
											"end": 5187,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 5149,
											"end": 5230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5241,
											"end": 5253,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5255,
											"end": 5278,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5288,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5293,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5282,
											"end": 5293,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5301,
											"end": 5306,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5308,
											"end": 5312,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 5282,
											"end": 5313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 5357,
											"end": 5363,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5365,
											"end": 5372,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5384,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5386,
											"end": 5398,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5356,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 5330,
											"end": 5399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4960,
											"end": 5406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7646,
											"end": 7658,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7674,
											"end": 7681,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7722,
											"end": 7723,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7701,
											"end": 7711,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7701,
											"end": 7718,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7701,
											"end": 7723,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 7927,
											"end": 7933,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7916,
											"end": 7926,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 7916,
											"end": 7934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 7908,
											"end": 7968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8003,
											"end": 8013,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8044,
											"end": 8077,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 8052,
											"end": 8062,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8064,
											"end": 8076,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8044,
											"end": 8051,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 8044,
											"end": 8077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8044,
											"end": 8077,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 8044,
											"end": 8077,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7466,
											"end": 8094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8616,
											"end": 9156,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 8616,
											"end": 9156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8795,
											"end": 8796,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8775,
											"end": 8785,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8775,
											"end": 8792,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8775,
											"end": 8796,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9003,
											"end": 9013,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8997,
											"end": 9014,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9059,
											"end": 9074,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9046,
											"end": 9056,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9042,
											"end": 9044,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9038,
											"end": 9057,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9031,
											"end": 9075,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9126,
											"end": 9138,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 9119,
											"end": 9139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 769,
											"end": 891,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 860,
											"end": 865,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 842,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 835,
											"end": 840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 832,
											"end": 867,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 822,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 879,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 871,
											"end": 883,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 822,
											"end": 885,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 769,
											"end": 891,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 769,
											"end": 891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 987,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 968,
											"end": 988,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 959,
											"end": 988,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 959,
											"end": 988,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1024,
											"end": 1029,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 997,
											"end": 1030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 897,
											"end": 1036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1152,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1129,
											"end": 1136,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1125,
											"end": 1148,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 1156,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1301,
											"end": 1354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1247,
											"end": 1364,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1377,
											"end": 1546,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1377,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1461,
											"end": 1472,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1495,
											"end": 1501,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1490,
											"end": 1493,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1483,
											"end": 1502,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1539,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1530,
											"end": 1533,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1526,
											"end": 1540,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1511,
											"end": 1540,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1511,
											"end": 1540,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1377,
											"end": 1546,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1377,
											"end": 1546,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1377,
											"end": 1546,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1377,
											"end": 1546,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1377,
											"end": 1546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1717,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1552,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1692,
											"end": 1709,
											"name": "PUSH",
											"source": 5,
											"value": "616D6F756E74206E6F74207A65726F0000000000000000000000000000000000"
										},
										{
											"begin": 1688,
											"end": 1689,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1680,
											"end": 1686,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1676,
											"end": 1690,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1717,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 2089,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 1723,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1865,
											"end": 1868,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1886,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 1950,
											"end": 1952,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 1945,
											"end": 1948,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1886,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1886,
											"end": 1953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1886,
											"end": 1953,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 1886,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1953,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1953,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 2051,
											"end": 2054,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2080,
											"end": 2082,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2075,
											"end": 2078,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2083,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2064,
											"end": 2083,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2064,
											"end": 2083,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 2089,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 2089,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 2089,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 2089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2095,
											"end": 2514,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2095,
											"end": 2514,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2265,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2299,
											"end": 2301,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2288,
											"end": 2297,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2284,
											"end": 2302,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2302,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2302,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2348,
											"end": 2357,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2342,
											"end": 2346,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2338,
											"end": 2358,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2334,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2323,
											"end": 2332,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2336,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2359,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2376,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2502,
											"end": 2506,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2376,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2376,
											"end": 2507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2376,
											"end": 2507,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2376,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2368,
											"end": 2507,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2368,
											"end": 2507,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2095,
											"end": 2514,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2095,
											"end": 2514,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2095,
											"end": 2514,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2095,
											"end": 2514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2646,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2520,
											"end": 2646,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2564,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2597,
											"end": 2639,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2590,
											"end": 2595,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2640,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2640,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2640,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2646,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2646,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2646,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2748,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2652,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2689,
											"end": 2696,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2718,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 2736,
											"end": 2741,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2718,
											"end": 2742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2742,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 2718,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2742,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2742,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2748,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2748,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2748,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2754,
											"end": 2872,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2754,
											"end": 2872,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2841,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2859,
											"end": 2864,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2841,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2841,
											"end": 2865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2841,
											"end": 2865,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2841,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 2839,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2829,
											"end": 2866,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2754,
											"end": 2872,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2754,
											"end": 2872,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2754,
											"end": 2872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 3100,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 2878,
											"end": 3100,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2971,
											"end": 2975,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3009,
											"end": 3011,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2998,
											"end": 3007,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2994,
											"end": 3012,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2986,
											"end": 3012,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2986,
											"end": 3012,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3022,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 3090,
											"end": 3091,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3079,
											"end": 3088,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3075,
											"end": 3092,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3066,
											"end": 3072,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3022,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 3022,
											"end": 3093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3022,
											"end": 3093,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 3022,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 3100,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 3100,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 3100,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 3100,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 3100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3106,
											"end": 3249,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 3106,
											"end": 3249,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3163,
											"end": 3168,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3194,
											"end": 3200,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3201,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3201,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3201,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3210,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3237,
											"end": 3242,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3210,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3210,
											"end": 3243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3210,
											"end": 3243,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3210,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3106,
											"end": 3249,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3106,
											"end": 3249,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3106,
											"end": 3249,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3106,
											"end": 3249,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3106,
											"end": 3249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3255,
											"end": 3606,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 3255,
											"end": 3606,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3331,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3374,
											"end": 3376,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3362,
											"end": 3371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3353,
											"end": 3360,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3349,
											"end": 3372,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3345,
											"end": 3377,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3342,
											"end": 3461,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3342,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 3342,
											"end": 3461,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 3380,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3380,
											"end": 3459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3459,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 3380,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3342,
											"end": 3461,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 3342,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3500,
											"end": 3501,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3525,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 3581,
											"end": 3588,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3572,
											"end": 3578,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3570,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3579,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3525,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 3525,
											"end": 3589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3525,
											"end": 3589,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 3525,
											"end": 3589,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3515,
											"end": 3589,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3515,
											"end": 3589,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3599,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3255,
											"end": 3606,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3255,
											"end": 3606,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3255,
											"end": 3606,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3255,
											"end": 3606,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3255,
											"end": 3606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3612,
											"end": 3775,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 3612,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3752,
											"end": 3767,
											"name": "PUSH",
											"source": 5,
											"value": "7374616B696E67206661696C6400000000000000000000000000000000000000"
										},
										{
											"begin": 3748,
											"end": 3749,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3740,
											"end": 3746,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3736,
											"end": 3750,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3729,
											"end": 3768,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3612,
											"end": 3775,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3612,
											"end": 3775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3781,
											"end": 4147,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 3781,
											"end": 4147,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3926,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3944,
											"end": 4011,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 4008,
											"end": 4010,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 4003,
											"end": 4006,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 4011,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 3944,
											"end": 4011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 4011,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 3944,
											"end": 4011,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3937,
											"end": 4011,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3937,
											"end": 4011,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4020,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 4109,
											"end": 4112,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4020,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 4020,
											"end": 4113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4020,
											"end": 4113,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 4020,
											"end": 4113,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4138,
											"end": 4140,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4133,
											"end": 4136,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4129,
											"end": 4141,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4122,
											"end": 4141,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4122,
											"end": 4141,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3781,
											"end": 4147,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3781,
											"end": 4147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3781,
											"end": 4147,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3781,
											"end": 4147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4153,
											"end": 4572,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 4153,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4319,
											"end": 4323,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4357,
											"end": 4359,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4346,
											"end": 4355,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4342,
											"end": 4360,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4334,
											"end": 4360,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4334,
											"end": 4360,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4406,
											"end": 4415,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4400,
											"end": 4404,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4396,
											"end": 4416,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4393,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4381,
											"end": 4390,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4377,
											"end": 4394,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4370,
											"end": 4417,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4434,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 4560,
											"end": 4564,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4434,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 4434,
											"end": 4565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4434,
											"end": 4565,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 4434,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4426,
											"end": 4565,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4426,
											"end": 4565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4153,
											"end": 4572,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4153,
											"end": 4572,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4153,
											"end": 4572,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4153,
											"end": 4572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4758,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 4578,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4626,
											"end": 4703,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4623,
											"end": 4624,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4616,
											"end": 4704,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4723,
											"end": 4727,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 4720,
											"end": 4721,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4713,
											"end": 4728,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4747,
											"end": 4751,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4744,
											"end": 4745,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4737,
											"end": 4752,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4764,
											"end": 5174,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4764,
											"end": 5174,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4804,
											"end": 4811,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4827,
											"end": 4847,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 4845,
											"end": 4846,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4827,
											"end": 4847,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 4827,
											"end": 4847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4827,
											"end": 4847,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 4827,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4822,
											"end": 4847,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4822,
											"end": 4847,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4861,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 4879,
											"end": 4880,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4861,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 4861,
											"end": 4881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4861,
											"end": 4881,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 4861,
											"end": 4881,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4856,
											"end": 4881,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4856,
											"end": 4881,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4916,
											"end": 4917,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4913,
											"end": 4914,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4909,
											"end": 4918,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4938,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 4956,
											"end": 4967,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4938,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 4938,
											"end": 4968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4938,
											"end": 4968,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 4938,
											"end": 4968,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4927,
											"end": 4968,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4927,
											"end": 4968,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5117,
											"end": 5118,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5108,
											"end": 5115,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5104,
											"end": 5119,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5101,
											"end": 5102,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5098,
											"end": 5120,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5078,
											"end": 5079,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5071,
											"end": 5080,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5051,
											"end": 5134,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 5028,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 5028,
											"end": 5167,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5147,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 5147,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 5147,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5147,
											"end": 5165,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 5147,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5028,
											"end": 5167,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 5028,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4812,
											"end": 5174,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4764,
											"end": 5174,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4764,
											"end": 5174,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4764,
											"end": 5174,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4764,
											"end": 5174,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4764,
											"end": 5174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5180,
											"end": 5622,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 5180,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5329,
											"end": 5333,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5367,
											"end": 5369,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5356,
											"end": 5365,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5370,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5344,
											"end": 5370,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5344,
											"end": 5370,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5380,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 5448,
											"end": 5449,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5437,
											"end": 5446,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5433,
											"end": 5450,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5424,
											"end": 5430,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5380,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 5380,
											"end": 5451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5380,
											"end": 5451,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 5380,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5461,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 5529,
											"end": 5531,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5518,
											"end": 5527,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5514,
											"end": 5532,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5505,
											"end": 5511,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5461,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 5461,
											"end": 5533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5461,
											"end": 5533,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 5461,
											"end": 5533,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5543,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 5611,
											"end": 5613,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5600,
											"end": 5609,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5614,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5587,
											"end": 5593,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5543,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5543,
											"end": 5615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5543,
											"end": 5615,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 5543,
											"end": 5615,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5180,
											"end": 5622,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5180,
											"end": 5622,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5180,
											"end": 5622,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5180,
											"end": 5622,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5180,
											"end": 5622,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5180,
											"end": 5622,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5180,
											"end": 5622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5628,
											"end": 5960,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 5628,
											"end": 5960,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5749,
											"end": 5753,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5787,
											"end": 5789,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5776,
											"end": 5785,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5772,
											"end": 5790,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5764,
											"end": 5790,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5764,
											"end": 5790,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5800,
											"end": 5871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 5868,
											"end": 5869,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5857,
											"end": 5866,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5853,
											"end": 5870,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5844,
											"end": 5850,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5800,
											"end": 5871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 5800,
											"end": 5871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5800,
											"end": 5871,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 5800,
											"end": 5871,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5881,
											"end": 5953,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 5949,
											"end": 5951,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5938,
											"end": 5947,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5934,
											"end": 5952,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5925,
											"end": 5931,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5881,
											"end": 5953,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 5881,
											"end": 5953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5881,
											"end": 5953,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 5881,
											"end": 5953,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5628,
											"end": 5960,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5628,
											"end": 5960,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5628,
											"end": 5960,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5628,
											"end": 5960,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5628,
											"end": 5960,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5628,
											"end": 5960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 6157,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 5966,
											"end": 6157,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6006,
											"end": 6009,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6025,
											"end": 6045,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 6043,
											"end": 6044,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6025,
											"end": 6045,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 6025,
											"end": 6045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6025,
											"end": 6045,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 6025,
											"end": 6045,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6020,
											"end": 6045,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6020,
											"end": 6045,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6059,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 6077,
											"end": 6078,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6059,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 6059,
											"end": 6079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6059,
											"end": 6079,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 6059,
											"end": 6079,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6054,
											"end": 6079,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6054,
											"end": 6079,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6102,
											"end": 6103,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6099,
											"end": 6100,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6095,
											"end": 6104,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6088,
											"end": 6104,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6088,
											"end": 6104,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6123,
											"end": 6126,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6120,
											"end": 6121,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6117,
											"end": 6127,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6114,
											"end": 6150,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6114,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 6114,
											"end": 6150,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6130,
											"end": 6148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 6130,
											"end": 6148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 6130,
											"end": 6148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6130,
											"end": 6148,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 6130,
											"end": 6148,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6114,
											"end": 6150,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 6114,
											"end": 6150,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 6157,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 6157,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 6157,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 6157,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 6157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6495,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 6163,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6284,
											"end": 6288,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6324,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6311,
											"end": 6320,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6325,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6299,
											"end": 6325,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6299,
											"end": 6325,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6335,
											"end": 6406,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 6403,
											"end": 6404,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6392,
											"end": 6401,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6388,
											"end": 6405,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6379,
											"end": 6385,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6335,
											"end": 6406,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 6335,
											"end": 6406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6335,
											"end": 6406,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 6335,
											"end": 6406,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6416,
											"end": 6488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 6484,
											"end": 6486,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6473,
											"end": 6482,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6469,
											"end": 6487,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6460,
											"end": 6466,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6416,
											"end": 6488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6416,
											"end": 6488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6416,
											"end": 6488,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 6416,
											"end": 6488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6495,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6495,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6495,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6495,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6495,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6501,
											"end": 6591,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 6501,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6535,
											"end": 6542,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6578,
											"end": 6583,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6584,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6564,
											"end": 6585,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6553,
											"end": 6585,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6553,
											"end": 6585,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6501,
											"end": 6591,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6501,
											"end": 6591,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6501,
											"end": 6591,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6501,
											"end": 6591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6597,
											"end": 6713,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 6597,
											"end": 6713,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6667,
											"end": 6688,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 6682,
											"end": 6687,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6667,
											"end": 6688,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 6667,
											"end": 6688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6667,
											"end": 6688,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 6667,
											"end": 6688,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6660,
											"end": 6665,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6657,
											"end": 6689,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6647,
											"end": 6707,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 6647,
											"end": 6707,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6703,
											"end": 6704,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6700,
											"end": 6701,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6693,
											"end": 6705,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6647,
											"end": 6707,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 6647,
											"end": 6707,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6597,
											"end": 6713,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6597,
											"end": 6713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6719,
											"end": 6856,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 6719,
											"end": 6856,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6773,
											"end": 6778,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6804,
											"end": 6810,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6798,
											"end": 6811,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6789,
											"end": 6811,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6789,
											"end": 6811,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6820,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 6844,
											"end": 6849,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6820,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 6820,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6820,
											"end": 6850,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 6820,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6719,
											"end": 6856,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6719,
											"end": 6856,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6719,
											"end": 6856,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6719,
											"end": 6856,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6719,
											"end": 6856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6862,
											"end": 7207,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 6862,
											"end": 7207,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6929,
											"end": 6935,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6978,
											"end": 6980,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6966,
											"end": 6975,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6957,
											"end": 6964,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6953,
											"end": 6976,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6949,
											"end": 6981,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 6946,
											"end": 7065,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6946,
											"end": 7065,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 6946,
											"end": 7065,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6984,
											"end": 7063,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 6984,
											"end": 7063,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 6984,
											"end": 7063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6984,
											"end": 7063,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 6984,
											"end": 7063,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6946,
											"end": 7065,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 6946,
											"end": 7065,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7104,
											"end": 7105,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7129,
											"end": 7190,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 7182,
											"end": 7189,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7173,
											"end": 7179,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7162,
											"end": 7171,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7158,
											"end": 7180,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7129,
											"end": 7190,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 7129,
											"end": 7190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7129,
											"end": 7190,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 7129,
											"end": 7190,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7119,
											"end": 7190,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7119,
											"end": 7190,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7075,
											"end": 7200,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6862,
											"end": 7207,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6862,
											"end": 7207,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6862,
											"end": 7207,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6862,
											"end": 7207,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6862,
											"end": 7207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7213,
											"end": 7442,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 7213,
											"end": 7442,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7353,
											"end": 7387,
											"name": "PUSH",
											"source": 5,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 7349,
											"end": 7350,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7341,
											"end": 7347,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7337,
											"end": 7351,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7330,
											"end": 7388,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7422,
											"end": 7434,
											"name": "PUSH",
											"source": 5,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 7417,
											"end": 7419,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7409,
											"end": 7415,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7405,
											"end": 7420,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7398,
											"end": 7435,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7213,
											"end": 7442,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7213,
											"end": 7442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7448,
											"end": 7814,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 7448,
											"end": 7814,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7590,
											"end": 7593,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7611,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 7675,
											"end": 7677,
											"name": "PUSH",
											"source": 5,
											"value": "2A"
										},
										{
											"begin": 7670,
											"end": 7673,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7611,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 7611,
											"end": 7678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7611,
											"end": 7678,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 7611,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7604,
											"end": 7678,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7604,
											"end": 7678,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7687,
											"end": 7780,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 7776,
											"end": 7779,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7687,
											"end": 7780,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 7687,
											"end": 7780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7687,
											"end": 7780,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 7687,
											"end": 7780,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 7807,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7800,
											"end": 7803,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7796,
											"end": 7808,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7789,
											"end": 7808,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7789,
											"end": 7808,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7448,
											"end": 7814,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7448,
											"end": 7814,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7448,
											"end": 7814,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7448,
											"end": 7814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7820,
											"end": 8239,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 7820,
											"end": 8239,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7986,
											"end": 7990,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8024,
											"end": 8026,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8013,
											"end": 8022,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8009,
											"end": 8027,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8001,
											"end": 8027,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8001,
											"end": 8027,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8073,
											"end": 8082,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8067,
											"end": 8071,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8063,
											"end": 8083,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8059,
											"end": 8060,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8048,
											"end": 8057,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8044,
											"end": 8061,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8037,
											"end": 8084,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8101,
											"end": 8232,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 8227,
											"end": 8231,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8101,
											"end": 8232,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 8101,
											"end": 8232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8101,
											"end": 8232,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 8101,
											"end": 8232,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8093,
											"end": 8232,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8093,
											"end": 8232,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7820,
											"end": 8239,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7820,
											"end": 8239,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7820,
											"end": 8239,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7820,
											"end": 8239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8245,
											"end": 8470,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 8245,
											"end": 8470,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8385,
											"end": 8419,
											"name": "PUSH",
											"source": 5,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 8381,
											"end": 8382,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8373,
											"end": 8379,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8369,
											"end": 8383,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8362,
											"end": 8420,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8454,
											"end": 8462,
											"name": "PUSH",
											"source": 5,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8449,
											"end": 8451,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8441,
											"end": 8447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8437,
											"end": 8452,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8430,
											"end": 8463,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8245,
											"end": 8470,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8245,
											"end": 8470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8476,
											"end": 8842,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 8476,
											"end": 8842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8618,
											"end": 8621,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8639,
											"end": 8706,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 8703,
											"end": 8705,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 8698,
											"end": 8701,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8639,
											"end": 8706,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 8639,
											"end": 8706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8639,
											"end": 8706,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 8639,
											"end": 8706,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8632,
											"end": 8706,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8632,
											"end": 8706,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8715,
											"end": 8808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 8804,
											"end": 8807,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8715,
											"end": 8808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 8715,
											"end": 8808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8715,
											"end": 8808,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 8715,
											"end": 8808,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8833,
											"end": 8835,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8828,
											"end": 8831,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8824,
											"end": 8836,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8817,
											"end": 8836,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8817,
											"end": 8836,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8476,
											"end": 8842,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8476,
											"end": 8842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8476,
											"end": 8842,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8476,
											"end": 8842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8848,
											"end": 9267,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 8848,
											"end": 9267,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9014,
											"end": 9018,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9052,
											"end": 9054,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9041,
											"end": 9050,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9037,
											"end": 9055,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9029,
											"end": 9055,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9029,
											"end": 9055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9101,
											"end": 9110,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9095,
											"end": 9099,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9091,
											"end": 9111,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9087,
											"end": 9088,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9076,
											"end": 9085,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9072,
											"end": 9089,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9065,
											"end": 9112,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9129,
											"end": 9260,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 9255,
											"end": 9259,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9129,
											"end": 9260,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 9129,
											"end": 9260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9129,
											"end": 9260,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 9129,
											"end": 9260,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9121,
											"end": 9260,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9121,
											"end": 9260,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8848,
											"end": 9267,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8848,
											"end": 9267,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8848,
											"end": 9267,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8848,
											"end": 9267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9273,
											"end": 9371,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 9273,
											"end": 9371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9330,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9358,
											"end": 9363,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9352,
											"end": 9364,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9342,
											"end": 9364,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9342,
											"end": 9364,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9273,
											"end": 9371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9273,
											"end": 9371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9273,
											"end": 9371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9273,
											"end": 9371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9377,
											"end": 9524,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 9377,
											"end": 9524,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9478,
											"end": 9489,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9515,
											"end": 9518,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9500,
											"end": 9518,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9500,
											"end": 9518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9377,
											"end": 9524,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9377,
											"end": 9524,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9377,
											"end": 9524,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9377,
											"end": 9524,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9377,
											"end": 9524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9530,
											"end": 9776,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 9530,
											"end": 9776,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9611,
											"end": 9612,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9621,
											"end": 9734,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 9621,
											"end": 9734,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9635,
											"end": 9641,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9632,
											"end": 9633,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9629,
											"end": 9642,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 9621,
											"end": 9734,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9621,
											"end": 9734,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 9621,
											"end": 9734,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9720,
											"end": 9721,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9715,
											"end": 9718,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9711,
											"end": 9722,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9701,
											"end": 9702,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9696,
											"end": 9699,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9692,
											"end": 9703,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9685,
											"end": 9724,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9657,
											"end": 9659,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9654,
											"end": 9655,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9650,
											"end": 9660,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9645,
											"end": 9660,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9645,
											"end": 9660,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9621,
											"end": 9734,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 9621,
											"end": 9734,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9621,
											"end": 9734,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 9621,
											"end": 9734,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9768,
											"end": 9769,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9759,
											"end": 9765,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9754,
											"end": 9757,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9750,
											"end": 9766,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9743,
											"end": 9770,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9592,
											"end": 9776,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9530,
											"end": 9776,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9530,
											"end": 9776,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9530,
											"end": 9776,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9530,
											"end": 9776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9782,
											"end": 10168,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 9782,
											"end": 10168,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9886,
											"end": 9889,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9914,
											"end": 9952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 9946,
											"end": 9951,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9914,
											"end": 9952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 9914,
											"end": 9952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9914,
											"end": 9952,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 9914,
											"end": 9952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9968,
											"end": 10056,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 10049,
											"end": 10055,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10044,
											"end": 10047,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9968,
											"end": 10056,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 9968,
											"end": 10056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9968,
											"end": 10056,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 9968,
											"end": 10056,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9961,
											"end": 10056,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9961,
											"end": 10056,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10065,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 10123,
											"end": 10129,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10121,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10111,
											"end": 10115,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10104,
											"end": 10109,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 10100,
											"end": 10116,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10065,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 10065,
											"end": 10130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10065,
											"end": 10130,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 10065,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10155,
											"end": 10161,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10150,
											"end": 10153,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10146,
											"end": 10162,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10139,
											"end": 10162,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10139,
											"end": 10162,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9890,
											"end": 10168,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9782,
											"end": 10168,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9782,
											"end": 10168,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9782,
											"end": 10168,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9782,
											"end": 10168,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9782,
											"end": 10168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10174,
											"end": 10445,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 10174,
											"end": 10445,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10304,
											"end": 10307,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10326,
											"end": 10419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 10415,
											"end": 10418,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10406,
											"end": 10412,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10326,
											"end": 10419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 10326,
											"end": 10419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10326,
											"end": 10419,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 10326,
											"end": 10419,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10319,
											"end": 10419,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10319,
											"end": 10419,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10436,
											"end": 10439,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10429,
											"end": 10439,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10429,
											"end": 10439,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10174,
											"end": 10445,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10174,
											"end": 10445,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10174,
											"end": 10445,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10174,
											"end": 10445,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10174,
											"end": 10445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10451,
											"end": 10630,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 10451,
											"end": 10630,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10591,
											"end": 10622,
											"name": "PUSH",
											"source": 5,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 10587,
											"end": 10588,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10579,
											"end": 10585,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10575,
											"end": 10589,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10568,
											"end": 10623,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10451,
											"end": 10630,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10451,
											"end": 10630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10636,
											"end": 11002,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 10636,
											"end": 11002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10778,
											"end": 10781,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10799,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 10863,
											"end": 10865,
											"name": "PUSH",
											"source": 5,
											"value": "1D"
										},
										{
											"begin": 10858,
											"end": 10861,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10799,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 10799,
											"end": 10866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10799,
											"end": 10866,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 10799,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10792,
											"end": 10866,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10792,
											"end": 10866,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10875,
											"end": 10968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 10964,
											"end": 10967,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10875,
											"end": 10968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 10875,
											"end": 10968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10875,
											"end": 10968,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 10875,
											"end": 10968,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10993,
											"end": 10995,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10988,
											"end": 10991,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10984,
											"end": 10996,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10977,
											"end": 10996,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10977,
											"end": 10996,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10636,
											"end": 11002,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10636,
											"end": 11002,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10636,
											"end": 11002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10636,
											"end": 11002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11008,
											"end": 11427,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 11008,
											"end": 11427,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11174,
											"end": 11178,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11212,
											"end": 11214,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11201,
											"end": 11210,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11197,
											"end": 11215,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11189,
											"end": 11215,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11189,
											"end": 11215,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11261,
											"end": 11270,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11255,
											"end": 11259,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11251,
											"end": 11271,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11247,
											"end": 11248,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11236,
											"end": 11245,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11232,
											"end": 11249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11225,
											"end": 11272,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11289,
											"end": 11420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 11415,
											"end": 11419,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11289,
											"end": 11420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 11289,
											"end": 11420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11289,
											"end": 11420,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 11289,
											"end": 11420,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11281,
											"end": 11420,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11281,
											"end": 11420,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11008,
											"end": 11427,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11008,
											"end": 11427,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11008,
											"end": 11427,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11008,
											"end": 11427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11433,
											"end": 11532,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 11433,
											"end": 11532,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11485,
											"end": 11491,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11519,
											"end": 11524,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11513,
											"end": 11525,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 11503,
											"end": 11525,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11503,
											"end": 11525,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11433,
											"end": 11532,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11433,
											"end": 11532,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11433,
											"end": 11532,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11433,
											"end": 11532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11538,
											"end": 11640,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 11538,
											"end": 11640,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11579,
											"end": 11585,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11630,
											"end": 11632,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 11626,
											"end": 11633,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 11621,
											"end": 11623,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 11614,
											"end": 11619,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11610,
											"end": 11624,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11606,
											"end": 11634,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11596,
											"end": 11634,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11596,
											"end": 11634,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11538,
											"end": 11640,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11538,
											"end": 11640,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11538,
											"end": 11640,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11538,
											"end": 11640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11646,
											"end": 12023,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 11646,
											"end": 12023,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11734,
											"end": 11737,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11762,
											"end": 11801,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 11795,
											"end": 11800,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11762,
											"end": 11801,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 11762,
											"end": 11801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11762,
											"end": 11801,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 11762,
											"end": 11801,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11817,
											"end": 11888,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 11881,
											"end": 11887,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11876,
											"end": 11879,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 11817,
											"end": 11888,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 11817,
											"end": 11888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11817,
											"end": 11888,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 11817,
											"end": 11888,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11810,
											"end": 11888,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 11810,
											"end": 11888,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11897,
											"end": 11962,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 11955,
											"end": 11961,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11950,
											"end": 11953,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 11943,
											"end": 11947,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11936,
											"end": 11941,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 11932,
											"end": 11948,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11897,
											"end": 11962,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 11897,
											"end": 11962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11897,
											"end": 11962,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 11897,
											"end": 11962,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11987,
											"end": 12016,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 12009,
											"end": 12015,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11987,
											"end": 12016,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 11987,
											"end": 12016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11987,
											"end": 12016,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 11987,
											"end": 12016,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11982,
											"end": 11985,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11978,
											"end": 12017,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11971,
											"end": 12017,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11971,
											"end": 12017,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11738,
											"end": 12023,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11646,
											"end": 12023,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11646,
											"end": 12023,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11646,
											"end": 12023,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11646,
											"end": 12023,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11646,
											"end": 12023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12029,
											"end": 12342,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 12029,
											"end": 12342,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12142,
											"end": 12146,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12180,
											"end": 12182,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12169,
											"end": 12178,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12165,
											"end": 12183,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12157,
											"end": 12183,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12157,
											"end": 12183,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12229,
											"end": 12238,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12223,
											"end": 12227,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12219,
											"end": 12239,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 12215,
											"end": 12216,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12204,
											"end": 12213,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12200,
											"end": 12217,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12193,
											"end": 12240,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12257,
											"end": 12335,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 12330,
											"end": 12334,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12321,
											"end": 12327,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12257,
											"end": 12335,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 12257,
											"end": 12335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12257,
											"end": 12335,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 12257,
											"end": 12335,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12249,
											"end": 12335,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12249,
											"end": 12335,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12029,
											"end": 12342,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12029,
											"end": 12342,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12029,
											"end": 12342,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12029,
											"end": 12342,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12029,
											"end": 12342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"contracts/stake.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"stake(uint256)": "a694fc3a",
							"stakeAmount()": "60c7dc47",
							"unStake()": "73cf575a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"when\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/stake.sol\":\"Stake\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"contracts/stake.sol\":{\"keccak256\":\"0x448acc27e5a49f1b9c0eac0bac717d62720fbf7389f9fbbe3805b65854adca4b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f8a6093d30de9e3170013c264ab66847887a1247dd58843ac1a5d42fd770fa00\",\"dweb:/ipfs/QmUdVubhS9pV6TYGyn4SkaJQZa3XQ8NRyzju4zBTF4CXsR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 735,
								"contract": "contracts/stake.sol:Stake",
								"label": "token",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 737,
								"contract": "contracts/stake.sol:Stake",
								"label": "stakeAmount",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							113
						]
					},
					"id": 114,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "114:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "139:480:1",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "IERC20Permit",
							"nameLocation": "630:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "649:792:1",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1455:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1479:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1471:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1502:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1494:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1527:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1519:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1550:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1542:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1574:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1568:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 90,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1568:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1593:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1585:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 92,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1612:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1604:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1604:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:158:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1628:0:1"
									},
									"scope": 113,
									"src": "1446:183:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "1635:294:1",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1943:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1958:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1950:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1950:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1949:15:1"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1988:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1988:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:9:1"
									},
									"scope": 113,
									"src": "1934:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "2003:128:1",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2198:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2214:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "2240:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 109,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2239:9:1"
									},
									"scope": 113,
									"src": "2189:60:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 114,
							"src": "620:1631:1",
							"usedErrors": []
						}
					],
					"src": "114:2138:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							724
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"SafeERC20": [
							394
						]
					},
					"id": 395,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 115,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 116,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 395,
							"sourceUnit": 78,
							"src": "140:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
							"file": "../extensions/draft-IERC20Permit.sol",
							"id": 117,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 395,
							"sourceUnit": 114,
							"src": "164:46:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 118,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 395,
							"sourceUnit": 725,
							"src": "211:36:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 119,
								"nodeType": "StructuredDocumentation",
								"src": "249:457:2",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 394,
							"linearizedBaseContracts": [
								394
							],
							"name": "SafeERC20",
							"nameLocation": "715:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 122,
									"libraryName": {
										"id": 120,
										"name": "Address",
										"nameLocations": [
											"737:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 724,
										"src": "737:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "731:26:2",
									"typeName": {
										"id": 121,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "749:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "865:103:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 133,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "895:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 136,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 125,
																			"src": "925:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "931:8:2",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "925:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "940:8:2",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "925:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 139,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 127,
																	"src": "950:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 140,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "954:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 134,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "902:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "906:18:2",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "902:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "902:58:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 132,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "875:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "875:86:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "875:86:2"
											}
										]
									},
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "772:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "801:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "794:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 124,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 123,
														"name": "IERC20",
														"nameLocations": [
															"794:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "794:6:2"
													},
													"referencedDeclaration": 77,
													"src": "794:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "824:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "816:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "844:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "836:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:71:2"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:0:2"
									},
									"scope": 394,
									"src": "763:205:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "1102:113:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 158,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "1132:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 161,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 148,
																			"src": "1162:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1168:12:2",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 76,
																		"src": "1162:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1181:8:2",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1162:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 164,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "1191:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 165,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "1197:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 166,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 154,
																	"src": "1201:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 159,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1139:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1143:18:2",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1139:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1139:68:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 157,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "1112:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1112:96:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "1112:96:2"
											}
										]
									},
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "983:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1016:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1009:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 147,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 146,
														"name": "IERC20",
														"nameLocations": [
															"1009:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1009:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1039:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1031:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1061:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1053:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1081:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1073:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "999:93:2"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:0:2"
									},
									"scope": 394,
									"src": "974:241:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "1581:497:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 183,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 179,
																			"src": "1830:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 184,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1839:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1830:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 186,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1829:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 191,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1870:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$394",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$394",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 190,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1862:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 189,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1862:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 192,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1862:13:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 193,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 177,
																					"src": "1877:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 187,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 175,
																					"src": "1846:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 188,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1852:9:2",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 54,
																				"src": "1846:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 194,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1846:39:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1889:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1846:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 197,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1845:46:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1829:62:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1905:56:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 182,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1808:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1808:163:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "1808:163:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 203,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "2001:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 206,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 175,
																			"src": "2031:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2037:7:2",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "2031:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2045:8:2",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2031:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 209,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "2055:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 210,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "2064:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 204,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2008:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2012:18:2",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2008:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2008:62:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 202,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "1981:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1981:90:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "1981:90:2"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1221:249:2",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1484:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1512:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1505:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 174,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 173,
														"name": "IERC20",
														"nameLocations": [
															"1505:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1505:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1505:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1535:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1527:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1560:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1552:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:76:2"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1581:0:2"
									},
									"scope": 394,
									"src": "1475:603:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "2200:194:2",
										"statements": [
											{
												"assignments": [
													226
												],
												"declarations": [
													{
														"constant": false,
														"id": 226,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2218:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 250,
														"src": "2210:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 225,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2210:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 237,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 231,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2257:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$394",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$394",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2249:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 229,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2249:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2249:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 233,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "2264:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 227,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 218,
																"src": "2233:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2239:9:2",
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 54,
															"src": "2233:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2233:39:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 235,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "2275:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2233:47:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2210:70:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 239,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "2310:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 242,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 218,
																			"src": "2340:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2346:7:2",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "2340:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2354:8:2",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2340:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 245,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "2364:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 246,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "2373:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 240,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2317:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2321:18:2",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2317:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2317:69:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 238,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "2290:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 249,
												"nodeType": "ExpressionStatement",
												"src": "2290:97:2"
											}
										]
									},
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2093:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2131:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2124:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 217,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 216,
														"name": "IERC20",
														"nameLocations": [
															"2124:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2124:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2124:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2154:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2146:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2146:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2179:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2171:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:76:2"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2200:0:2"
									},
									"scope": 394,
									"src": "2084:310:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "2516:370:2",
										"statements": [
											{
												"id": 297,
												"nodeType": "UncheckedBlock",
												"src": "2526:354:2",
												"statements": [
													{
														"assignments": [
															262
														],
														"declarations": [
															{
																"constant": false,
																"id": 262,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2558:12:2",
																"nodeType": "VariableDeclaration",
																"scope": 297,
																"src": "2550:20:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 261,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2550:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 271,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 267,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2597:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$394",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$394",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2589:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 265,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2589:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2589:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 269,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 256,
																	"src": "2604:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 263,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "2573:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2579:9:2",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 54,
																"src": "2573:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2573:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2550:62:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "2634:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 274,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 258,
																		"src": "2650:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2634:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2657:43:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2626:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2626:75:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "2626:75:2"
													},
													{
														"assignments": [
															280
														],
														"declarations": [
															{
																"constant": false,
																"id": 280,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2723:12:2",
																"nodeType": "VariableDeclaration",
																"scope": 297,
																"src": "2715:20:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 279,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2715:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 284,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 281,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "2738:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 282,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 258,
																"src": "2753:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2738:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2715:43:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 286,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "2792:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 289,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 254,
																					"src": "2822:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 290,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2828:7:2",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 64,
																				"src": "2822:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 291,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2836:8:2",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2822:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 292,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 256,
																			"src": "2846:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 293,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 280,
																			"src": "2855:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 287,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2799:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2803:18:2",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2799:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:69:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 285,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "2772:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2772:97:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 296,
														"nodeType": "ExpressionStatement",
														"src": "2772:97:2"
													}
												]
											}
										]
									},
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2409:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2447:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2440:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 253,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 252,
														"name": "IERC20",
														"nameLocations": [
															"2440:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2440:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2440:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2470:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2462:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2495:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2487:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:76:2"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2516:0:2"
									},
									"scope": 394,
									"src": "2400:486:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "3107:257:2",
										"statements": [
											{
												"assignments": [
													320
												],
												"declarations": [
													{
														"constant": false,
														"id": 320,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "3125:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 354,
														"src": "3117:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 319,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3117:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 325,
												"initialValue": {
													"arguments": [
														{
															"id": 323,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "3152:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 321,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "3139:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$113",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3145:6:2",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 106,
														"src": "3139:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3139:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3117:41:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 329,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "3181:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 330,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "3188:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 331,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "3197:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 332,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "3204:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 333,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "3214:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 334,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "3217:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 335,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "3220:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 326,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "3168:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$113",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3174:6:2",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 98,
														"src": "3168:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3168:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "3168:54:2"
											},
											{
												"assignments": [
													339
												],
												"declarations": [
													{
														"constant": false,
														"id": 339,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "3240:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 354,
														"src": "3232:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 338,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3232:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 344,
												"initialValue": {
													"arguments": [
														{
															"id": 342,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "3266:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 340,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "3253:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$113",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3259:6:2",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 106,
														"src": "3253:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3253:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3232:40:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 346,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "3290:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 347,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "3304:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3318:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3304:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3290:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3321:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 345,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3282:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3282:75:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "3282:75:2"
											}
										]
									},
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "2901:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2934:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "2921:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$113",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 301,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 300,
														"name": "IERC20Permit",
														"nameLocations": [
															"2921:12:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 113,
														"src": "2921:12:2"
													},
													"referencedDeclaration": 113,
													"src": "2921:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$113",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2957:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "2949:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2980:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "2972:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2972:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3005:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "2997:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3028:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3020:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3020:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3052:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3046:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 311,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3046:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3071:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3063:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 313,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3090:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3082:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 315,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3082:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:186:2"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3107:0:2"
									},
									"scope": 394,
									"src": "2892:472:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "3817:636:2",
										"statements": [
											{
												"assignments": [
													365
												],
												"declarations": [
													{
														"constant": false,
														"id": 365,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4179:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 392,
														"src": "4166:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 364,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4166:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 374,
												"initialValue": {
													"arguments": [
														{
															"id": 371,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "4220:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4226:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 368,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "4200:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 367,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4192:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 366,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4192:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4192:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4207:12:2",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 484,
														"src": "4192:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4192:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4166:95:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 375,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "4275:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4286:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4275:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4295:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4275:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 391,
												"nodeType": "IfStatement",
												"src": "4271:176:2",
												"trueBody": {
													"id": 390,
													"nodeType": "Block",
													"src": "4298:149:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 382,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 365,
																				"src": "4370:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 384,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4383:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 383,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "4383:4:2",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 385,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4382:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 380,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4359:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4363:6:2",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "4359:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4359:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4391:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 379,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4351:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4351:85:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 389,
															"nodeType": "ExpressionStatement",
															"src": "4351:85:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "3370:372:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3756:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3783:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "3776:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 358,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 357,
														"name": "IERC20",
														"nameLocations": [
															"3776:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "3776:6:2"
													},
													"referencedDeclaration": 77,
													"src": "3776:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3803:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "3790:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 360,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3790:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:33:2"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3817:0:2"
									},
									"scope": 394,
									"src": "3747:706:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 395,
							"src": "707:3748:2",
							"usedErrors": []
						}
					],
					"src": "115:4341:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							724
						]
					},
					"id": 725,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 396,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 397,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 724,
							"linearizedBaseContracts": [
								724
							],
							"name": "Address",
							"nameLocation": "202:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "1241:254:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 405,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "1465:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:4:3",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 404,
												"id": 410,
												"nodeType": "Return",
												"src": "1458:30:3"
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:3",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "1195:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:3"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "1235:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 402,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:3"
									},
									"scope": 724,
									"src": "1175:320:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "2483:241:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 423,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$724",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$724",
																				"typeString": "library Address"
																			}
																		],
																		"id": 422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 421,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:7:3",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 426,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "2526:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 420,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:3"
											},
											{
												"assignments": [
													432,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 432,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 445,
														"src": "2578:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 431,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 439,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 433,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "2596:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2606:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 435,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "2618:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 441,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "2647:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 440,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:3"
											}
										]
									},
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "2431:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "2458:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:3"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:3"
									},
									"scope": 724,
									"src": "2412:312:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "3555:96:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 457,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "3594:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 458,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "3602:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3611:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 456,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															504,
															548
														],
														"referencedDeclaration": 548,
														"src": "3572:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 455,
												"id": 462,
												"nodeType": "Return",
												"src": "3565:79:3"
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "3488:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "3504:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 450,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:3"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "3541:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:3"
									},
									"scope": 724,
									"src": "3466:185:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "4020:76:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 477,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "4059:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 478,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "4067:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4073:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 480,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "4076:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 476,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															504,
															548
														],
														"referencedDeclaration": 548,
														"src": "4037:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 475,
												"id": 482,
												"nodeType": "Return",
												"src": "4030:59:3"
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "3657:211:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3882:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3912:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3904:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3941:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3928:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 468,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3928:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3969:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3955:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 470,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3955:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3894:93:3"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "4006:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 473,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4006:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:14:3"
									},
									"scope": 724,
									"src": "3873:223:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 503,
										"nodeType": "Block",
										"src": "4601:111:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 497,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "4640:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 498,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "4648:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 499,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "4654:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4661:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 496,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															504,
															548
														],
														"referencedDeclaration": 548,
														"src": "4618:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 495,
												"id": 502,
												"nodeType": "Return",
												"src": "4611:94:3"
											}
										]
									},
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "4102:351:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4467:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4506:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "4498:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4498:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4535:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "4522:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 488,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4522:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4557:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "4549:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4549:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4488:80:3"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "4587:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 493,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4587:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:14:3"
									},
									"scope": 724,
									"src": "4458:254:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "5139:267:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 521,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5165:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$724",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$724",
																				"typeString": "library Address"
																			}
																		],
																		"id": 520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5157:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 519,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5157:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5157:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5171:7:3",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5157:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 524,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 511,
																"src": "5182:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5157:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5189:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 518,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5149:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5149:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 528,
												"nodeType": "ExpressionStatement",
												"src": "5149:81:3"
											},
											{
												"assignments": [
													530,
													532
												],
												"declarations": [
													{
														"constant": false,
														"id": 530,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5246:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 547,
														"src": "5241:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 529,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5241:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 532,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5268:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 547,
														"src": "5255:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 531,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5255:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 539,
												"initialValue": {
													"arguments": [
														{
															"id": 537,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "5308:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 533,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "5282:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5289:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5282:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 535,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 511,
																"src": "5301:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5282:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5240:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 541,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "5357:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 542,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "5365:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 543,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "5374:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 544,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "5386:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 540,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "5330:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5330:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 517,
												"id": 546,
												"nodeType": "Return",
												"src": "5323:76:3"
											}
										]
									},
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "4718:237:3",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4969:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5008:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "5000:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5037:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "5024:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 508,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5024:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5059:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "5051:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5051:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5088:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "5074:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 512,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5074:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4990:116:3"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "5125:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 515,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5125:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:14:3"
									},
									"scope": 724,
									"src": "4960:446:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "5683:97:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 559,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "5719:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 560,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "5727:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5733:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 558,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															565,
															594
														],
														"referencedDeclaration": 594,
														"src": "5700:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5700:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 557,
												"id": 563,
												"nodeType": "Return",
												"src": "5693:80:3"
											}
										]
									},
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "5412:166:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5592:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5619:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "5611:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5611:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5640:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "5627:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 552,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5627:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5610:35:3"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "5669:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 555,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5669:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5668:14:3"
									},
									"scope": 724,
									"src": "5583:197:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "6122:168:3",
										"statements": [
											{
												"assignments": [
													578,
													580
												],
												"declarations": [
													{
														"constant": false,
														"id": 578,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6138:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 593,
														"src": "6133:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 577,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6133:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 580,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6160:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 593,
														"src": "6147:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 579,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6147:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 585,
												"initialValue": {
													"arguments": [
														{
															"id": 583,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "6192:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 581,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "6174:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6181:10:3",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6174:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6174:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 587,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "6241:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 588,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "6249:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 589,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "6258:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 590,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "6270:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 586,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "6214:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6214:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 576,
												"id": 592,
												"nodeType": "Return",
												"src": "6207:76:3"
											}
										]
									},
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "5786:173:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5973:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6009:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "6001:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6001:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6038:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "6025:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 569,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6025:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6066:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "6052:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 571,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6052:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:93:3"
									},
									"returnParameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "6108:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 574,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6108:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:14:3"
									},
									"scope": 724,
									"src": "5964:326:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "6566:101:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 605,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "6604:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "6612:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6618:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 604,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															611,
															640
														],
														"referencedDeclaration": 640,
														"src": "6583:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6583:77:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 603,
												"id": 609,
												"nodeType": "Return",
												"src": "6576:84:3"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "6296:168:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6478:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6507:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "6499:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6499:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6528:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "6515:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 598,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6515:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:35:3"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "6552:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 601,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6552:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6551:14:3"
									},
									"scope": 724,
									"src": "6469:198:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "7008:170:3",
										"statements": [
											{
												"assignments": [
													624,
													626
												],
												"declarations": [
													{
														"constant": false,
														"id": 624,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7024:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 639,
														"src": "7019:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 623,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7019:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 626,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7046:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 639,
														"src": "7033:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 625,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7033:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 631,
												"initialValue": {
													"arguments": [
														{
															"id": 629,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "7080:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 627,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "7060:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 628,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7067:12:3",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7060:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7060:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7018:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 633,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "7129:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "7137:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 635,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "7146:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 636,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "7158:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 632,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "7102:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7102:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 622,
												"id": 638,
												"nodeType": "Return",
												"src": "7095:76:3"
											}
										]
									},
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "6673:175:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6862:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6900:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "6892:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6892:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6929:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "6916:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 615,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6916:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6957:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "6943:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 617,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6943:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6882:93:3"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "6994:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 620,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6994:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6993:14:3"
									},
									"scope": 724,
									"src": "6853:325:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 678,
										"nodeType": "Block",
										"src": "7660:434:3",
										"statements": [
											{
												"condition": {
													"id": 654,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 645,
													"src": "7674:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 676,
													"nodeType": "Block",
													"src": "8030:58:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 672,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 647,
																		"src": "8052:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 673,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 649,
																		"src": "8064:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 671,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 723,
																	"src": "8044:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8044:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 675,
															"nodeType": "ExpressionStatement",
															"src": "8044:33:3"
														}
													]
												},
												"id": 677,
												"nodeType": "IfStatement",
												"src": "7670:418:3",
												"trueBody": {
													"id": 670,
													"nodeType": "Block",
													"src": "7683:341:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 655,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 647,
																		"src": "7701:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7712:6:3",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7701:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7722:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7701:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 667,
															"nodeType": "IfStatement",
															"src": "7697:286:3",
															"trueBody": {
																"id": 666,
																"nodeType": "Block",
																"src": "7725:258:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 661,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 643,
																							"src": "7927:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 660,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 412,
																						"src": "7916:10:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 662,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7916:18:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 663,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7936:31:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 659,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7908:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7908:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 665,
																		"nodeType": "ExpressionStatement",
																		"src": "7908:60:3"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 668,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 647,
																"src": "8003:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 653,
															"id": 669,
															"nodeType": "Return",
															"src": "7996:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "7184:277:3",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7475:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7519:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "7511:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7540:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "7535:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 644,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7535:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7570:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "7557:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 646,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7557:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7604:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "7590:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 648,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7590:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:121:3"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "7646:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 651,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7646:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7645:14:3"
									},
									"scope": 724,
									"src": "7466:628:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "8475:135:3",
										"statements": [
											{
												"condition": {
													"id": 691,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 682,
													"src": "8489:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 700,
													"nodeType": "Block",
													"src": "8546:58:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 696,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 684,
																		"src": "8568:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 697,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 686,
																		"src": "8580:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 695,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 723,
																	"src": "8560:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8560:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 699,
															"nodeType": "ExpressionStatement",
															"src": "8560:33:3"
														}
													]
												},
												"id": 701,
												"nodeType": "IfStatement",
												"src": "8485:119:3",
												"trueBody": {
													"id": 694,
													"nodeType": "Block",
													"src": "8498:42:3",
													"statements": [
														{
															"expression": {
																"id": 692,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 684,
																"src": "8519:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 690,
															"id": 693,
															"nodeType": "Return",
															"src": "8512:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "8100:210:3",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8324:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8355:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "8350:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 681,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8350:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8385:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "8372:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 683,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8372:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8419:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "8405:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 685,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8405:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:97:3"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "8461:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 688,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8461:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8460:14:3"
									},
									"scope": 724,
									"src": "8315:295:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "8699:457:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 710,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "8775:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8786:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8775:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 712,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8795:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8775:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 720,
													"nodeType": "Block",
													"src": "9105:45:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 717,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 707,
																		"src": "9126:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 716,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9119:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9119:20:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 719,
															"nodeType": "ExpressionStatement",
															"src": "9119:20:3"
														}
													]
												},
												"id": 721,
												"nodeType": "IfStatement",
												"src": "8771:379:3",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "8798:301:3",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8956:133:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8974:40:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9003:10:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8997:5:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8997:17:3"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "8978:15:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9042:2:3",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9046:10:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9038:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9038:19:3"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9059:15:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9031:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9031:44:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9031:44:3"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 705,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9003:10:3",
																	"valueSize": 1
																},
																{
																	"declaration": 705,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9046:10:3",
																	"valueSize": 1
																}
															],
															"id": 714,
															"nodeType": "InlineAssembly",
															"src": "8947:142:3"
														}
													]
												}
											}
										]
									},
									"id": 723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8625:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8646:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "8633:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 704,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8633:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8672:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "8658:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 706,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8658:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8632:53:3"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8699:0:3"
									},
									"scope": 724,
									"src": "8616:540:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 725,
							"src": "194:8964:3",
							"usedErrors": []
						}
					],
					"src": "101:9058:3"
				},
				"id": 3
			},
			"contracts/stake.sol": {
				"ast": {
					"absolutePath": "contracts/stake.sol",
					"exportedSymbols": {
						"Address": [
							724
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"SafeERC20": [
							394
						],
						"Stake": [
							862
						]
					},
					"id": 863,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 726,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 727,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 863,
							"sourceUnit": 395,
							"src": "63:65:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 728,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 863,
							"sourceUnit": 78,
							"src": "129:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Stake",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 862,
							"linearizedBaseContracts": [
								862
							],
							"name": "Stake",
							"nameLocation": "196:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 732,
									"libraryName": {
										"id": 729,
										"name": "SafeERC20",
										"nameLocations": [
											"214:9:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 394,
										"src": "214:9:4"
									},
									"nodeType": "UsingForDirective",
									"src": "208:27:4",
									"typeName": {
										"id": 731,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 730,
											"name": "IERC20",
											"nameLocations": [
												"228:6:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "228:6:4"
										},
										"referencedDeclaration": 77,
										"src": "228:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"id": 735,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "256:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 862,
									"src": "241:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 734,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 733,
											"name": "IERC20",
											"nameLocations": [
												"241:6:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "241:6:4"
										},
										"referencedDeclaration": 77,
										"src": "241:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "60c7dc47",
									"id": 737,
									"mutability": "mutable",
									"name": "stakeAmount",
									"nameLocation": "284:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 862,
									"src": "269:26:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 736,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "269:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "bf2ed60bd5b5965d685680c01195c9514e4382e28e3a5a2d2d5244bf59411b93",
									"id": 743,
									"name": "Withdrawal",
									"nameLocation": "309:10:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "325:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "320:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "320:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"indexed": false,
												"mutability": "mutable",
												"name": "when",
												"nameLocation": "338:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "333:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 740,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "333:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "319:24:4"
									},
									"src": "303:41:4"
								},
								{
									"anonymous": false,
									"eventSelector": "160ffcaa807f78c8b4983836e2396338d073e75695ac448aa0b5e4a75b210b1d",
									"id": 751,
									"name": "StakeEvent",
									"nameLocation": "356:10:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"indexed": false,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "375:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "367:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "367:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "389:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "381:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "381:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "401:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "393:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:42:4"
									},
									"src": "350:59:4"
								},
								{
									"body": {
										"id": 786,
										"nodeType": "Block",
										"src": "487:161:4",
										"statements": [
											{
												"expression": {
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 758,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "497:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 760,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 753,
																"src": "512:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 759,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "505:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "505:20:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "497:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 763,
												"nodeType": "ExpressionStatement",
												"src": "497:28:4"
											},
											{
												"expression": {
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 764,
														"name": "stakeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "535:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 769,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 765,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "549:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 768,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "557:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 767,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "563:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "557:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "549:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "535:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 771,
												"nodeType": "ExpressionStatement",
												"src": "535:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 777,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "611:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Stake_$862",
																		"typeString": "contract Stake"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Stake_$862",
																		"typeString": "contract Stake"
																	}
																],
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "603:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 775,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "603:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "603:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_100000000000000000000000000000_by_1",
																"typeString": "int_const 100000000000000000000000000000"
															},
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "313030303030303030303030",
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "617:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000_by_1",
																	"typeString": "int_const 100000000000"
																},
																"value": "100000000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "632:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3138",
																	"id": 781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "638:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"src": "632:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "617:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100000000000000000000000000000_by_1",
																"typeString": "int_const 100000000000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_100000000000000000000000000000_by_1",
																"typeString": "int_const 100000000000000000000000000000"
															}
														],
														"expression": {
															"id": 772,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "575:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "581:21:4",
														"memberName": "safeIncreaseAllowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 251,
														"src": "575:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "575:66:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 785,
												"nodeType": "ExpressionStatement",
												"src": "575:66:4"
											}
										]
									},
									"id": 787,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "444:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "436:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "474:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "466:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "466:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "426:59:4"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "487:0:4"
									},
									"scope": 862,
									"src": "415:233:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "682:2:4",
										"statements": []
									},
									"id": 791,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:2:4"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "682:0:4"
									},
									"scope": 862,
									"src": "655:29:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "746:280:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 797,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "764:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "774:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "764:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616d6f756e74206e6f74207a65726f",
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "777:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_140bae4f8715a807acc7e68bdc7fe377eba924c9bb144e20fce4b39cbf7b2904",
																"typeString": "literal_string \"amount not zero\""
															},
															"value": "amount not zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_140bae4f8715a807acc7e68bdc7fe377eba924c9bb144e20fce4b39cbf7b2904",
																"typeString": "literal_string \"amount not zero\""
															}
														],
														"id": 796,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "756:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "756:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 802,
												"nodeType": "ExpressionStatement",
												"src": "756:39:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 806,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "829:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "833:6:4",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "829:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 804,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 735,
																		"src": "813:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "819:9:4",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 34,
																	"src": "813:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "813:27:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 809,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "844:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "813:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7374616b696e67206661696c64",
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "852:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_19eb53a159731d5cd526bcf2b33a4e6a536e0c5ce4dbfdea64f3b575dbfe6291",
																"typeString": "literal_string \"staking faild\""
															},
															"value": "staking faild"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_19eb53a159731d5cd526bcf2b33a4e6a536e0c5ce4dbfdea64f3b575dbfe6291",
																"typeString": "literal_string \"staking faild\""
															}
														],
														"id": 803,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "805:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "805:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "805:63:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 815,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "894:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "898:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "894:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 819,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "914:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Stake_$862",
																		"typeString": "contract Stake"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Stake_$862",
																		"typeString": "contract Stake"
																	}
																],
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "906:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 817,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "906:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "906:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 821,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "921:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 822,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "931:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3138",
																	"id": 823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "937:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"src": "931:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "921:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 814,
														"name": "StakeEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "883:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "883:57:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 827,
												"nodeType": "EmitStatement",
												"src": "878:62:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 831,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "973:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "977:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "973:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 835,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "993:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Stake_$862",
																		"typeString": "contract Stake"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Stake_$862",
																		"typeString": "contract Stake"
																	}
																],
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "985:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 833,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "985:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "985:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 837,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "1000:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1010:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3138",
																	"id": 839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1016:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"src": "1010:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "1000:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 828,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "950:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 830,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "956:16:4",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 171,
														"src": "950:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "950:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 843,
												"nodeType": "ExpressionStatement",
												"src": "950:69:4"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "714:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "728:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "720:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "720:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "719:17:4"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "746:0:4"
									},
									"scope": 862,
									"src": "705:321:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 860,
										"nodeType": "Block",
										"src": "1081:125:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 853,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1135:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Stake_$862",
																		"typeString": "contract Stake"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Stake_$862",
																		"typeString": "contract Stake"
																	}
																],
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1127:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 851,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1127:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1127:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 855,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1154:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1158:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1154:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 857,
															"name": "stakeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "1178:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 848,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "1091:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 850,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1097:16:4",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 171,
														"src": "1091:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1091:108:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 859,
												"nodeType": "ExpressionStatement",
												"src": "1091:108:4"
											}
										]
									},
									"functionSelector": "73cf575a",
									"id": 861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unStake",
									"nameLocation": "1062:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1069:2:4"
									},
									"returnParameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:0:4"
									},
									"scope": 862,
									"src": "1053:153:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 863,
							"src": "187:1023:4",
							"usedErrors": []
						}
					],
					"src": "39:1171:4"
				},
				"id": 4
			}
		}
	}
}